/*
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.V1Icon;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Locale;

import org.openapitools.client.JSON;

/**
 * Represents an exchange.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-15T06:05:28.372374100Z[Etc/UTC]", comments = "Generator version: 7.16.0")
public class V1Exchange {
  public static final String SERIALIZED_NAME_EXCHANGE_ID = "exchange_id";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_ID)
  @javax.annotation.Nullable
  private String exchangeId;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  @javax.annotation.Nullable
  private String website;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_DATA_START = "data_start";
  @SerializedName(SERIALIZED_NAME_DATA_START)
  @javax.annotation.Nullable
  private String dataStart;

  public static final String SERIALIZED_NAME_DATA_END = "data_end";
  @SerializedName(SERIALIZED_NAME_DATA_END)
  @javax.annotation.Nullable
  private String dataEnd;

  public static final String SERIALIZED_NAME_DATA_QUOTE_START = "data_quote_start";
  @SerializedName(SERIALIZED_NAME_DATA_QUOTE_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataQuoteStart;

  public static final String SERIALIZED_NAME_DATA_QUOTE_END = "data_quote_end";
  @SerializedName(SERIALIZED_NAME_DATA_QUOTE_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataQuoteEnd;

  public static final String SERIALIZED_NAME_DATA_ORDERBOOK_START = "data_orderbook_start";
  @SerializedName(SERIALIZED_NAME_DATA_ORDERBOOK_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataOrderbookStart;

  public static final String SERIALIZED_NAME_DATA_ORDERBOOK_END = "data_orderbook_end";
  @SerializedName(SERIALIZED_NAME_DATA_ORDERBOOK_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataOrderbookEnd;

  public static final String SERIALIZED_NAME_DATA_TRADE_START = "data_trade_start";
  @SerializedName(SERIALIZED_NAME_DATA_TRADE_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataTradeStart;

  public static final String SERIALIZED_NAME_DATA_TRADE_END = "data_trade_end";
  @SerializedName(SERIALIZED_NAME_DATA_TRADE_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataTradeEnd;

  public static final String SERIALIZED_NAME_DATA_TRADE_COUNT = "data_trade_count";
  @SerializedName(SERIALIZED_NAME_DATA_TRADE_COUNT)
  @javax.annotation.Nullable
  private Long dataTradeCount;

  public static final String SERIALIZED_NAME_DATA_SYMBOLS_COUNT = "data_symbols_count";
  @SerializedName(SERIALIZED_NAME_DATA_SYMBOLS_COUNT)
  @javax.annotation.Nullable
  private Long dataSymbolsCount;

  public static final String SERIALIZED_NAME_VOLUME1HRS_USD = "volume_1hrs_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1HRS_USD)
  @javax.annotation.Nullable
  private Double volume1hrsUsd;

  public static final String SERIALIZED_NAME_VOLUME1DAY_USD = "volume_1day_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1DAY_USD)
  @javax.annotation.Nullable
  private Double volume1dayUsd;

  public static final String SERIALIZED_NAME_VOLUME1MTH_USD = "volume_1mth_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1MTH_USD)
  @javax.annotation.Nullable
  private Double volume1mthUsd;

  public static final String SERIALIZED_NAME_METRIC_ID = "metric_id";
  @SerializedName(SERIALIZED_NAME_METRIC_ID)
  @javax.annotation.Nullable
  private List<String> metricId;

  public static final String SERIALIZED_NAME_ICONS = "icons";
  @SerializedName(SERIALIZED_NAME_ICONS)
  @javax.annotation.Nullable
  private List<V1Icon> icons;

  public static final String SERIALIZED_NAME_RANK = "rank";
  @SerializedName(SERIALIZED_NAME_RANK)
  @javax.annotation.Nullable
  private Double rank;

  public static final String SERIALIZED_NAME_INTEGRATION_STATUS = "integration_status";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_STATUS)
  @javax.annotation.Nullable
  private String integrationStatus;

  public V1Exchange() {
  }

  public V1Exchange(
     String dataStart, 
     String dataEnd, 
     List<V1Icon> icons
  ) {
    this();
    this.dataStart = dataStart;
    this.dataEnd = dataEnd;
    this.icons = icons;
  }

  public V1Exchange exchangeId(@javax.annotation.Nullable String exchangeId) {
    this.exchangeId = exchangeId;
    return this;
  }

  /**
   * Gets or sets the exchange ID.
   * @return exchangeId
   */
  @javax.annotation.Nullable
  public String getExchangeId() {
    return exchangeId;
  }

  public void setExchangeId(@javax.annotation.Nullable String exchangeId) {
    this.exchangeId = exchangeId;
  }


  public V1Exchange website(@javax.annotation.Nullable String website) {
    this.website = website;
    return this;
  }

  /**
   * Gets or sets the website URL of the exchange.
   * @return website
   */
  @javax.annotation.Nullable
  public String getWebsite() {
    return website;
  }

  public void setWebsite(@javax.annotation.Nullable String website) {
    this.website = website;
  }


  public V1Exchange name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Gets or sets the name of the exchange.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  /**
   * Get dataStart
   * @return dataStart
   */
  @javax.annotation.Nullable
  public String getDataStart() {
    return dataStart;
  }



  /**
   * Get dataEnd
   * @return dataEnd
   */
  @javax.annotation.Nullable
  public String getDataEnd() {
    return dataEnd;
  }



  public V1Exchange dataQuoteStart(@javax.annotation.Nullable OffsetDateTime dataQuoteStart) {
    this.dataQuoteStart = dataQuoteStart;
    return this;
  }

  /**
   * Gets or sets the start date of quote data.
   * @return dataQuoteStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataQuoteStart() {
    return dataQuoteStart;
  }

  public void setDataQuoteStart(@javax.annotation.Nullable OffsetDateTime dataQuoteStart) {
    this.dataQuoteStart = dataQuoteStart;
  }


  public V1Exchange dataQuoteEnd(@javax.annotation.Nullable OffsetDateTime dataQuoteEnd) {
    this.dataQuoteEnd = dataQuoteEnd;
    return this;
  }

  /**
   * Gets or sets the end date of quote data.
   * @return dataQuoteEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataQuoteEnd() {
    return dataQuoteEnd;
  }

  public void setDataQuoteEnd(@javax.annotation.Nullable OffsetDateTime dataQuoteEnd) {
    this.dataQuoteEnd = dataQuoteEnd;
  }


  public V1Exchange dataOrderbookStart(@javax.annotation.Nullable OffsetDateTime dataOrderbookStart) {
    this.dataOrderbookStart = dataOrderbookStart;
    return this;
  }

  /**
   * Gets or sets the start date of order book data.
   * @return dataOrderbookStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataOrderbookStart() {
    return dataOrderbookStart;
  }

  public void setDataOrderbookStart(@javax.annotation.Nullable OffsetDateTime dataOrderbookStart) {
    this.dataOrderbookStart = dataOrderbookStart;
  }


  public V1Exchange dataOrderbookEnd(@javax.annotation.Nullable OffsetDateTime dataOrderbookEnd) {
    this.dataOrderbookEnd = dataOrderbookEnd;
    return this;
  }

  /**
   * Gets or sets the end date of order book data.
   * @return dataOrderbookEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataOrderbookEnd() {
    return dataOrderbookEnd;
  }

  public void setDataOrderbookEnd(@javax.annotation.Nullable OffsetDateTime dataOrderbookEnd) {
    this.dataOrderbookEnd = dataOrderbookEnd;
  }


  public V1Exchange dataTradeStart(@javax.annotation.Nullable OffsetDateTime dataTradeStart) {
    this.dataTradeStart = dataTradeStart;
    return this;
  }

  /**
   * Gets or sets the start date of trade data.
   * @return dataTradeStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataTradeStart() {
    return dataTradeStart;
  }

  public void setDataTradeStart(@javax.annotation.Nullable OffsetDateTime dataTradeStart) {
    this.dataTradeStart = dataTradeStart;
  }


  public V1Exchange dataTradeEnd(@javax.annotation.Nullable OffsetDateTime dataTradeEnd) {
    this.dataTradeEnd = dataTradeEnd;
    return this;
  }

  /**
   * Gets or sets the end date of trade data.
   * @return dataTradeEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataTradeEnd() {
    return dataTradeEnd;
  }

  public void setDataTradeEnd(@javax.annotation.Nullable OffsetDateTime dataTradeEnd) {
    this.dataTradeEnd = dataTradeEnd;
  }


  public V1Exchange dataTradeCount(@javax.annotation.Nullable Long dataTradeCount) {
    this.dataTradeCount = dataTradeCount;
    return this;
  }

  /**
   * Gets or sets the number of trades.
   * @return dataTradeCount
   */
  @javax.annotation.Nullable
  public Long getDataTradeCount() {
    return dataTradeCount;
  }

  public void setDataTradeCount(@javax.annotation.Nullable Long dataTradeCount) {
    this.dataTradeCount = dataTradeCount;
  }


  public V1Exchange dataSymbolsCount(@javax.annotation.Nullable Long dataSymbolsCount) {
    this.dataSymbolsCount = dataSymbolsCount;
    return this;
  }

  /**
   * Gets or sets the number of symbols.
   * @return dataSymbolsCount
   */
  @javax.annotation.Nullable
  public Long getDataSymbolsCount() {
    return dataSymbolsCount;
  }

  public void setDataSymbolsCount(@javax.annotation.Nullable Long dataSymbolsCount) {
    this.dataSymbolsCount = dataSymbolsCount;
  }


  public V1Exchange volume1hrsUsd(@javax.annotation.Nullable Double volume1hrsUsd) {
    this.volume1hrsUsd = volume1hrsUsd;
    return this;
  }

  /**
   * Gets or sets the USD volume in the last 1 hour.
   * @return volume1hrsUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1hrsUsd() {
    return volume1hrsUsd;
  }

  public void setVolume1hrsUsd(@javax.annotation.Nullable Double volume1hrsUsd) {
    this.volume1hrsUsd = volume1hrsUsd;
  }


  public V1Exchange volume1dayUsd(@javax.annotation.Nullable Double volume1dayUsd) {
    this.volume1dayUsd = volume1dayUsd;
    return this;
  }

  /**
   * Gets or sets the USD volume in the last 1 day.
   * @return volume1dayUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1dayUsd() {
    return volume1dayUsd;
  }

  public void setVolume1dayUsd(@javax.annotation.Nullable Double volume1dayUsd) {
    this.volume1dayUsd = volume1dayUsd;
  }


  public V1Exchange volume1mthUsd(@javax.annotation.Nullable Double volume1mthUsd) {
    this.volume1mthUsd = volume1mthUsd;
    return this;
  }

  /**
   * Gets or sets the USD volume in the last 1 month.
   * @return volume1mthUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1mthUsd() {
    return volume1mthUsd;
  }

  public void setVolume1mthUsd(@javax.annotation.Nullable Double volume1mthUsd) {
    this.volume1mthUsd = volume1mthUsd;
  }


  public V1Exchange metricId(@javax.annotation.Nullable List<String> metricId) {
    this.metricId = metricId;
    return this;
  }

  public V1Exchange addMetricIdItem(String metricIdItem) {
    if (this.metricId == null) {
      this.metricId = new ArrayList<>();
    }
    this.metricId.add(metricIdItem);
    return this;
  }

  /**
   * Gets or sets the list of metric IDs.
   * @return metricId
   */
  @javax.annotation.Nullable
  public List<String> getMetricId() {
    return metricId;
  }

  public void setMetricId(@javax.annotation.Nullable List<String> metricId) {
    this.metricId = metricId;
  }


  /**
   * Gets or sets the list of icons for the exchange.
   * @return icons
   */
  @javax.annotation.Nullable
  public List<V1Icon> getIcons() {
    return icons;
  }



  public V1Exchange rank(@javax.annotation.Nullable Double rank) {
    this.rank = rank;
    return this;
  }

  /**
   * Rank of the exchange.
   * @return rank
   */
  @javax.annotation.Nullable
  public Double getRank() {
    return rank;
  }

  public void setRank(@javax.annotation.Nullable Double rank) {
    this.rank = rank;
  }


  public V1Exchange integrationStatus(@javax.annotation.Nullable String integrationStatus) {
    this.integrationStatus = integrationStatus;
    return this;
  }

  /**
   * Status of the integration
   * @return integrationStatus
   */
  @javax.annotation.Nullable
  public String getIntegrationStatus() {
    return integrationStatus;
  }

  public void setIntegrationStatus(@javax.annotation.Nullable String integrationStatus) {
    this.integrationStatus = integrationStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Exchange v1Exchange = (V1Exchange) o;
    return Objects.equals(this.exchangeId, v1Exchange.exchangeId) &&
        Objects.equals(this.website, v1Exchange.website) &&
        Objects.equals(this.name, v1Exchange.name) &&
        Objects.equals(this.dataStart, v1Exchange.dataStart) &&
        Objects.equals(this.dataEnd, v1Exchange.dataEnd) &&
        Objects.equals(this.dataQuoteStart, v1Exchange.dataQuoteStart) &&
        Objects.equals(this.dataQuoteEnd, v1Exchange.dataQuoteEnd) &&
        Objects.equals(this.dataOrderbookStart, v1Exchange.dataOrderbookStart) &&
        Objects.equals(this.dataOrderbookEnd, v1Exchange.dataOrderbookEnd) &&
        Objects.equals(this.dataTradeStart, v1Exchange.dataTradeStart) &&
        Objects.equals(this.dataTradeEnd, v1Exchange.dataTradeEnd) &&
        Objects.equals(this.dataTradeCount, v1Exchange.dataTradeCount) &&
        Objects.equals(this.dataSymbolsCount, v1Exchange.dataSymbolsCount) &&
        Objects.equals(this.volume1hrsUsd, v1Exchange.volume1hrsUsd) &&
        Objects.equals(this.volume1dayUsd, v1Exchange.volume1dayUsd) &&
        Objects.equals(this.volume1mthUsd, v1Exchange.volume1mthUsd) &&
        Objects.equals(this.metricId, v1Exchange.metricId) &&
        Objects.equals(this.icons, v1Exchange.icons) &&
        Objects.equals(this.rank, v1Exchange.rank) &&
        Objects.equals(this.integrationStatus, v1Exchange.integrationStatus);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(exchangeId, website, name, dataStart, dataEnd, dataQuoteStart, dataQuoteEnd, dataOrderbookStart, dataOrderbookEnd, dataTradeStart, dataTradeEnd, dataTradeCount, dataSymbolsCount, volume1hrsUsd, volume1dayUsd, volume1mthUsd, metricId, icons, rank, integrationStatus);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Exchange {\n");
    sb.append("    exchangeId: ").append(toIndentedString(exchangeId)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dataStart: ").append(toIndentedString(dataStart)).append("\n");
    sb.append("    dataEnd: ").append(toIndentedString(dataEnd)).append("\n");
    sb.append("    dataQuoteStart: ").append(toIndentedString(dataQuoteStart)).append("\n");
    sb.append("    dataQuoteEnd: ").append(toIndentedString(dataQuoteEnd)).append("\n");
    sb.append("    dataOrderbookStart: ").append(toIndentedString(dataOrderbookStart)).append("\n");
    sb.append("    dataOrderbookEnd: ").append(toIndentedString(dataOrderbookEnd)).append("\n");
    sb.append("    dataTradeStart: ").append(toIndentedString(dataTradeStart)).append("\n");
    sb.append("    dataTradeEnd: ").append(toIndentedString(dataTradeEnd)).append("\n");
    sb.append("    dataTradeCount: ").append(toIndentedString(dataTradeCount)).append("\n");
    sb.append("    dataSymbolsCount: ").append(toIndentedString(dataSymbolsCount)).append("\n");
    sb.append("    volume1hrsUsd: ").append(toIndentedString(volume1hrsUsd)).append("\n");
    sb.append("    volume1dayUsd: ").append(toIndentedString(volume1dayUsd)).append("\n");
    sb.append("    volume1mthUsd: ").append(toIndentedString(volume1mthUsd)).append("\n");
    sb.append("    metricId: ").append(toIndentedString(metricId)).append("\n");
    sb.append("    icons: ").append(toIndentedString(icons)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    integrationStatus: ").append(toIndentedString(integrationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("exchange_id", "website", "name", "data_start", "data_end", "data_quote_start", "data_quote_end", "data_orderbook_start", "data_orderbook_end", "data_trade_start", "data_trade_end", "data_trade_count", "data_symbols_count", "volume_1hrs_usd", "volume_1day_usd", "volume_1mth_usd", "metric_id", "icons", "rank", "integration_status"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to V1Exchange
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1Exchange.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The required field(s) %s in V1Exchange is not found in the empty JSON string", V1Exchange.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1Exchange.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The field `%s` in the JSON string is not defined in the `V1Exchange` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("exchange_id") != null && !jsonObj.get("exchange_id").isJsonNull()) && !jsonObj.get("exchange_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `exchange_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchange_id").toString()));
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("data_start") != null && !jsonObj.get("data_start").isJsonNull()) && !jsonObj.get("data_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `data_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data_start").toString()));
      }
      if ((jsonObj.get("data_end") != null && !jsonObj.get("data_end").isJsonNull()) && !jsonObj.get("data_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `data_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data_end").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("metric_id") != null && !jsonObj.get("metric_id").isJsonNull() && !jsonObj.get("metric_id").isJsonArray()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `metric_id` to be an array in the JSON string but got `%s`", jsonObj.get("metric_id").toString()));
      }
      if (jsonObj.get("icons") != null && !jsonObj.get("icons").isJsonNull()) {
        JsonArray jsonArrayicons = jsonObj.getAsJsonArray("icons");
        if (jsonArrayicons != null) {
          // ensure the json data is an array
          if (!jsonObj.get("icons").isJsonArray()) {
            throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `icons` to be an array in the JSON string but got `%s`", jsonObj.get("icons").toString()));
          }

          // validate the optional field `icons` (array)
          for (int i = 0; i < jsonArrayicons.size(); i++) {
            V1Icon.validateJsonElement(jsonArrayicons.get(i));
          };
        }
      }
      if ((jsonObj.get("integration_status") != null && !jsonObj.get("integration_status").isJsonNull()) && !jsonObj.get("integration_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `integration_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integration_status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1Exchange.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1Exchange' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1Exchange> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1Exchange.class));

       return (TypeAdapter<T>) new TypeAdapter<V1Exchange>() {
           @Override
           public void write(JsonWriter out, V1Exchange value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1Exchange read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of V1Exchange given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of V1Exchange
   * @throws IOException if the JSON string is invalid with respect to V1Exchange
   */
  public static V1Exchange fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1Exchange.class);
  }

  /**
   * Convert an instance of V1Exchange to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

