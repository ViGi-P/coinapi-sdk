/*
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Locale;

import org.openapitools.client.JSON;

/**
 * Represents a symbol data model.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-24T06:05:22.687583242Z[Etc/UTC]", comments = "Generator version: 7.16.0")
public class V1Symbol {
  public static final String SERIALIZED_NAME_SYMBOL_ID = "symbol_id";
  @SerializedName(SERIALIZED_NAME_SYMBOL_ID)
  @javax.annotation.Nullable
  private String symbolId;

  public static final String SERIALIZED_NAME_EXCHANGE_ID = "exchange_id";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_ID)
  @javax.annotation.Nullable
  private String exchangeId;

  public static final String SERIALIZED_NAME_SYMBOL_TYPE = "symbol_type";
  @SerializedName(SERIALIZED_NAME_SYMBOL_TYPE)
  @javax.annotation.Nullable
  private String symbolType;

  public static final String SERIALIZED_NAME_ASSET_ID_BASE = "asset_id_base";
  @SerializedName(SERIALIZED_NAME_ASSET_ID_BASE)
  @javax.annotation.Nullable
  private String assetIdBase;

  public static final String SERIALIZED_NAME_ASSET_ID_QUOTE = "asset_id_quote";
  @SerializedName(SERIALIZED_NAME_ASSET_ID_QUOTE)
  @javax.annotation.Nullable
  private String assetIdQuote;

  public static final String SERIALIZED_NAME_ASSET_ID_UNIT = "asset_id_unit";
  @SerializedName(SERIALIZED_NAME_ASSET_ID_UNIT)
  @javax.annotation.Nullable
  private String assetIdUnit;

  public static final String SERIALIZED_NAME_FUTURE_CONTRACT_UNIT = "future_contract_unit";
  @SerializedName(SERIALIZED_NAME_FUTURE_CONTRACT_UNIT)
  @javax.annotation.Nullable
  private Double futureContractUnit;

  public static final String SERIALIZED_NAME_FUTURE_CONTRACT_UNIT_ASSET = "future_contract_unit_asset";
  @SerializedName(SERIALIZED_NAME_FUTURE_CONTRACT_UNIT_ASSET)
  @javax.annotation.Nullable
  private String futureContractUnitAsset;

  public static final String SERIALIZED_NAME_FUTURE_DELIVERY_TIME = "future_delivery_time";
  @SerializedName(SERIALIZED_NAME_FUTURE_DELIVERY_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime futureDeliveryTime;

  public static final String SERIALIZED_NAME_OPTION_TYPE_IS_CALL = "option_type_is_call";
  @SerializedName(SERIALIZED_NAME_OPTION_TYPE_IS_CALL)
  @javax.annotation.Nullable
  private Boolean optionTypeIsCall;

  public static final String SERIALIZED_NAME_OPTION_STRIKE_PRICE = "option_strike_price";
  @SerializedName(SERIALIZED_NAME_OPTION_STRIKE_PRICE)
  @javax.annotation.Nullable
  private Double optionStrikePrice;

  public static final String SERIALIZED_NAME_OPTION_CONTRACT_UNIT = "option_contract_unit";
  @SerializedName(SERIALIZED_NAME_OPTION_CONTRACT_UNIT)
  @javax.annotation.Nullable
  private Double optionContractUnit;

  public static final String SERIALIZED_NAME_OPTION_EXERCISE_STYLE = "option_exercise_style";
  @SerializedName(SERIALIZED_NAME_OPTION_EXERCISE_STYLE)
  @javax.annotation.Nullable
  private String optionExerciseStyle;

  public static final String SERIALIZED_NAME_OPTION_EXPIRATION_TIME = "option_expiration_time";
  @SerializedName(SERIALIZED_NAME_OPTION_EXPIRATION_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime optionExpirationTime;

  public static final String SERIALIZED_NAME_CONTRACT_DELIVERY_TIME = "contract_delivery_time";
  @SerializedName(SERIALIZED_NAME_CONTRACT_DELIVERY_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime contractDeliveryTime;

  public static final String SERIALIZED_NAME_CONTRACT_UNIT = "contract_unit";
  @SerializedName(SERIALIZED_NAME_CONTRACT_UNIT)
  @javax.annotation.Nullable
  private Double contractUnit;

  public static final String SERIALIZED_NAME_CONTRACT_UNIT_ASSET = "contract_unit_asset";
  @SerializedName(SERIALIZED_NAME_CONTRACT_UNIT_ASSET)
  @javax.annotation.Nullable
  private String contractUnitAsset;

  public static final String SERIALIZED_NAME_CONTRACT_ID = "contract_id";
  @SerializedName(SERIALIZED_NAME_CONTRACT_ID)
  @javax.annotation.Nullable
  private String contractId;

  public static final String SERIALIZED_NAME_CONTRACT_DISPLAY_NAME = "contract_display_name";
  @SerializedName(SERIALIZED_NAME_CONTRACT_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String contractDisplayName;

  public static final String SERIALIZED_NAME_CONTRACT_DISPLAY_DESCRIPTION = "contract_display_description";
  @SerializedName(SERIALIZED_NAME_CONTRACT_DISPLAY_DESCRIPTION)
  @javax.annotation.Nullable
  private String contractDisplayDescription;

  public static final String SERIALIZED_NAME_DATA_START = "data_start";
  @SerializedName(SERIALIZED_NAME_DATA_START)
  @javax.annotation.Nullable
  private String dataStart;

  public static final String SERIALIZED_NAME_DATA_END = "data_end";
  @SerializedName(SERIALIZED_NAME_DATA_END)
  @javax.annotation.Nullable
  private String dataEnd;

  public static final String SERIALIZED_NAME_DATA_QUOTE_START = "data_quote_start";
  @SerializedName(SERIALIZED_NAME_DATA_QUOTE_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataQuoteStart;

  public static final String SERIALIZED_NAME_DATA_QUOTE_END = "data_quote_end";
  @SerializedName(SERIALIZED_NAME_DATA_QUOTE_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataQuoteEnd;

  public static final String SERIALIZED_NAME_DATA_ORDERBOOK_START = "data_orderbook_start";
  @SerializedName(SERIALIZED_NAME_DATA_ORDERBOOK_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataOrderbookStart;

  public static final String SERIALIZED_NAME_DATA_ORDERBOOK_END = "data_orderbook_end";
  @SerializedName(SERIALIZED_NAME_DATA_ORDERBOOK_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataOrderbookEnd;

  public static final String SERIALIZED_NAME_DATA_TRADE_START = "data_trade_start";
  @SerializedName(SERIALIZED_NAME_DATA_TRADE_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataTradeStart;

  public static final String SERIALIZED_NAME_DATA_TRADE_END = "data_trade_end";
  @SerializedName(SERIALIZED_NAME_DATA_TRADE_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataTradeEnd;

  public static final String SERIALIZED_NAME_INDEX_ID = "index_id";
  @SerializedName(SERIALIZED_NAME_INDEX_ID)
  @javax.annotation.Nullable
  private String indexId;

  public static final String SERIALIZED_NAME_INDEX_DISPLAY_NAME = "index_display_name";
  @SerializedName(SERIALIZED_NAME_INDEX_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String indexDisplayName;

  public static final String SERIALIZED_NAME_INDEX_DISPLAY_DESCRIPTION = "index_display_description";
  @SerializedName(SERIALIZED_NAME_INDEX_DISPLAY_DESCRIPTION)
  @javax.annotation.Nullable
  private String indexDisplayDescription;

  public static final String SERIALIZED_NAME_VOLUME1HRS = "volume_1hrs";
  @SerializedName(SERIALIZED_NAME_VOLUME1HRS)
  @javax.annotation.Nullable
  private Double volume1hrs;

  public static final String SERIALIZED_NAME_VOLUME1HRS_USD = "volume_1hrs_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1HRS_USD)
  @javax.annotation.Nullable
  private Double volume1hrsUsd;

  public static final String SERIALIZED_NAME_VOLUME1DAY = "volume_1day";
  @SerializedName(SERIALIZED_NAME_VOLUME1DAY)
  @javax.annotation.Nullable
  private Double volume1day;

  public static final String SERIALIZED_NAME_VOLUME1DAY_USD = "volume_1day_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1DAY_USD)
  @javax.annotation.Nullable
  private Double volume1dayUsd;

  public static final String SERIALIZED_NAME_VOLUME1MTH = "volume_1mth";
  @SerializedName(SERIALIZED_NAME_VOLUME1MTH)
  @javax.annotation.Nullable
  private Double volume1mth;

  public static final String SERIALIZED_NAME_VOLUME1MTH_USD = "volume_1mth_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1MTH_USD)
  @javax.annotation.Nullable
  private Double volume1mthUsd;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  @javax.annotation.Nullable
  private Double price;

  public static final String SERIALIZED_NAME_SYMBOL_ID_EXCHANGE = "symbol_id_exchange";
  @SerializedName(SERIALIZED_NAME_SYMBOL_ID_EXCHANGE)
  @javax.annotation.Nullable
  private String symbolIdExchange;

  public static final String SERIALIZED_NAME_ASSET_ID_BASE_EXCHANGE = "asset_id_base_exchange";
  @SerializedName(SERIALIZED_NAME_ASSET_ID_BASE_EXCHANGE)
  @javax.annotation.Nullable
  private String assetIdBaseExchange;

  public static final String SERIALIZED_NAME_ASSET_ID_QUOTE_EXCHANGE = "asset_id_quote_exchange";
  @SerializedName(SERIALIZED_NAME_ASSET_ID_QUOTE_EXCHANGE)
  @javax.annotation.Nullable
  private String assetIdQuoteExchange;

  public static final String SERIALIZED_NAME_PRICE_PRECISION = "price_precision";
  @SerializedName(SERIALIZED_NAME_PRICE_PRECISION)
  @javax.annotation.Nullable
  private Double pricePrecision;

  public static final String SERIALIZED_NAME_SIZE_PRECISION = "size_precision";
  @SerializedName(SERIALIZED_NAME_SIZE_PRECISION)
  @javax.annotation.Nullable
  private Double sizePrecision;

  public static final String SERIALIZED_NAME_RAW_KVP = "raw_kvp";
  @SerializedName(SERIALIZED_NAME_RAW_KVP)
  @javax.annotation.Nullable
  private Map<String, String> rawKvp;

  public static final String SERIALIZED_NAME_VOLUME_TO_USD = "volume_to_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME_TO_USD)
  @javax.annotation.Nullable
  private Double volumeToUsd;

  public static final String SERIALIZED_NAME_SYMBOL_ID_INT = "symbol_id_int";
  @SerializedName(SERIALIZED_NAME_SYMBOL_ID_INT)
  @javax.annotation.Nullable
  private Integer symbolIdInt;

  public V1Symbol() {
  }

  public V1Symbol(
     String dataStart, 
     String dataEnd, 
     Integer symbolIdInt
  ) {
    this();
    this.dataStart = dataStart;
    this.dataEnd = dataEnd;
    this.symbolIdInt = symbolIdInt;
  }

  public V1Symbol symbolId(@javax.annotation.Nullable String symbolId) {
    this.symbolId = symbolId;
    return this;
  }

  /**
   * The symbol identifier.
   * @return symbolId
   */
  @javax.annotation.Nullable
  public String getSymbolId() {
    return symbolId;
  }

  public void setSymbolId(@javax.annotation.Nullable String symbolId) {
    this.symbolId = symbolId;
  }


  public V1Symbol exchangeId(@javax.annotation.Nullable String exchangeId) {
    this.exchangeId = exchangeId;
    return this;
  }

  /**
   * The exchange identifier.
   * @return exchangeId
   */
  @javax.annotation.Nullable
  public String getExchangeId() {
    return exchangeId;
  }

  public void setExchangeId(@javax.annotation.Nullable String exchangeId) {
    this.exchangeId = exchangeId;
  }


  public V1Symbol symbolType(@javax.annotation.Nullable String symbolType) {
    this.symbolType = symbolType;
    return this;
  }

  /**
   * The symbol type.
   * @return symbolType
   */
  @javax.annotation.Nullable
  public String getSymbolType() {
    return symbolType;
  }

  public void setSymbolType(@javax.annotation.Nullable String symbolType) {
    this.symbolType = symbolType;
  }


  public V1Symbol assetIdBase(@javax.annotation.Nullable String assetIdBase) {
    this.assetIdBase = assetIdBase;
    return this;
  }

  /**
   * The base asset identifier.
   * @return assetIdBase
   */
  @javax.annotation.Nullable
  public String getAssetIdBase() {
    return assetIdBase;
  }

  public void setAssetIdBase(@javax.annotation.Nullable String assetIdBase) {
    this.assetIdBase = assetIdBase;
  }


  public V1Symbol assetIdQuote(@javax.annotation.Nullable String assetIdQuote) {
    this.assetIdQuote = assetIdQuote;
    return this;
  }

  /**
   * The quote asset identifier.
   * @return assetIdQuote
   */
  @javax.annotation.Nullable
  public String getAssetIdQuote() {
    return assetIdQuote;
  }

  public void setAssetIdQuote(@javax.annotation.Nullable String assetIdQuote) {
    this.assetIdQuote = assetIdQuote;
  }


  public V1Symbol assetIdUnit(@javax.annotation.Nullable String assetIdUnit) {
    this.assetIdUnit = assetIdUnit;
    return this;
  }

  /**
   * The unit asset identifier.
   * @return assetIdUnit
   */
  @javax.annotation.Nullable
  public String getAssetIdUnit() {
    return assetIdUnit;
  }

  public void setAssetIdUnit(@javax.annotation.Nullable String assetIdUnit) {
    this.assetIdUnit = assetIdUnit;
  }


  public V1Symbol futureContractUnit(@javax.annotation.Nullable Double futureContractUnit) {
    this.futureContractUnit = futureContractUnit;
    return this;
  }

  /**
   * The contract unit for futures.
   * @return futureContractUnit
   */
  @javax.annotation.Nullable
  public Double getFutureContractUnit() {
    return futureContractUnit;
  }

  public void setFutureContractUnit(@javax.annotation.Nullable Double futureContractUnit) {
    this.futureContractUnit = futureContractUnit;
  }


  public V1Symbol futureContractUnitAsset(@javax.annotation.Nullable String futureContractUnitAsset) {
    this.futureContractUnitAsset = futureContractUnitAsset;
    return this;
  }

  /**
   * The asset used as the unit for futures contract.
   * @return futureContractUnitAsset
   */
  @javax.annotation.Nullable
  public String getFutureContractUnitAsset() {
    return futureContractUnitAsset;
  }

  public void setFutureContractUnitAsset(@javax.annotation.Nullable String futureContractUnitAsset) {
    this.futureContractUnitAsset = futureContractUnitAsset;
  }


  public V1Symbol futureDeliveryTime(@javax.annotation.Nullable OffsetDateTime futureDeliveryTime) {
    this.futureDeliveryTime = futureDeliveryTime;
    return this;
  }

  /**
   * The future delivery time for futures contract.
   * @return futureDeliveryTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFutureDeliveryTime() {
    return futureDeliveryTime;
  }

  public void setFutureDeliveryTime(@javax.annotation.Nullable OffsetDateTime futureDeliveryTime) {
    this.futureDeliveryTime = futureDeliveryTime;
  }


  public V1Symbol optionTypeIsCall(@javax.annotation.Nullable Boolean optionTypeIsCall) {
    this.optionTypeIsCall = optionTypeIsCall;
    return this;
  }

  /**
   * Indicates whether the option type is a call.
   * @return optionTypeIsCall
   */
  @javax.annotation.Nullable
  public Boolean getOptionTypeIsCall() {
    return optionTypeIsCall;
  }

  public void setOptionTypeIsCall(@javax.annotation.Nullable Boolean optionTypeIsCall) {
    this.optionTypeIsCall = optionTypeIsCall;
  }


  public V1Symbol optionStrikePrice(@javax.annotation.Nullable Double optionStrikePrice) {
    this.optionStrikePrice = optionStrikePrice;
    return this;
  }

  /**
   * The strike price for options.
   * @return optionStrikePrice
   */
  @javax.annotation.Nullable
  public Double getOptionStrikePrice() {
    return optionStrikePrice;
  }

  public void setOptionStrikePrice(@javax.annotation.Nullable Double optionStrikePrice) {
    this.optionStrikePrice = optionStrikePrice;
  }


  public V1Symbol optionContractUnit(@javax.annotation.Nullable Double optionContractUnit) {
    this.optionContractUnit = optionContractUnit;
    return this;
  }

  /**
   * The contract unit for options.
   * @return optionContractUnit
   */
  @javax.annotation.Nullable
  public Double getOptionContractUnit() {
    return optionContractUnit;
  }

  public void setOptionContractUnit(@javax.annotation.Nullable Double optionContractUnit) {
    this.optionContractUnit = optionContractUnit;
  }


  public V1Symbol optionExerciseStyle(@javax.annotation.Nullable String optionExerciseStyle) {
    this.optionExerciseStyle = optionExerciseStyle;
    return this;
  }

  /**
   * The exercise style for options.
   * @return optionExerciseStyle
   */
  @javax.annotation.Nullable
  public String getOptionExerciseStyle() {
    return optionExerciseStyle;
  }

  public void setOptionExerciseStyle(@javax.annotation.Nullable String optionExerciseStyle) {
    this.optionExerciseStyle = optionExerciseStyle;
  }


  public V1Symbol optionExpirationTime(@javax.annotation.Nullable OffsetDateTime optionExpirationTime) {
    this.optionExpirationTime = optionExpirationTime;
    return this;
  }

  /**
   * The expiration time for options.
   * @return optionExpirationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOptionExpirationTime() {
    return optionExpirationTime;
  }

  public void setOptionExpirationTime(@javax.annotation.Nullable OffsetDateTime optionExpirationTime) {
    this.optionExpirationTime = optionExpirationTime;
  }


  public V1Symbol contractDeliveryTime(@javax.annotation.Nullable OffsetDateTime contractDeliveryTime) {
    this.contractDeliveryTime = contractDeliveryTime;
    return this;
  }

  /**
   * The delivery time for contracts.
   * @return contractDeliveryTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getContractDeliveryTime() {
    return contractDeliveryTime;
  }

  public void setContractDeliveryTime(@javax.annotation.Nullable OffsetDateTime contractDeliveryTime) {
    this.contractDeliveryTime = contractDeliveryTime;
  }


  public V1Symbol contractUnit(@javax.annotation.Nullable Double contractUnit) {
    this.contractUnit = contractUnit;
    return this;
  }

  /**
   * The contract unit for contracts.
   * @return contractUnit
   */
  @javax.annotation.Nullable
  public Double getContractUnit() {
    return contractUnit;
  }

  public void setContractUnit(@javax.annotation.Nullable Double contractUnit) {
    this.contractUnit = contractUnit;
  }


  public V1Symbol contractUnitAsset(@javax.annotation.Nullable String contractUnitAsset) {
    this.contractUnitAsset = contractUnitAsset;
    return this;
  }

  /**
   * The asset used as the unit for contracts.
   * @return contractUnitAsset
   */
  @javax.annotation.Nullable
  public String getContractUnitAsset() {
    return contractUnitAsset;
  }

  public void setContractUnitAsset(@javax.annotation.Nullable String contractUnitAsset) {
    this.contractUnitAsset = contractUnitAsset;
  }


  public V1Symbol contractId(@javax.annotation.Nullable String contractId) {
    this.contractId = contractId;
    return this;
  }

  /**
   * The contract identifier.
   * @return contractId
   */
  @javax.annotation.Nullable
  public String getContractId() {
    return contractId;
  }

  public void setContractId(@javax.annotation.Nullable String contractId) {
    this.contractId = contractId;
  }


  public V1Symbol contractDisplayName(@javax.annotation.Nullable String contractDisplayName) {
    this.contractDisplayName = contractDisplayName;
    return this;
  }

  /**
   * The display name of the contract.
   * @return contractDisplayName
   */
  @javax.annotation.Nullable
  public String getContractDisplayName() {
    return contractDisplayName;
  }

  public void setContractDisplayName(@javax.annotation.Nullable String contractDisplayName) {
    this.contractDisplayName = contractDisplayName;
  }


  public V1Symbol contractDisplayDescription(@javax.annotation.Nullable String contractDisplayDescription) {
    this.contractDisplayDescription = contractDisplayDescription;
    return this;
  }

  /**
   * The display description of the contract.
   * @return contractDisplayDescription
   */
  @javax.annotation.Nullable
  public String getContractDisplayDescription() {
    return contractDisplayDescription;
  }

  public void setContractDisplayDescription(@javax.annotation.Nullable String contractDisplayDescription) {
    this.contractDisplayDescription = contractDisplayDescription;
  }


  /**
   * Get dataStart
   * @return dataStart
   */
  @javax.annotation.Nullable
  public String getDataStart() {
    return dataStart;
  }



  /**
   * Get dataEnd
   * @return dataEnd
   */
  @javax.annotation.Nullable
  public String getDataEnd() {
    return dataEnd;
  }



  public V1Symbol dataQuoteStart(@javax.annotation.Nullable OffsetDateTime dataQuoteStart) {
    this.dataQuoteStart = dataQuoteStart;
    return this;
  }

  /**
   * The start date of quote data.
   * @return dataQuoteStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataQuoteStart() {
    return dataQuoteStart;
  }

  public void setDataQuoteStart(@javax.annotation.Nullable OffsetDateTime dataQuoteStart) {
    this.dataQuoteStart = dataQuoteStart;
  }


  public V1Symbol dataQuoteEnd(@javax.annotation.Nullable OffsetDateTime dataQuoteEnd) {
    this.dataQuoteEnd = dataQuoteEnd;
    return this;
  }

  /**
   * The end date of quote data.
   * @return dataQuoteEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataQuoteEnd() {
    return dataQuoteEnd;
  }

  public void setDataQuoteEnd(@javax.annotation.Nullable OffsetDateTime dataQuoteEnd) {
    this.dataQuoteEnd = dataQuoteEnd;
  }


  public V1Symbol dataOrderbookStart(@javax.annotation.Nullable OffsetDateTime dataOrderbookStart) {
    this.dataOrderbookStart = dataOrderbookStart;
    return this;
  }

  /**
   * The start date of order book data.
   * @return dataOrderbookStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataOrderbookStart() {
    return dataOrderbookStart;
  }

  public void setDataOrderbookStart(@javax.annotation.Nullable OffsetDateTime dataOrderbookStart) {
    this.dataOrderbookStart = dataOrderbookStart;
  }


  public V1Symbol dataOrderbookEnd(@javax.annotation.Nullable OffsetDateTime dataOrderbookEnd) {
    this.dataOrderbookEnd = dataOrderbookEnd;
    return this;
  }

  /**
   * The end date of order book data.
   * @return dataOrderbookEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataOrderbookEnd() {
    return dataOrderbookEnd;
  }

  public void setDataOrderbookEnd(@javax.annotation.Nullable OffsetDateTime dataOrderbookEnd) {
    this.dataOrderbookEnd = dataOrderbookEnd;
  }


  public V1Symbol dataTradeStart(@javax.annotation.Nullable OffsetDateTime dataTradeStart) {
    this.dataTradeStart = dataTradeStart;
    return this;
  }

  /**
   * The start date of trade data.
   * @return dataTradeStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataTradeStart() {
    return dataTradeStart;
  }

  public void setDataTradeStart(@javax.annotation.Nullable OffsetDateTime dataTradeStart) {
    this.dataTradeStart = dataTradeStart;
  }


  public V1Symbol dataTradeEnd(@javax.annotation.Nullable OffsetDateTime dataTradeEnd) {
    this.dataTradeEnd = dataTradeEnd;
    return this;
  }

  /**
   * The end date of trade data.
   * @return dataTradeEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataTradeEnd() {
    return dataTradeEnd;
  }

  public void setDataTradeEnd(@javax.annotation.Nullable OffsetDateTime dataTradeEnd) {
    this.dataTradeEnd = dataTradeEnd;
  }


  public V1Symbol indexId(@javax.annotation.Nullable String indexId) {
    this.indexId = indexId;
    return this;
  }

  /**
   * The index identifier.
   * @return indexId
   */
  @javax.annotation.Nullable
  public String getIndexId() {
    return indexId;
  }

  public void setIndexId(@javax.annotation.Nullable String indexId) {
    this.indexId = indexId;
  }


  public V1Symbol indexDisplayName(@javax.annotation.Nullable String indexDisplayName) {
    this.indexDisplayName = indexDisplayName;
    return this;
  }

  /**
   * The display name of the index.
   * @return indexDisplayName
   */
  @javax.annotation.Nullable
  public String getIndexDisplayName() {
    return indexDisplayName;
  }

  public void setIndexDisplayName(@javax.annotation.Nullable String indexDisplayName) {
    this.indexDisplayName = indexDisplayName;
  }


  public V1Symbol indexDisplayDescription(@javax.annotation.Nullable String indexDisplayDescription) {
    this.indexDisplayDescription = indexDisplayDescription;
    return this;
  }

  /**
   * The display description of the index.
   * @return indexDisplayDescription
   */
  @javax.annotation.Nullable
  public String getIndexDisplayDescription() {
    return indexDisplayDescription;
  }

  public void setIndexDisplayDescription(@javax.annotation.Nullable String indexDisplayDescription) {
    this.indexDisplayDescription = indexDisplayDescription;
  }


  public V1Symbol volume1hrs(@javax.annotation.Nullable Double volume1hrs) {
    this.volume1hrs = volume1hrs;
    return this;
  }

  /**
   * The volume in the last 1 hour.
   * @return volume1hrs
   */
  @javax.annotation.Nullable
  public Double getVolume1hrs() {
    return volume1hrs;
  }

  public void setVolume1hrs(@javax.annotation.Nullable Double volume1hrs) {
    this.volume1hrs = volume1hrs;
  }


  public V1Symbol volume1hrsUsd(@javax.annotation.Nullable Double volume1hrsUsd) {
    this.volume1hrsUsd = volume1hrsUsd;
    return this;
  }

  /**
   * The volume in USD in the last 1 hour.
   * @return volume1hrsUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1hrsUsd() {
    return volume1hrsUsd;
  }

  public void setVolume1hrsUsd(@javax.annotation.Nullable Double volume1hrsUsd) {
    this.volume1hrsUsd = volume1hrsUsd;
  }


  public V1Symbol volume1day(@javax.annotation.Nullable Double volume1day) {
    this.volume1day = volume1day;
    return this;
  }

  /**
   * The volume in the last 1 day.
   * @return volume1day
   */
  @javax.annotation.Nullable
  public Double getVolume1day() {
    return volume1day;
  }

  public void setVolume1day(@javax.annotation.Nullable Double volume1day) {
    this.volume1day = volume1day;
  }


  public V1Symbol volume1dayUsd(@javax.annotation.Nullable Double volume1dayUsd) {
    this.volume1dayUsd = volume1dayUsd;
    return this;
  }

  /**
   * The volume in USD in the last 1 day.
   * @return volume1dayUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1dayUsd() {
    return volume1dayUsd;
  }

  public void setVolume1dayUsd(@javax.annotation.Nullable Double volume1dayUsd) {
    this.volume1dayUsd = volume1dayUsd;
  }


  public V1Symbol volume1mth(@javax.annotation.Nullable Double volume1mth) {
    this.volume1mth = volume1mth;
    return this;
  }

  /**
   * The volume in the last 1 month.
   * @return volume1mth
   */
  @javax.annotation.Nullable
  public Double getVolume1mth() {
    return volume1mth;
  }

  public void setVolume1mth(@javax.annotation.Nullable Double volume1mth) {
    this.volume1mth = volume1mth;
  }


  public V1Symbol volume1mthUsd(@javax.annotation.Nullable Double volume1mthUsd) {
    this.volume1mthUsd = volume1mthUsd;
    return this;
  }

  /**
   * The volume in USD in the last 1 month.
   * @return volume1mthUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1mthUsd() {
    return volume1mthUsd;
  }

  public void setVolume1mthUsd(@javax.annotation.Nullable Double volume1mthUsd) {
    this.volume1mthUsd = volume1mthUsd;
  }


  public V1Symbol price(@javax.annotation.Nullable Double price) {
    this.price = price;
    return this;
  }

  /**
   * The price.
   * @return price
   */
  @javax.annotation.Nullable
  public Double getPrice() {
    return price;
  }

  public void setPrice(@javax.annotation.Nullable Double price) {
    this.price = price;
  }


  public V1Symbol symbolIdExchange(@javax.annotation.Nullable String symbolIdExchange) {
    this.symbolIdExchange = symbolIdExchange;
    return this;
  }

  /**
   * The symbol identifier in the exchange.
   * @return symbolIdExchange
   */
  @javax.annotation.Nullable
  public String getSymbolIdExchange() {
    return symbolIdExchange;
  }

  public void setSymbolIdExchange(@javax.annotation.Nullable String symbolIdExchange) {
    this.symbolIdExchange = symbolIdExchange;
  }


  public V1Symbol assetIdBaseExchange(@javax.annotation.Nullable String assetIdBaseExchange) {
    this.assetIdBaseExchange = assetIdBaseExchange;
    return this;
  }

  /**
   * The base asset identifier in the exchange.
   * @return assetIdBaseExchange
   */
  @javax.annotation.Nullable
  public String getAssetIdBaseExchange() {
    return assetIdBaseExchange;
  }

  public void setAssetIdBaseExchange(@javax.annotation.Nullable String assetIdBaseExchange) {
    this.assetIdBaseExchange = assetIdBaseExchange;
  }


  public V1Symbol assetIdQuoteExchange(@javax.annotation.Nullable String assetIdQuoteExchange) {
    this.assetIdQuoteExchange = assetIdQuoteExchange;
    return this;
  }

  /**
   * The quote asset identifier in the exchange.
   * @return assetIdQuoteExchange
   */
  @javax.annotation.Nullable
  public String getAssetIdQuoteExchange() {
    return assetIdQuoteExchange;
  }

  public void setAssetIdQuoteExchange(@javax.annotation.Nullable String assetIdQuoteExchange) {
    this.assetIdQuoteExchange = assetIdQuoteExchange;
  }


  public V1Symbol pricePrecision(@javax.annotation.Nullable Double pricePrecision) {
    this.pricePrecision = pricePrecision;
    return this;
  }

  /**
   * The price precision.
   * @return pricePrecision
   */
  @javax.annotation.Nullable
  public Double getPricePrecision() {
    return pricePrecision;
  }

  public void setPricePrecision(@javax.annotation.Nullable Double pricePrecision) {
    this.pricePrecision = pricePrecision;
  }


  public V1Symbol sizePrecision(@javax.annotation.Nullable Double sizePrecision) {
    this.sizePrecision = sizePrecision;
    return this;
  }

  /**
   * The size precision.
   * @return sizePrecision
   */
  @javax.annotation.Nullable
  public Double getSizePrecision() {
    return sizePrecision;
  }

  public void setSizePrecision(@javax.annotation.Nullable Double sizePrecision) {
    this.sizePrecision = sizePrecision;
  }


  public V1Symbol rawKvp(@javax.annotation.Nullable Map<String, String> rawKvp) {
    this.rawKvp = rawKvp;
    return this;
  }

  public V1Symbol putRawKvpItem(String key, String rawKvpItem) {
    if (this.rawKvp == null) {
      this.rawKvp = new HashMap<>();
    }
    this.rawKvp.put(key, rawKvpItem);
    return this;
  }

  /**
   * Not normalized raw kvp data.
   * @return rawKvp
   */
  @javax.annotation.Nullable
  public Map<String, String> getRawKvp() {
    return rawKvp;
  }

  public void setRawKvp(@javax.annotation.Nullable Map<String, String> rawKvp) {
    this.rawKvp = rawKvp;
  }


  public V1Symbol volumeToUsd(@javax.annotation.Nullable Double volumeToUsd) {
    this.volumeToUsd = volumeToUsd;
    return this;
  }

  /**
   * Volume unit in USD.
   * @return volumeToUsd
   */
  @javax.annotation.Nullable
  public Double getVolumeToUsd() {
    return volumeToUsd;
  }

  public void setVolumeToUsd(@javax.annotation.Nullable Double volumeToUsd) {
    this.volumeToUsd = volumeToUsd;
  }


  /**
   * The symbol identifier in integer immutable format, used to correlate data across different APIs.
   * @return symbolIdInt
   */
  @javax.annotation.Nullable
  public Integer getSymbolIdInt() {
    return symbolIdInt;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Symbol v1Symbol = (V1Symbol) o;
    return Objects.equals(this.symbolId, v1Symbol.symbolId) &&
        Objects.equals(this.exchangeId, v1Symbol.exchangeId) &&
        Objects.equals(this.symbolType, v1Symbol.symbolType) &&
        Objects.equals(this.assetIdBase, v1Symbol.assetIdBase) &&
        Objects.equals(this.assetIdQuote, v1Symbol.assetIdQuote) &&
        Objects.equals(this.assetIdUnit, v1Symbol.assetIdUnit) &&
        Objects.equals(this.futureContractUnit, v1Symbol.futureContractUnit) &&
        Objects.equals(this.futureContractUnitAsset, v1Symbol.futureContractUnitAsset) &&
        Objects.equals(this.futureDeliveryTime, v1Symbol.futureDeliveryTime) &&
        Objects.equals(this.optionTypeIsCall, v1Symbol.optionTypeIsCall) &&
        Objects.equals(this.optionStrikePrice, v1Symbol.optionStrikePrice) &&
        Objects.equals(this.optionContractUnit, v1Symbol.optionContractUnit) &&
        Objects.equals(this.optionExerciseStyle, v1Symbol.optionExerciseStyle) &&
        Objects.equals(this.optionExpirationTime, v1Symbol.optionExpirationTime) &&
        Objects.equals(this.contractDeliveryTime, v1Symbol.contractDeliveryTime) &&
        Objects.equals(this.contractUnit, v1Symbol.contractUnit) &&
        Objects.equals(this.contractUnitAsset, v1Symbol.contractUnitAsset) &&
        Objects.equals(this.contractId, v1Symbol.contractId) &&
        Objects.equals(this.contractDisplayName, v1Symbol.contractDisplayName) &&
        Objects.equals(this.contractDisplayDescription, v1Symbol.contractDisplayDescription) &&
        Objects.equals(this.dataStart, v1Symbol.dataStart) &&
        Objects.equals(this.dataEnd, v1Symbol.dataEnd) &&
        Objects.equals(this.dataQuoteStart, v1Symbol.dataQuoteStart) &&
        Objects.equals(this.dataQuoteEnd, v1Symbol.dataQuoteEnd) &&
        Objects.equals(this.dataOrderbookStart, v1Symbol.dataOrderbookStart) &&
        Objects.equals(this.dataOrderbookEnd, v1Symbol.dataOrderbookEnd) &&
        Objects.equals(this.dataTradeStart, v1Symbol.dataTradeStart) &&
        Objects.equals(this.dataTradeEnd, v1Symbol.dataTradeEnd) &&
        Objects.equals(this.indexId, v1Symbol.indexId) &&
        Objects.equals(this.indexDisplayName, v1Symbol.indexDisplayName) &&
        Objects.equals(this.indexDisplayDescription, v1Symbol.indexDisplayDescription) &&
        Objects.equals(this.volume1hrs, v1Symbol.volume1hrs) &&
        Objects.equals(this.volume1hrsUsd, v1Symbol.volume1hrsUsd) &&
        Objects.equals(this.volume1day, v1Symbol.volume1day) &&
        Objects.equals(this.volume1dayUsd, v1Symbol.volume1dayUsd) &&
        Objects.equals(this.volume1mth, v1Symbol.volume1mth) &&
        Objects.equals(this.volume1mthUsd, v1Symbol.volume1mthUsd) &&
        Objects.equals(this.price, v1Symbol.price) &&
        Objects.equals(this.symbolIdExchange, v1Symbol.symbolIdExchange) &&
        Objects.equals(this.assetIdBaseExchange, v1Symbol.assetIdBaseExchange) &&
        Objects.equals(this.assetIdQuoteExchange, v1Symbol.assetIdQuoteExchange) &&
        Objects.equals(this.pricePrecision, v1Symbol.pricePrecision) &&
        Objects.equals(this.sizePrecision, v1Symbol.sizePrecision) &&
        Objects.equals(this.rawKvp, v1Symbol.rawKvp) &&
        Objects.equals(this.volumeToUsd, v1Symbol.volumeToUsd) &&
        Objects.equals(this.symbolIdInt, v1Symbol.symbolIdInt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbolId, exchangeId, symbolType, assetIdBase, assetIdQuote, assetIdUnit, futureContractUnit, futureContractUnitAsset, futureDeliveryTime, optionTypeIsCall, optionStrikePrice, optionContractUnit, optionExerciseStyle, optionExpirationTime, contractDeliveryTime, contractUnit, contractUnitAsset, contractId, contractDisplayName, contractDisplayDescription, dataStart, dataEnd, dataQuoteStart, dataQuoteEnd, dataOrderbookStart, dataOrderbookEnd, dataTradeStart, dataTradeEnd, indexId, indexDisplayName, indexDisplayDescription, volume1hrs, volume1hrsUsd, volume1day, volume1dayUsd, volume1mth, volume1mthUsd, price, symbolIdExchange, assetIdBaseExchange, assetIdQuoteExchange, pricePrecision, sizePrecision, rawKvp, volumeToUsd, symbolIdInt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Symbol {\n");
    sb.append("    symbolId: ").append(toIndentedString(symbolId)).append("\n");
    sb.append("    exchangeId: ").append(toIndentedString(exchangeId)).append("\n");
    sb.append("    symbolType: ").append(toIndentedString(symbolType)).append("\n");
    sb.append("    assetIdBase: ").append(toIndentedString(assetIdBase)).append("\n");
    sb.append("    assetIdQuote: ").append(toIndentedString(assetIdQuote)).append("\n");
    sb.append("    assetIdUnit: ").append(toIndentedString(assetIdUnit)).append("\n");
    sb.append("    futureContractUnit: ").append(toIndentedString(futureContractUnit)).append("\n");
    sb.append("    futureContractUnitAsset: ").append(toIndentedString(futureContractUnitAsset)).append("\n");
    sb.append("    futureDeliveryTime: ").append(toIndentedString(futureDeliveryTime)).append("\n");
    sb.append("    optionTypeIsCall: ").append(toIndentedString(optionTypeIsCall)).append("\n");
    sb.append("    optionStrikePrice: ").append(toIndentedString(optionStrikePrice)).append("\n");
    sb.append("    optionContractUnit: ").append(toIndentedString(optionContractUnit)).append("\n");
    sb.append("    optionExerciseStyle: ").append(toIndentedString(optionExerciseStyle)).append("\n");
    sb.append("    optionExpirationTime: ").append(toIndentedString(optionExpirationTime)).append("\n");
    sb.append("    contractDeliveryTime: ").append(toIndentedString(contractDeliveryTime)).append("\n");
    sb.append("    contractUnit: ").append(toIndentedString(contractUnit)).append("\n");
    sb.append("    contractUnitAsset: ").append(toIndentedString(contractUnitAsset)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    contractDisplayName: ").append(toIndentedString(contractDisplayName)).append("\n");
    sb.append("    contractDisplayDescription: ").append(toIndentedString(contractDisplayDescription)).append("\n");
    sb.append("    dataStart: ").append(toIndentedString(dataStart)).append("\n");
    sb.append("    dataEnd: ").append(toIndentedString(dataEnd)).append("\n");
    sb.append("    dataQuoteStart: ").append(toIndentedString(dataQuoteStart)).append("\n");
    sb.append("    dataQuoteEnd: ").append(toIndentedString(dataQuoteEnd)).append("\n");
    sb.append("    dataOrderbookStart: ").append(toIndentedString(dataOrderbookStart)).append("\n");
    sb.append("    dataOrderbookEnd: ").append(toIndentedString(dataOrderbookEnd)).append("\n");
    sb.append("    dataTradeStart: ").append(toIndentedString(dataTradeStart)).append("\n");
    sb.append("    dataTradeEnd: ").append(toIndentedString(dataTradeEnd)).append("\n");
    sb.append("    indexId: ").append(toIndentedString(indexId)).append("\n");
    sb.append("    indexDisplayName: ").append(toIndentedString(indexDisplayName)).append("\n");
    sb.append("    indexDisplayDescription: ").append(toIndentedString(indexDisplayDescription)).append("\n");
    sb.append("    volume1hrs: ").append(toIndentedString(volume1hrs)).append("\n");
    sb.append("    volume1hrsUsd: ").append(toIndentedString(volume1hrsUsd)).append("\n");
    sb.append("    volume1day: ").append(toIndentedString(volume1day)).append("\n");
    sb.append("    volume1dayUsd: ").append(toIndentedString(volume1dayUsd)).append("\n");
    sb.append("    volume1mth: ").append(toIndentedString(volume1mth)).append("\n");
    sb.append("    volume1mthUsd: ").append(toIndentedString(volume1mthUsd)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    symbolIdExchange: ").append(toIndentedString(symbolIdExchange)).append("\n");
    sb.append("    assetIdBaseExchange: ").append(toIndentedString(assetIdBaseExchange)).append("\n");
    sb.append("    assetIdQuoteExchange: ").append(toIndentedString(assetIdQuoteExchange)).append("\n");
    sb.append("    pricePrecision: ").append(toIndentedString(pricePrecision)).append("\n");
    sb.append("    sizePrecision: ").append(toIndentedString(sizePrecision)).append("\n");
    sb.append("    rawKvp: ").append(toIndentedString(rawKvp)).append("\n");
    sb.append("    volumeToUsd: ").append(toIndentedString(volumeToUsd)).append("\n");
    sb.append("    symbolIdInt: ").append(toIndentedString(symbolIdInt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("symbol_id", "exchange_id", "symbol_type", "asset_id_base", "asset_id_quote", "asset_id_unit", "future_contract_unit", "future_contract_unit_asset", "future_delivery_time", "option_type_is_call", "option_strike_price", "option_contract_unit", "option_exercise_style", "option_expiration_time", "contract_delivery_time", "contract_unit", "contract_unit_asset", "contract_id", "contract_display_name", "contract_display_description", "data_start", "data_end", "data_quote_start", "data_quote_end", "data_orderbook_start", "data_orderbook_end", "data_trade_start", "data_trade_end", "index_id", "index_display_name", "index_display_description", "volume_1hrs", "volume_1hrs_usd", "volume_1day", "volume_1day_usd", "volume_1mth", "volume_1mth_usd", "price", "symbol_id_exchange", "asset_id_base_exchange", "asset_id_quote_exchange", "price_precision", "size_precision", "raw_kvp", "volume_to_usd", "symbol_id_int"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to V1Symbol
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1Symbol.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The required field(s) %s in V1Symbol is not found in the empty JSON string", V1Symbol.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1Symbol.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The field `%s` in the JSON string is not defined in the `V1Symbol` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("symbol_id") != null && !jsonObj.get("symbol_id").isJsonNull()) && !jsonObj.get("symbol_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `symbol_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol_id").toString()));
      }
      if ((jsonObj.get("exchange_id") != null && !jsonObj.get("exchange_id").isJsonNull()) && !jsonObj.get("exchange_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `exchange_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchange_id").toString()));
      }
      if ((jsonObj.get("symbol_type") != null && !jsonObj.get("symbol_type").isJsonNull()) && !jsonObj.get("symbol_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `symbol_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol_type").toString()));
      }
      if ((jsonObj.get("asset_id_base") != null && !jsonObj.get("asset_id_base").isJsonNull()) && !jsonObj.get("asset_id_base").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `asset_id_base` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_id_base").toString()));
      }
      if ((jsonObj.get("asset_id_quote") != null && !jsonObj.get("asset_id_quote").isJsonNull()) && !jsonObj.get("asset_id_quote").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `asset_id_quote` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_id_quote").toString()));
      }
      if ((jsonObj.get("asset_id_unit") != null && !jsonObj.get("asset_id_unit").isJsonNull()) && !jsonObj.get("asset_id_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `asset_id_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_id_unit").toString()));
      }
      if ((jsonObj.get("future_contract_unit_asset") != null && !jsonObj.get("future_contract_unit_asset").isJsonNull()) && !jsonObj.get("future_contract_unit_asset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `future_contract_unit_asset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("future_contract_unit_asset").toString()));
      }
      if ((jsonObj.get("option_exercise_style") != null && !jsonObj.get("option_exercise_style").isJsonNull()) && !jsonObj.get("option_exercise_style").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `option_exercise_style` to be a primitive type in the JSON string but got `%s`", jsonObj.get("option_exercise_style").toString()));
      }
      if ((jsonObj.get("contract_unit_asset") != null && !jsonObj.get("contract_unit_asset").isJsonNull()) && !jsonObj.get("contract_unit_asset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `contract_unit_asset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contract_unit_asset").toString()));
      }
      if ((jsonObj.get("contract_id") != null && !jsonObj.get("contract_id").isJsonNull()) && !jsonObj.get("contract_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `contract_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contract_id").toString()));
      }
      if ((jsonObj.get("contract_display_name") != null && !jsonObj.get("contract_display_name").isJsonNull()) && !jsonObj.get("contract_display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `contract_display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contract_display_name").toString()));
      }
      if ((jsonObj.get("contract_display_description") != null && !jsonObj.get("contract_display_description").isJsonNull()) && !jsonObj.get("contract_display_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `contract_display_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contract_display_description").toString()));
      }
      if ((jsonObj.get("data_start") != null && !jsonObj.get("data_start").isJsonNull()) && !jsonObj.get("data_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `data_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data_start").toString()));
      }
      if ((jsonObj.get("data_end") != null && !jsonObj.get("data_end").isJsonNull()) && !jsonObj.get("data_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `data_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data_end").toString()));
      }
      if ((jsonObj.get("index_id") != null && !jsonObj.get("index_id").isJsonNull()) && !jsonObj.get("index_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `index_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("index_id").toString()));
      }
      if ((jsonObj.get("index_display_name") != null && !jsonObj.get("index_display_name").isJsonNull()) && !jsonObj.get("index_display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `index_display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("index_display_name").toString()));
      }
      if ((jsonObj.get("index_display_description") != null && !jsonObj.get("index_display_description").isJsonNull()) && !jsonObj.get("index_display_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `index_display_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("index_display_description").toString()));
      }
      if ((jsonObj.get("symbol_id_exchange") != null && !jsonObj.get("symbol_id_exchange").isJsonNull()) && !jsonObj.get("symbol_id_exchange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `symbol_id_exchange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol_id_exchange").toString()));
      }
      if ((jsonObj.get("asset_id_base_exchange") != null && !jsonObj.get("asset_id_base_exchange").isJsonNull()) && !jsonObj.get("asset_id_base_exchange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `asset_id_base_exchange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_id_base_exchange").toString()));
      }
      if ((jsonObj.get("asset_id_quote_exchange") != null && !jsonObj.get("asset_id_quote_exchange").isJsonNull()) && !jsonObj.get("asset_id_quote_exchange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `asset_id_quote_exchange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_id_quote_exchange").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1Symbol.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1Symbol' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1Symbol> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1Symbol.class));

       return (TypeAdapter<T>) new TypeAdapter<V1Symbol>() {
           @Override
           public void write(JsonWriter out, V1Symbol value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1Symbol read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of V1Symbol given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of V1Symbol
   * @throws IOException if the JSON string is invalid with respect to V1Symbol
   */
  public static V1Symbol fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1Symbol.class);
  }

  /**
   * Convert an instance of V1Symbol to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

