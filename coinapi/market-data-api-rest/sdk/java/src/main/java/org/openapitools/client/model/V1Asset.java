/*
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.V1ChainNetworkAddress;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Locale;

import org.openapitools.client.JSON;

/**
 * Represents an asset.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-24T06:05:22.687583242Z[Etc/UTC]", comments = "Generator version: 7.16.0")
public class V1Asset {
  public static final String SERIALIZED_NAME_ASSET_ID = "asset_id";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  @javax.annotation.Nullable
  private String assetId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_TYPE_IS_CRYPTO = "type_is_crypto";
  @SerializedName(SERIALIZED_NAME_TYPE_IS_CRYPTO)
  @javax.annotation.Nullable
  private Integer typeIsCrypto;

  public static final String SERIALIZED_NAME_DATA_QUOTE_START = "data_quote_start";
  @SerializedName(SERIALIZED_NAME_DATA_QUOTE_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataQuoteStart;

  public static final String SERIALIZED_NAME_DATA_QUOTE_END = "data_quote_end";
  @SerializedName(SERIALIZED_NAME_DATA_QUOTE_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataQuoteEnd;

  public static final String SERIALIZED_NAME_DATA_ORDERBOOK_START = "data_orderbook_start";
  @SerializedName(SERIALIZED_NAME_DATA_ORDERBOOK_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataOrderbookStart;

  public static final String SERIALIZED_NAME_DATA_ORDERBOOK_END = "data_orderbook_end";
  @SerializedName(SERIALIZED_NAME_DATA_ORDERBOOK_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataOrderbookEnd;

  public static final String SERIALIZED_NAME_DATA_TRADE_START = "data_trade_start";
  @SerializedName(SERIALIZED_NAME_DATA_TRADE_START)
  @javax.annotation.Nullable
  private OffsetDateTime dataTradeStart;

  public static final String SERIALIZED_NAME_DATA_TRADE_END = "data_trade_end";
  @SerializedName(SERIALIZED_NAME_DATA_TRADE_END)
  @javax.annotation.Nullable
  private OffsetDateTime dataTradeEnd;

  public static final String SERIALIZED_NAME_DATA_SYMBOLS_COUNT = "data_symbols_count";
  @SerializedName(SERIALIZED_NAME_DATA_SYMBOLS_COUNT)
  @javax.annotation.Nullable
  private Long dataSymbolsCount;

  public static final String SERIALIZED_NAME_VOLUME1HRS_USD = "volume_1hrs_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1HRS_USD)
  @javax.annotation.Nullable
  private Double volume1hrsUsd;

  public static final String SERIALIZED_NAME_VOLUME1DAY_USD = "volume_1day_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1DAY_USD)
  @javax.annotation.Nullable
  private Double volume1dayUsd;

  public static final String SERIALIZED_NAME_VOLUME1MTH_USD = "volume_1mth_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME1MTH_USD)
  @javax.annotation.Nullable
  private Double volume1mthUsd;

  public static final String SERIALIZED_NAME_PRICE_USD = "price_usd";
  @SerializedName(SERIALIZED_NAME_PRICE_USD)
  @javax.annotation.Nullable
  private Double priceUsd;

  public static final String SERIALIZED_NAME_ID_ICON = "id_icon";
  @SerializedName(SERIALIZED_NAME_ID_ICON)
  @javax.annotation.Nullable
  private UUID idIcon;

  public static final String SERIALIZED_NAME_SUPPLY_CURRENT = "supply_current";
  @SerializedName(SERIALIZED_NAME_SUPPLY_CURRENT)
  @javax.annotation.Nullable
  private Double supplyCurrent;

  public static final String SERIALIZED_NAME_SUPPLY_TOTAL = "supply_total";
  @SerializedName(SERIALIZED_NAME_SUPPLY_TOTAL)
  @javax.annotation.Nullable
  private Double supplyTotal;

  public static final String SERIALIZED_NAME_SUPPLY_MAX = "supply_max";
  @SerializedName(SERIALIZED_NAME_SUPPLY_MAX)
  @javax.annotation.Nullable
  private Double supplyMax;

  public static final String SERIALIZED_NAME_CHAIN_ADDRESSES = "chain_addresses";
  @SerializedName(SERIALIZED_NAME_CHAIN_ADDRESSES)
  @javax.annotation.Nullable
  private List<V1ChainNetworkAddress> chainAddresses;

  public static final String SERIALIZED_NAME_DATA_START = "data_start";
  @SerializedName(SERIALIZED_NAME_DATA_START)
  @javax.annotation.Nullable
  private String dataStart;

  public static final String SERIALIZED_NAME_DATA_END = "data_end";
  @SerializedName(SERIALIZED_NAME_DATA_END)
  @javax.annotation.Nullable
  private String dataEnd;

  public V1Asset() {
  }

  public V1Asset(
     String dataStart, 
     String dataEnd
  ) {
    this();
    this.dataStart = dataStart;
    this.dataEnd = dataEnd;
  }

  public V1Asset assetId(@javax.annotation.Nullable String assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * Gets or sets the asset ID.
   * @return assetId
   */
  @javax.annotation.Nullable
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(@javax.annotation.Nullable String assetId) {
    this.assetId = assetId;
  }


  public V1Asset name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Gets or sets the name of the asset.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public V1Asset typeIsCrypto(@javax.annotation.Nullable Integer typeIsCrypto) {
    this.typeIsCrypto = typeIsCrypto;
    return this;
  }

  /**
   * Gets or sets a value indicating whether the asset is a cryptocurrency.
   * @return typeIsCrypto
   */
  @javax.annotation.Nullable
  public Integer getTypeIsCrypto() {
    return typeIsCrypto;
  }

  public void setTypeIsCrypto(@javax.annotation.Nullable Integer typeIsCrypto) {
    this.typeIsCrypto = typeIsCrypto;
  }


  public V1Asset dataQuoteStart(@javax.annotation.Nullable OffsetDateTime dataQuoteStart) {
    this.dataQuoteStart = dataQuoteStart;
    return this;
  }

  /**
   * Gets or sets the start date of quote data.
   * @return dataQuoteStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataQuoteStart() {
    return dataQuoteStart;
  }

  public void setDataQuoteStart(@javax.annotation.Nullable OffsetDateTime dataQuoteStart) {
    this.dataQuoteStart = dataQuoteStart;
  }


  public V1Asset dataQuoteEnd(@javax.annotation.Nullable OffsetDateTime dataQuoteEnd) {
    this.dataQuoteEnd = dataQuoteEnd;
    return this;
  }

  /**
   * Gets or sets the end date of quote data.
   * @return dataQuoteEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataQuoteEnd() {
    return dataQuoteEnd;
  }

  public void setDataQuoteEnd(@javax.annotation.Nullable OffsetDateTime dataQuoteEnd) {
    this.dataQuoteEnd = dataQuoteEnd;
  }


  public V1Asset dataOrderbookStart(@javax.annotation.Nullable OffsetDateTime dataOrderbookStart) {
    this.dataOrderbookStart = dataOrderbookStart;
    return this;
  }

  /**
   * Gets or sets the start date of order book data.
   * @return dataOrderbookStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataOrderbookStart() {
    return dataOrderbookStart;
  }

  public void setDataOrderbookStart(@javax.annotation.Nullable OffsetDateTime dataOrderbookStart) {
    this.dataOrderbookStart = dataOrderbookStart;
  }


  public V1Asset dataOrderbookEnd(@javax.annotation.Nullable OffsetDateTime dataOrderbookEnd) {
    this.dataOrderbookEnd = dataOrderbookEnd;
    return this;
  }

  /**
   * Gets or sets the end date of order book data.
   * @return dataOrderbookEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataOrderbookEnd() {
    return dataOrderbookEnd;
  }

  public void setDataOrderbookEnd(@javax.annotation.Nullable OffsetDateTime dataOrderbookEnd) {
    this.dataOrderbookEnd = dataOrderbookEnd;
  }


  public V1Asset dataTradeStart(@javax.annotation.Nullable OffsetDateTime dataTradeStart) {
    this.dataTradeStart = dataTradeStart;
    return this;
  }

  /**
   * Gets or sets the start date of trade data.
   * @return dataTradeStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataTradeStart() {
    return dataTradeStart;
  }

  public void setDataTradeStart(@javax.annotation.Nullable OffsetDateTime dataTradeStart) {
    this.dataTradeStart = dataTradeStart;
  }


  public V1Asset dataTradeEnd(@javax.annotation.Nullable OffsetDateTime dataTradeEnd) {
    this.dataTradeEnd = dataTradeEnd;
    return this;
  }

  /**
   * Gets or sets the end date of trade data.
   * @return dataTradeEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataTradeEnd() {
    return dataTradeEnd;
  }

  public void setDataTradeEnd(@javax.annotation.Nullable OffsetDateTime dataTradeEnd) {
    this.dataTradeEnd = dataTradeEnd;
  }


  public V1Asset dataSymbolsCount(@javax.annotation.Nullable Long dataSymbolsCount) {
    this.dataSymbolsCount = dataSymbolsCount;
    return this;
  }

  /**
   * Gets or sets the number of symbols.
   * @return dataSymbolsCount
   */
  @javax.annotation.Nullable
  public Long getDataSymbolsCount() {
    return dataSymbolsCount;
  }

  public void setDataSymbolsCount(@javax.annotation.Nullable Long dataSymbolsCount) {
    this.dataSymbolsCount = dataSymbolsCount;
  }


  public V1Asset volume1hrsUsd(@javax.annotation.Nullable Double volume1hrsUsd) {
    this.volume1hrsUsd = volume1hrsUsd;
    return this;
  }

  /**
   * Gets or sets the USD volume in the last 1 hour.
   * @return volume1hrsUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1hrsUsd() {
    return volume1hrsUsd;
  }

  public void setVolume1hrsUsd(@javax.annotation.Nullable Double volume1hrsUsd) {
    this.volume1hrsUsd = volume1hrsUsd;
  }


  public V1Asset volume1dayUsd(@javax.annotation.Nullable Double volume1dayUsd) {
    this.volume1dayUsd = volume1dayUsd;
    return this;
  }

  /**
   * Gets or sets the USD volume in the last 1 day.
   * @return volume1dayUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1dayUsd() {
    return volume1dayUsd;
  }

  public void setVolume1dayUsd(@javax.annotation.Nullable Double volume1dayUsd) {
    this.volume1dayUsd = volume1dayUsd;
  }


  public V1Asset volume1mthUsd(@javax.annotation.Nullable Double volume1mthUsd) {
    this.volume1mthUsd = volume1mthUsd;
    return this;
  }

  /**
   * Gets or sets the USD volume in the last 1 month.
   * @return volume1mthUsd
   */
  @javax.annotation.Nullable
  public Double getVolume1mthUsd() {
    return volume1mthUsd;
  }

  public void setVolume1mthUsd(@javax.annotation.Nullable Double volume1mthUsd) {
    this.volume1mthUsd = volume1mthUsd;
  }


  public V1Asset priceUsd(@javax.annotation.Nullable Double priceUsd) {
    this.priceUsd = priceUsd;
    return this;
  }

  /**
   * Gets or sets the USD price of the asset.
   * @return priceUsd
   */
  @javax.annotation.Nullable
  public Double getPriceUsd() {
    return priceUsd;
  }

  public void setPriceUsd(@javax.annotation.Nullable Double priceUsd) {
    this.priceUsd = priceUsd;
  }


  public V1Asset idIcon(@javax.annotation.Nullable UUID idIcon) {
    this.idIcon = idIcon;
    return this;
  }

  /**
   * Gets or sets the ID of the icon for the asset.
   * @return idIcon
   */
  @javax.annotation.Nullable
  public UUID getIdIcon() {
    return idIcon;
  }

  public void setIdIcon(@javax.annotation.Nullable UUID idIcon) {
    this.idIcon = idIcon;
  }


  public V1Asset supplyCurrent(@javax.annotation.Nullable Double supplyCurrent) {
    this.supplyCurrent = supplyCurrent;
    return this;
  }

  /**
   * Gets or sets the current supply of the asset.
   * @return supplyCurrent
   */
  @javax.annotation.Nullable
  public Double getSupplyCurrent() {
    return supplyCurrent;
  }

  public void setSupplyCurrent(@javax.annotation.Nullable Double supplyCurrent) {
    this.supplyCurrent = supplyCurrent;
  }


  public V1Asset supplyTotal(@javax.annotation.Nullable Double supplyTotal) {
    this.supplyTotal = supplyTotal;
    return this;
  }

  /**
   * Gets or sets the total supply of the asset.
   * @return supplyTotal
   */
  @javax.annotation.Nullable
  public Double getSupplyTotal() {
    return supplyTotal;
  }

  public void setSupplyTotal(@javax.annotation.Nullable Double supplyTotal) {
    this.supplyTotal = supplyTotal;
  }


  public V1Asset supplyMax(@javax.annotation.Nullable Double supplyMax) {
    this.supplyMax = supplyMax;
    return this;
  }

  /**
   * Gets or sets the maximum supply of the asset.
   * @return supplyMax
   */
  @javax.annotation.Nullable
  public Double getSupplyMax() {
    return supplyMax;
  }

  public void setSupplyMax(@javax.annotation.Nullable Double supplyMax) {
    this.supplyMax = supplyMax;
  }


  public V1Asset chainAddresses(@javax.annotation.Nullable List<V1ChainNetworkAddress> chainAddresses) {
    this.chainAddresses = chainAddresses;
    return this;
  }

  public V1Asset addChainAddressesItem(V1ChainNetworkAddress chainAddressesItem) {
    if (this.chainAddresses == null) {
      this.chainAddresses = new ArrayList<>();
    }
    this.chainAddresses.add(chainAddressesItem);
    return this;
  }

  /**
   * 
   * @return chainAddresses
   */
  @javax.annotation.Nullable
  public List<V1ChainNetworkAddress> getChainAddresses() {
    return chainAddresses;
  }

  public void setChainAddresses(@javax.annotation.Nullable List<V1ChainNetworkAddress> chainAddresses) {
    this.chainAddresses = chainAddresses;
  }


  /**
   * Get dataStart
   * @return dataStart
   */
  @javax.annotation.Nullable
  public String getDataStart() {
    return dataStart;
  }



  /**
   * Get dataEnd
   * @return dataEnd
   */
  @javax.annotation.Nullable
  public String getDataEnd() {
    return dataEnd;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Asset v1Asset = (V1Asset) o;
    return Objects.equals(this.assetId, v1Asset.assetId) &&
        Objects.equals(this.name, v1Asset.name) &&
        Objects.equals(this.typeIsCrypto, v1Asset.typeIsCrypto) &&
        Objects.equals(this.dataQuoteStart, v1Asset.dataQuoteStart) &&
        Objects.equals(this.dataQuoteEnd, v1Asset.dataQuoteEnd) &&
        Objects.equals(this.dataOrderbookStart, v1Asset.dataOrderbookStart) &&
        Objects.equals(this.dataOrderbookEnd, v1Asset.dataOrderbookEnd) &&
        Objects.equals(this.dataTradeStart, v1Asset.dataTradeStart) &&
        Objects.equals(this.dataTradeEnd, v1Asset.dataTradeEnd) &&
        Objects.equals(this.dataSymbolsCount, v1Asset.dataSymbolsCount) &&
        Objects.equals(this.volume1hrsUsd, v1Asset.volume1hrsUsd) &&
        Objects.equals(this.volume1dayUsd, v1Asset.volume1dayUsd) &&
        Objects.equals(this.volume1mthUsd, v1Asset.volume1mthUsd) &&
        Objects.equals(this.priceUsd, v1Asset.priceUsd) &&
        Objects.equals(this.idIcon, v1Asset.idIcon) &&
        Objects.equals(this.supplyCurrent, v1Asset.supplyCurrent) &&
        Objects.equals(this.supplyTotal, v1Asset.supplyTotal) &&
        Objects.equals(this.supplyMax, v1Asset.supplyMax) &&
        Objects.equals(this.chainAddresses, v1Asset.chainAddresses) &&
        Objects.equals(this.dataStart, v1Asset.dataStart) &&
        Objects.equals(this.dataEnd, v1Asset.dataEnd);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetId, name, typeIsCrypto, dataQuoteStart, dataQuoteEnd, dataOrderbookStart, dataOrderbookEnd, dataTradeStart, dataTradeEnd, dataSymbolsCount, volume1hrsUsd, volume1dayUsd, volume1mthUsd, priceUsd, idIcon, supplyCurrent, supplyTotal, supplyMax, chainAddresses, dataStart, dataEnd);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Asset {\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    typeIsCrypto: ").append(toIndentedString(typeIsCrypto)).append("\n");
    sb.append("    dataQuoteStart: ").append(toIndentedString(dataQuoteStart)).append("\n");
    sb.append("    dataQuoteEnd: ").append(toIndentedString(dataQuoteEnd)).append("\n");
    sb.append("    dataOrderbookStart: ").append(toIndentedString(dataOrderbookStart)).append("\n");
    sb.append("    dataOrderbookEnd: ").append(toIndentedString(dataOrderbookEnd)).append("\n");
    sb.append("    dataTradeStart: ").append(toIndentedString(dataTradeStart)).append("\n");
    sb.append("    dataTradeEnd: ").append(toIndentedString(dataTradeEnd)).append("\n");
    sb.append("    dataSymbolsCount: ").append(toIndentedString(dataSymbolsCount)).append("\n");
    sb.append("    volume1hrsUsd: ").append(toIndentedString(volume1hrsUsd)).append("\n");
    sb.append("    volume1dayUsd: ").append(toIndentedString(volume1dayUsd)).append("\n");
    sb.append("    volume1mthUsd: ").append(toIndentedString(volume1mthUsd)).append("\n");
    sb.append("    priceUsd: ").append(toIndentedString(priceUsd)).append("\n");
    sb.append("    idIcon: ").append(toIndentedString(idIcon)).append("\n");
    sb.append("    supplyCurrent: ").append(toIndentedString(supplyCurrent)).append("\n");
    sb.append("    supplyTotal: ").append(toIndentedString(supplyTotal)).append("\n");
    sb.append("    supplyMax: ").append(toIndentedString(supplyMax)).append("\n");
    sb.append("    chainAddresses: ").append(toIndentedString(chainAddresses)).append("\n");
    sb.append("    dataStart: ").append(toIndentedString(dataStart)).append("\n");
    sb.append("    dataEnd: ").append(toIndentedString(dataEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("asset_id", "name", "type_is_crypto", "data_quote_start", "data_quote_end", "data_orderbook_start", "data_orderbook_end", "data_trade_start", "data_trade_end", "data_symbols_count", "volume_1hrs_usd", "volume_1day_usd", "volume_1mth_usd", "price_usd", "id_icon", "supply_current", "supply_total", "supply_max", "chain_addresses", "data_start", "data_end"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to V1Asset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1Asset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The required field(s) %s in V1Asset is not found in the empty JSON string", V1Asset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1Asset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The field `%s` in the JSON string is not defined in the `V1Asset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("asset_id") != null && !jsonObj.get("asset_id").isJsonNull()) && !jsonObj.get("asset_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `asset_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("id_icon") != null && !jsonObj.get("id_icon").isJsonNull()) && !jsonObj.get("id_icon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `id_icon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id_icon").toString()));
      }
      if (jsonObj.get("chain_addresses") != null && !jsonObj.get("chain_addresses").isJsonNull()) {
        JsonArray jsonArraychainAddresses = jsonObj.getAsJsonArray("chain_addresses");
        if (jsonArraychainAddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("chain_addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `chain_addresses` to be an array in the JSON string but got `%s`", jsonObj.get("chain_addresses").toString()));
          }

          // validate the optional field `chain_addresses` (array)
          for (int i = 0; i < jsonArraychainAddresses.size(); i++) {
            V1ChainNetworkAddress.validateJsonElement(jsonArraychainAddresses.get(i));
          };
        }
      }
      if ((jsonObj.get("data_start") != null && !jsonObj.get("data_start").isJsonNull()) && !jsonObj.get("data_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `data_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data_start").toString()));
      }
      if ((jsonObj.get("data_end") != null && !jsonObj.get("data_end").isJsonNull()) && !jsonObj.get("data_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `data_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data_end").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1Asset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1Asset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1Asset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1Asset.class));

       return (TypeAdapter<T>) new TypeAdapter<V1Asset>() {
           @Override
           public void write(JsonWriter out, V1Asset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1Asset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of V1Asset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of V1Asset
   * @throws IOException if the JSON string is invalid with respect to V1Asset
   */
  public static V1Asset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1Asset.class);
  }

  /**
   * Convert an instance of V1Asset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

