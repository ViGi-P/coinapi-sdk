openapi: 3.0.4
info:
  contact:
    email: support@apibricks.io
    name: API BRICKS LTD
    url: https://www.coinapi.io
  license:
    name: MIT License
    url: https://github.com/api-bricks/api-bricks-sdk/blob/master/LICENSE
  title: CoinAPI Market Data REST API
  version: v1
servers:
- url: https://rest.coinapi.io
security:
- APIKey: []
- JWT: []
tags:
- description: "\r\nExchange rate is defined as (VWAP-24H) last 24 hour (rolling window\
    \ over time) Volume Weighted Average Price across multiple data sources listed\
    \ on our platform. We are selecting and managing the data sources that are used\
    \ in the calculation based on multiple factors to provide data of highest quality.\
    \ \r\n\r\nAlgorithm is described below:\r\n\r\n  1. Exchange rates are produced\
    \ from quotes, trades, and metadata datasets.\r\n  1. Symbols that are not data_type\
    \ = \"SPOT\" are excluded from the calculation.\r\n  1. Symbols from the data\
    \ sources that were marked by us as not legitimate are excluded from the calculation.\r\
    \n  1. Quotes data where the spread is outside the range of ```<0$; 67%>``` are\
    \ discarded. `spreadPrc = (ask - bid) / ((ask + bid) / 2)`\r\n  1. The midpoint\
    \ from the quote data is used as a pricing reference and it's weighted by the\
    \ passive cumulative volume resting on the best prices.\r\n  1. Volume from the\
    \ trades is used to weight the midpoint prices in the VWAP24 algorithm.\r\n  1.\
    \ Midpoint data that has not been updated in the last 5 minutes and 1 second is\
    \ discarded.\r\n  1. The last 24-hour volume for each symbol is updated every\
    \ 4 hours when approximately 20% of the data in the sliding window changes (also,\
    \ the list of eligible markets is updated at the same time).\r\n  1. Everywhere\
    \ in the algorithm below, we are using asset pairs only from exchanges that have\
    \ the highest legitimacy rank, and the rest of the exchanges are discarded. As\
    \ we establish the highest-ranking exchanges that have this data for each asset\
    \ pair, we ensure that the highest quality data is used for each of them. The\
    \ rank used for asset pairing is carried over to the following steps.\r\n  1.\
    \ Every 1 second, we update VWAP24 data for every asset pair across all data sources.\r\
    \n  1. For each asset pair, we also discard data that is outside the 3 sigma range\
    \ if there are at least 3 exchanges for this asset pair.\r\n  1. From the VWAP24\
    \ data, we are creating a tree structure where node/vertex = asset and edge =\
    \ rate.\r\n  1. By traversing the tree structure using the BFS algorithm and our\
    \ secret sauce, we are able to establish the final exchange rates.\r\n    "
  name: Exchange Rates
- description: "\r\nThis section describes calls related to order book data, also\
    \ known as books or passive level 3 data."
  name: Order Book L3
- description: "\r\nThis section describes calls related to order book data, also\
    \ known as books or passive level 2 data.\r\n\r\n:::info\r\nWhen requesting current\
    \ data for a specific symbol, output is not encapsulated into JSON array as only\
    \ one item is returned.\r\n:::\r\n\r\n:::info\r\nGET `/v1/orderbooks/current`\
    \ endpoint is charged one request per 100 data points returned after applying\
    \ a filter defined by filter_symbol_id parameter. If filter symbols target more\
    \ than one exchange, error is returned.\r\n:::\r\n\r\n:::info\r\nWhen requesting\
    \ current order book data limited to a single level, then quotes are actually\
    \ used. This information is important from the perspective that quotes data could\
    \ be faster than order book data (behavior is dependent solely one the data source)\
    \ and they can have the size equal to 0 when the size is unknown. Some data sources\
    \ publish order books and separately quote data (without the sizes) at a higher\
    \ frequency. In that case, we will merge the order book feed with quotes feed\
    \ to make sure that our updates are as fast as possible. The quotes will have\
    \ the size equal to 0 as the value is unknown and the customer can decide if these\
    \ higher frequency updates without the sizes are valuable or if not then can discard\
    \ them or ask for at least 2 order book levels (in case of a REST API call). For\
    \ the data sources that publish order books only or order books and quotes with\
    \ the sizes then this will not happen.\r\n:::"
  name: Order Book
- description: "\r\nAPI calls described in this section are related to downloading\
    \ OHLCV *(Open, High, Low, Close, Volume)* timeseries data.\r\nEach data point\
    \ of this timeseries represents several indicators calculated from orderbook and\
    \ transactions activity inside a time range (period).\r\n\r\n:::info\r\nOHLCV\
    \ data primary purpose is to present an overview of the market in human readable\
    \ form. \r\nIt's often used to visualize market data on charts, websites, and\
    \ various kinds of reports.\r\n:::\r\n\r\n:::tip\r\nCoinAPI expanded the standard\
    \ OHLCV timeseries by including time of first and last trade and amount of trades\
    \ executed inside period.\r\n:::\r\n\r\n:::info\r\nWhile working on the OHLCV\
    \ data, especially lower time periods, you can notice that there are cases where\
    \ there was no transactions and only orderbook activity.\r\nIn such cases, the\
    \ volume_traded and trades_count fields are set to 0.\r\nThis is because the OHLCV\
    \ data is calculated from the orderbook and transactions activity.\r\nIf there\
    \ was no transactions and only orderbook activity, then the volume_traded and\
    \ trades_count fields are set to 0.\r\n:::\r\n    "
  name: Ohlcv
- description: ""
  name: Metadata
- description: |-
    Metrics are quantitative measurements used to evaluate the performance and activity of cryptocurrency exchanges. These metrics include:

    1. Trading Volume: The total amount of cryptocurrency traded on an exchange within a specific time period, indicating liquidity and activity.
    1. Market Depth: The level of buy and sell orders at different price levels, providing insights into liquidity and potential price impact.
    1. Order Book: A record of outstanding buy and sell orders for a cryptocurrency, reflecting supply and demand dynamics.
    1. Spread: The difference between the highest bid and lowest ask prices, indicating liquidity and trading costs.
    1. Price Charts: Visual representations of cryptocurrency price movements over time, helping identify trends and inform trading decisions.
    1. Market Cap: The total value of a cryptocurrency calculated by its price multiplied by circulating supply, reflecting relative size and value.
    1. Trading Pairs: Combinations of cryptocurrencies available for trading, including volume, price, and spread for each pair.
    1. User Metrics: Data on active users, new registrations, user retention, and engagement, indicating platform popularity and growth.
    1. Trading Fees: Fees charged for executing trades, including fee structure, discounts, and revenue generated by the exchange.
    1. Security Metrics: Measures assessing the security of an exchange, such as past incidents, user fund protection, and security audits.

    These metrics assist traders and investors in evaluating market activity, liquidity, and the reliability of crypto exchanges for informed decision-making.
  name: MetricsV1
- description: |-
    Metrics are quantitative measurements used to evaluate the performance and activity of cryptocurrency exchanges. These metrics include:

    1. Trading Volume: The total amount of cryptocurrency traded on an exchange within a specific time period, indicating liquidity and activity.
    1. Market Depth: The level of buy and sell orders at different price levels, providing insights into liquidity and potential price impact.
    1. Order Book: A record of outstanding buy and sell orders for a cryptocurrency, reflecting supply and demand dynamics.
    1. Spread: The difference between the highest bid and lowest ask prices, indicating liquidity and trading costs.
    1. Price Charts: Visual representations of cryptocurrency price movements over time, helping identify trends and inform trading decisions.
    1. Market Cap: The total value of a cryptocurrency calculated by its price multiplied by circulating supply, reflecting relative size and value.
    1. Trading Pairs: Combinations of cryptocurrencies available for trading, including volume, price, and spread for each pair.
    1. User Metrics: Data on active users, new registrations, user retention, and engagement, indicating platform popularity and growth.
    1. Trading Fees: Fees charged for executing trades, including fee structure, discounts, and revenue generated by the exchange.
    1. Security Metrics: Measures assessing the security of an exchange, such as past incidents, user fund protection, and security audits.

    These metrics assist traders and investors in evaluating market activity, liquidity, and the reliability of crypto exchanges for informed decision-making.
  name: MetricsV2
- description: This set of endpoints providing easy access to data related to Options
    Markets.
  name: Options
- description: Controller for managing order book L3 data.
  name: OrderBooks3
- description: Controller for managing order book data.
  name: OrderBooks
- description: "Controller for retrieving quotes data, also known as quotes or passive\
    \ level 1 data."
  name: Quotes
- description: "Controller for retrieving OHLCV (Open, High, Low, Close, Volume) timeseries\
    \ data."
  name: TimeSeries
- description: Controller for retrieving trade data related to executed transactions.
  name: Trades
- description: Controller for accessing asset information.
  name: Assets
- description: Controller for accessing blockchain chain information.
  name: Chains
- description: Controller for retrieving symbol information.
  name: Symbols
paths:
  /v1/assets:
    get:
      description: "Retrieves all assets.\n            \n:::info\nOur asset identifiers\
        \ are aligned with the ISO 4217 currency codes standard only for fiat money\
        \ (government or law regulated currency).\n:::\n            \n:::info\nProperties\
        \ of the output are providing aggregated information from across all symbols\
        \ related to the specific asset. If you need to calculate your aggregation\
        \ (e.g., limiting only the particular type of symbols), you should use /v1/symbols\
        \ endpoint as a data source.\n:::"
      parameters:
      - description: "Comma or semicolon delimited asset identifiers used to filter\
          \ response. (optional, eg. `BTC;ETH`)."
        explode: true
        in: query
        name: filter_asset_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    name: Bitcoin
                    type_is_crypto: 1
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:55:07.6724523Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:17.8592413Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:11.8220000Z
                    data_symbols_count: 22711
                    volume_1hrs_usd: 1.0289443143649E11
                    volume_1day_usd: 2.08639232325616E12
                    volume_1mth_usd: 5.792916835998454E13
                    price_usd: 9166.207274778093
                    chain_addresses:
                    - chain_id: ARBITRUM
                      network_id: MAINNET
                      address: 0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599
                    data_start: 2010-07-17
                    data_end: 2019-11-03
                  - asset_id: USD
                    name: US Dollar
                    type_is_crypto: 0
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:54:49.3807706Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:13.1863931Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:07.7870000Z
                    data_symbols_count: 10728
                    volume_1hrs_usd: 9.46645401652E9
                    volume_1day_usd: 2.2158075817349E11
                    volume_1mth_usd: 1.18166851746617E13
                    price_usd: 1.0
                    chain_addresses:
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0xd233d1f6fd11640081abb8db125f722b5dc729dc
                    data_start: 2010-07-17
                    data_end: 2019-11-03
              schema:
                items:
                  $ref: "#/components/schemas/v1.Asset"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    name: Bitcoin
                    type_is_crypto: 1
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:55:07.6724523Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:17.8592413Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:11.8220000Z
                    data_symbols_count: 22711
                    volume_1hrs_usd: 1.0289443143649E11
                    volume_1day_usd: 2.08639232325616E12
                    volume_1mth_usd: 5.792916835998454E13
                    price_usd: 9166.207274778093
                    chain_addresses:
                    - chain_id: ARBITRUM
                      network_id: MAINNET
                      address: 0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599
                    data_start: 2010-07-17
                    data_end: 2019-11-03
                  - asset_id: USD
                    name: US Dollar
                    type_is_crypto: 0
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:54:49.3807706Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:13.1863931Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:07.7870000Z
                    data_symbols_count: 10728
                    volume_1hrs_usd: 9.46645401652E9
                    volume_1day_usd: 2.2158075817349E11
                    volume_1mth_usd: 1.18166851746617E13
                    price_usd: 1.0
                    chain_addresses:
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0xd233d1f6fd11640081abb8db125f722b5dc729dc
                    data_start: 2010-07-17
                    data_end: 2019-11-03
              schema:
                items:
                  $ref: "#/components/schemas/v1.Asset"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    name: Bitcoin
                    type_is_crypto: 1
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:55:07.6724523Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:17.8592413Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:11.8220000Z
                    data_symbols_count: 22711
                    volume_1hrs_usd: 1.0289443143649E11
                    volume_1day_usd: 2.08639232325616E12
                    volume_1mth_usd: 5.792916835998454E13
                    price_usd: 9166.207274778093
                    chain_addresses:
                    - chain_id: ARBITRUM
                      network_id: MAINNET
                      address: 0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599
                    data_start: 2010-07-17
                    data_end: 2019-11-03
                  - asset_id: USD
                    name: US Dollar
                    type_is_crypto: 0
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:54:49.3807706Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:13.1863931Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:07.7870000Z
                    data_symbols_count: 10728
                    volume_1hrs_usd: 9.46645401652E9
                    volume_1day_usd: 2.2158075817349E11
                    volume_1mth_usd: 1.18166851746617E13
                    price_usd: 1.0
                    chain_addresses:
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0xd233d1f6fd11640081abb8db125f722b5dc729dc
                    data_start: 2010-07-17
                    data_end: 2019-11-03
              schema:
                items:
                  $ref: "#/components/schemas/v1.Asset"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    name: Bitcoin
                    type_is_crypto: 1
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:55:07.6724523Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:17.8592413Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:11.8220000Z
                    data_symbols_count: 22711
                    volume_1hrs_usd: 1.0289443143649E11
                    volume_1day_usd: 2.08639232325616E12
                    volume_1mth_usd: 5.792916835998454E13
                    price_usd: 9166.207274778093
                    chain_addresses:
                    - chain_id: ARBITRUM
                      network_id: MAINNET
                      address: 0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599
                    data_start: 2010-07-17
                    data_end: 2019-11-03
                  - asset_id: USD
                    name: US Dollar
                    type_is_crypto: 0
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:54:49.3807706Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:13.1863931Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:07.7870000Z
                    data_symbols_count: 10728
                    volume_1hrs_usd: 9.46645401652E9
                    volume_1day_usd: 2.2158075817349E11
                    volume_1mth_usd: 1.18166851746617E13
                    price_usd: 1.0
                    chain_addresses:
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0xd233d1f6fd11640081abb8db125f722b5dc729dc
                    data_start: 2010-07-17
                    data_end: 2019-11-03
              schema:
                items:
                  $ref: "#/components/schemas/v1.Asset"
                type: array
          description: successful operation
      summary: List all assets
      tags:
      - Metadata
  /v1/assets/{asset_id}:
    get:
      parameters:
      - description: The asset ID.
        explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    name: Bitcoin
                    type_is_crypto: 1
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:55:07.6724523Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:17.8592413Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:11.8220000Z
                    data_symbols_count: 22711
                    volume_1hrs_usd: 1.0289443143649E11
                    volume_1day_usd: 2.08639232325616E12
                    volume_1mth_usd: 5.792916835998454E13
                    price_usd: 9166.207274778093
                    chain_addresses:
                    - chain_id: ARBITRUM
                      network_id: MAINNET
                      address: 0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599
                    data_start: 2010-07-17
                    data_end: 2019-11-03
                  - asset_id: USD
                    name: US Dollar
                    type_is_crypto: 0
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:54:49.3807706Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:13.1863931Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:07.7870000Z
                    data_symbols_count: 10728
                    volume_1hrs_usd: 9.46645401652E9
                    volume_1day_usd: 2.2158075817349E11
                    volume_1mth_usd: 1.18166851746617E13
                    price_usd: 1.0
                    chain_addresses:
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0xd233d1f6fd11640081abb8db125f722b5dc729dc
                    data_start: 2010-07-17
                    data_end: 2019-11-03
              schema:
                items:
                  $ref: "#/components/schemas/v1.Asset"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    name: Bitcoin
                    type_is_crypto: 1
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:55:07.6724523Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:17.8592413Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:11.8220000Z
                    data_symbols_count: 22711
                    volume_1hrs_usd: 1.0289443143649E11
                    volume_1day_usd: 2.08639232325616E12
                    volume_1mth_usd: 5.792916835998454E13
                    price_usd: 9166.207274778093
                    chain_addresses:
                    - chain_id: ARBITRUM
                      network_id: MAINNET
                      address: 0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599
                    data_start: 2010-07-17
                    data_end: 2019-11-03
                  - asset_id: USD
                    name: US Dollar
                    type_is_crypto: 0
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:54:49.3807706Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:13.1863931Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:07.7870000Z
                    data_symbols_count: 10728
                    volume_1hrs_usd: 9.46645401652E9
                    volume_1day_usd: 2.2158075817349E11
                    volume_1mth_usd: 1.18166851746617E13
                    price_usd: 1.0
                    chain_addresses:
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0xd233d1f6fd11640081abb8db125f722b5dc729dc
                    data_start: 2010-07-17
                    data_end: 2019-11-03
              schema:
                items:
                  $ref: "#/components/schemas/v1.Asset"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    name: Bitcoin
                    type_is_crypto: 1
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:55:07.6724523Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:17.8592413Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:11.8220000Z
                    data_symbols_count: 22711
                    volume_1hrs_usd: 1.0289443143649E11
                    volume_1day_usd: 2.08639232325616E12
                    volume_1mth_usd: 5.792916835998454E13
                    price_usd: 9166.207274778093
                    chain_addresses:
                    - chain_id: ARBITRUM
                      network_id: MAINNET
                      address: 0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599
                    data_start: 2010-07-17
                    data_end: 2019-11-03
                  - asset_id: USD
                    name: US Dollar
                    type_is_crypto: 0
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:54:49.3807706Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:13.1863931Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:07.7870000Z
                    data_symbols_count: 10728
                    volume_1hrs_usd: 9.46645401652E9
                    volume_1day_usd: 2.2158075817349E11
                    volume_1mth_usd: 1.18166851746617E13
                    price_usd: 1.0
                    chain_addresses:
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0xd233d1f6fd11640081abb8db125f722b5dc729dc
                    data_start: 2010-07-17
                    data_end: 2019-11-03
              schema:
                items:
                  $ref: "#/components/schemas/v1.Asset"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    name: Bitcoin
                    type_is_crypto: 1
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:55:07.6724523Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:17.8592413Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:11.8220000Z
                    data_symbols_count: 22711
                    volume_1hrs_usd: 1.0289443143649E11
                    volume_1day_usd: 2.08639232325616E12
                    volume_1mth_usd: 5.792916835998454E13
                    price_usd: 9166.207274778093
                    chain_addresses:
                    - chain_id: ARBITRUM
                      network_id: MAINNET
                      address: 0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599
                    data_start: 2010-07-17
                    data_end: 2019-11-03
                  - asset_id: USD
                    name: US Dollar
                    type_is_crypto: 0
                    data_quote_start: 2014-02-24T17:43:05.0000000Z
                    data_quote_end: 2019-11-03T17:54:49.3807706Z
                    data_orderbook_start: 2014-02-24T17:43:05.0000000Z
                    data_orderbook_end: 2019-11-03T17:55:13.1863931Z
                    data_trade_start: 2010-07-17T23:09:17.0000000Z
                    data_trade_end: 2019-11-03T17:55:07.7870000Z
                    data_symbols_count: 10728
                    volume_1hrs_usd: 9.46645401652E9
                    volume_1day_usd: 2.2158075817349E11
                    volume_1mth_usd: 1.18166851746617E13
                    price_usd: 1.0
                    chain_addresses:
                    - chain_id: ETHEREUM
                      network_id: MAINNET
                      address: 0xd233d1f6fd11640081abb8db125f722b5dc729dc
                    data_start: 2010-07-17
                    data_end: 2019-11-03
              schema:
                items:
                  $ref: "#/components/schemas/v1.Asset"
                type: array
          description: successful operation
      summary: List all assets by asset ID
      tags:
      - Metadata
  /v1/assets/icons/{size}:
    get:
      description: Gets the list of icons (of the given size) for all the assets.
      parameters:
      - description: The size of the icons.
        explode: false
        in: path
        name: size
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/f231d7382689406f9a50dde841418c64.png
                  - asset_id: ETH
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/04836ff3bc4d4d95820e0155594dca86.png
                  - asset_id: USD
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4873707f25fe4de3b4bca6fa5c631011.png
              schema:
                items:
                  $ref: "#/components/schemas/v1.Icon"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/f231d7382689406f9a50dde841418c64.png
                  - asset_id: ETH
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/04836ff3bc4d4d95820e0155594dca86.png
                  - asset_id: USD
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4873707f25fe4de3b4bca6fa5c631011.png
              schema:
                items:
                  $ref: "#/components/schemas/v1.Icon"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/f231d7382689406f9a50dde841418c64.png
                  - asset_id: ETH
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/04836ff3bc4d4d95820e0155594dca86.png
                  - asset_id: USD
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4873707f25fe4de3b4bca6fa5c631011.png
              schema:
                items:
                  $ref: "#/components/schemas/v1.Icon"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - asset_id: BTC
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/f231d7382689406f9a50dde841418c64.png
                  - asset_id: ETH
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/04836ff3bc4d4d95820e0155594dca86.png
                  - asset_id: USD
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4873707f25fe4de3b4bca6fa5c631011.png
              schema:
                items:
                  $ref: "#/components/schemas/v1.Icon"
                type: array
          description: successful operation
      summary: List all asset icons
      tags:
      - Metadata
  /v1/chains:
    get:
      description: "Retrieves all blockchain chains supported by the system.\n   \
        \         \n:::info\nProperties of the output are providing aggregated information\
        \ from across all symbols related to the specific chain. If you need to calculate\
        \ your aggregation (e.g., limiting only the particular type of symbols), you\
        \ should use /v1/symbols endpoint as a data source.\n:::"
      parameters:
      - description: "Comma or semicolon delimited chain identifiers used to filter\
          \ response. (optional, eg. `ETHEREUM;ARBITRUM`)."
        explode: true
        in: query
        name: filter_chain_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - chain_id: ETHEREUM
                    name: Ethereum
                  - chain_id: ARBITRUM
                    name: Arbitrum
                  - chain_id: POLYGON
                    name: Polygon
              schema:
                items:
                  $ref: "#/components/schemas/v1.Chain"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - chain_id: ETHEREUM
                    name: Ethereum
                  - chain_id: ARBITRUM
                    name: Arbitrum
                  - chain_id: POLYGON
                    name: Polygon
              schema:
                items:
                  $ref: "#/components/schemas/v1.Chain"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - chain_id: ETHEREUM
                    name: Ethereum
                  - chain_id: ARBITRUM
                    name: Arbitrum
                  - chain_id: POLYGON
                    name: Polygon
              schema:
                items:
                  $ref: "#/components/schemas/v1.Chain"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - chain_id: ETHEREUM
                    name: Ethereum
                  - chain_id: ARBITRUM
                    name: Arbitrum
                  - chain_id: POLYGON
                    name: Polygon
              schema:
                items:
                  $ref: "#/components/schemas/v1.Chain"
                type: array
          description: successful operation
      summary: List all blockchain chains
      tags:
      - Metadata
  /v1/chains/{chain_id}:
    get:
      parameters:
      - description: The chain ID.
        explode: false
        in: path
        name: chain_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - chain_id: ETHEREUM
                    name: Ethereum
                  - chain_id: ARBITRUM
                    name: Arbitrum
                  - chain_id: POLYGON
                    name: Polygon
              schema:
                items:
                  $ref: "#/components/schemas/v1.Chain"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - chain_id: ETHEREUM
                    name: Ethereum
                  - chain_id: ARBITRUM
                    name: Arbitrum
                  - chain_id: POLYGON
                    name: Polygon
              schema:
                items:
                  $ref: "#/components/schemas/v1.Chain"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - chain_id: ETHEREUM
                    name: Ethereum
                  - chain_id: ARBITRUM
                    name: Arbitrum
                  - chain_id: POLYGON
                    name: Polygon
              schema:
                items:
                  $ref: "#/components/schemas/v1.Chain"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - chain_id: ETHEREUM
                    name: Ethereum
                  - chain_id: ARBITRUM
                    name: Arbitrum
                  - chain_id: POLYGON
                    name: Polygon
              schema:
                items:
                  $ref: "#/components/schemas/v1.Chain"
                type: array
          description: successful operation
      summary: List all chains by chain ID
      tags:
      - Metadata
  /v1/exchangerate/{asset_id_base}/{asset_id_quote}:
    get:
      description: "Retrieves the exchange rate for a specific base and quote asset\
        \ at a given time or the current rate.\n            \n:::info\nIf you are\
        \ using an exchange rate for mission-critical operations, then for best reliability,\
        \ you should measure the difference between current time and the time returned\
        \ from the response to ensure that value of the difference between those meets\
        \ your internal requirements.\n:::"
      operationId: Get specific rate
      parameters:
      - description: Requested exchange rate base asset identifier (from the Metadata
          -> Assets)
        explode: false
        in: path
        name: asset_id_base
        required: true
        schema:
          type: string
        style: simple
      - description: Requested exchange rate quote asset identifier (from the Metadata
          -> Assets)
        explode: false
        in: path
        name: asset_id_quote
        required: true
        schema:
          type: string
        style: simple
      - description: "Time at which exchange rate is calculated (optional, if not\
          \ supplied then current rate is returned)"
        explode: true
        in: query
        name: time
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                    time: 2025-10-06T06:04:15.7208343Z
                    asset_id_base: BTC
                    asset_id_quote: USD
                    rate: 10000.0
              schema:
                $ref: "#/components/schemas/v1.ExchangeRate"
            application/json:
              examples:
                Example response:
                  value:
                    time: 2025-10-06T06:04:15.7208343Z
                    asset_id_base: BTC
                    asset_id_quote: USD
                    rate: 10000.0
              schema:
                $ref: "#/components/schemas/v1.ExchangeRate"
            text/json:
              examples:
                Example response:
                  value:
                    time: 2025-10-06T06:04:15.7208343Z
                    asset_id_base: BTC
                    asset_id_quote: USD
                    rate: 10000.0
              schema:
                $ref: "#/components/schemas/v1.ExchangeRate"
            application/x-msgpack:
              examples:
                Example response:
                  value:
                    time: 2025-10-06T06:04:15.7208343Z
                    asset_id_base: BTC
                    asset_id_quote: USD
                    rate: 10000.0
              schema:
                $ref: "#/components/schemas/v1.ExchangeRate"
          description: successful operation
      summary: Get specific rate
      tags:
      - Exchange Rates
  /v1/exchangerate/{asset_id_base}:
    get:
      description: "Get the current exchange rate between requested asset and all\
        \ other assets.\n            \n:::info\nIf you are using an exchange rate\
        \ for mission-critical operations, then for best reliability, you should measure\
        \ the difference between current time and the time returned from the response\
        \ to ensure that value of the difference between those meets your internal\
        \ requirements.\n:::\n            \n:::info\nYou can invert the rates by using\
        \ Y = 1 / X equation, for example BTC/USD = 1 / (USD/BTC);\n:::"
      parameters:
      - description: Requested exchange rates base asset identifier (from the Metadata
          -> Assets)
        explode: false
        in: path
        name: asset_id_base
        required: true
        schema:
          type: string
        style: simple
      - description: Comma or semicolon delimited asset identifiers used to filter
          response (optional)
        explode: true
        in: query
        name: filter_asset_id
        required: false
        schema:
          type: string
        style: form
      - description: "True will invert all the rates (optional, if true then rates\
          \ will be calculated as `rate = 1 / actual_rate` eg. `USD/BTC` as `BTC/USD`)"
        explode: true
        in: query
        name: invert
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Time for historical rates (optional)
        explode: true
        in: query
        name: time
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                    asset_id_base: BTC
                    rates:
                    - time: 2017-08-09T14:31:37.0520000Z
                      asset_id_quote: USD
                      rate: 3258.887541779804
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: EUR
                      rate: 2782.5255080599272
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: CNY
                      rate: 21756.295595926054
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: GBP
                      rate: 2509.602420379958
              schema:
                $ref: "#/components/schemas/v1.ExchangeRates"
            application/json:
              examples:
                Example response:
                  value:
                    asset_id_base: BTC
                    rates:
                    - time: 2017-08-09T14:31:37.0520000Z
                      asset_id_quote: USD
                      rate: 3258.887541779804
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: EUR
                      rate: 2782.5255080599272
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: CNY
                      rate: 21756.295595926054
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: GBP
                      rate: 2509.602420379958
              schema:
                $ref: "#/components/schemas/v1.ExchangeRates"
            text/json:
              examples:
                Example response:
                  value:
                    asset_id_base: BTC
                    rates:
                    - time: 2017-08-09T14:31:37.0520000Z
                      asset_id_quote: USD
                      rate: 3258.887541779804
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: EUR
                      rate: 2782.5255080599272
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: CNY
                      rate: 21756.295595926054
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: GBP
                      rate: 2509.602420379958
              schema:
                $ref: "#/components/schemas/v1.ExchangeRates"
            application/x-msgpack:
              examples:
                Example response:
                  value:
                    asset_id_base: BTC
                    rates:
                    - time: 2017-08-09T14:31:37.0520000Z
                      asset_id_quote: USD
                      rate: 3258.887541779804
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: EUR
                      rate: 2782.5255080599272
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: CNY
                      rate: 21756.295595926054
                    - time: 2017-08-09T14:31:36.7570000Z
                      asset_id_quote: GBP
                      rate: 2509.602420379958
              schema:
                $ref: "#/components/schemas/v1.ExchangeRates"
          description: successful operation
      summary: Get all current rates
      tags:
      - Exchange Rates
  /v1/exchangerate/history/periods:
    get:
      description: "You can also obtain historical exchange rates of any asset pair,\
        \ grouped into time periods.\nGet full list of supported time periods available\
        \ for requesting exchange rates historical timeseries data.\n            \n\
        ## Timeseries periods\nTime unit |\tPeriod identifiers\n--- | ---\nSecond\
        \ | 1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SEC\nMinute\
        \ | 1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MIN\nHour |\
        \ 1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRS\nDay | 1DAY, 2DAY, 3DAY, 5DAY,\
        \ 7DAY, 10DAY"
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - period_id: 1SEC
                    length_seconds: 1
                    length_months: 0
                    unit_count: 1
                    unit_name: second
                    display_name: 1 Second
                  - period_id: 30MIN
                    length_seconds: 1800
                    length_months: 0
                    unit_count: 30
                    unit_name: minute
                    display_name: 30 Minutes
                  - period_id: 10DAY
                    length_seconds: 864000
                    length_months: 0
                    unit_count: 10
                    unit_name: day
                    display_name: 10 Days
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesPeriod"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - period_id: 1SEC
                    length_seconds: 1
                    length_months: 0
                    unit_count: 1
                    unit_name: second
                    display_name: 1 Second
                  - period_id: 30MIN
                    length_seconds: 1800
                    length_months: 0
                    unit_count: 30
                    unit_name: minute
                    display_name: 30 Minutes
                  - period_id: 10DAY
                    length_seconds: 864000
                    length_months: 0
                    unit_count: 10
                    unit_name: day
                    display_name: 10 Days
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesPeriod"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - period_id: 1SEC
                    length_seconds: 1
                    length_months: 0
                    unit_count: 1
                    unit_name: second
                    display_name: 1 Second
                  - period_id: 30MIN
                    length_seconds: 1800
                    length_months: 0
                    unit_count: 30
                    unit_name: minute
                    display_name: 30 Minutes
                  - period_id: 10DAY
                    length_seconds: 864000
                    length_months: 0
                    unit_count: 10
                    unit_name: day
                    display_name: 10 Days
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesPeriod"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - period_id: 1SEC
                    length_seconds: 1
                    length_months: 0
                    unit_count: 1
                    unit_name: second
                    display_name: 1 Second
                  - period_id: 30MIN
                    length_seconds: 1800
                    length_months: 0
                    unit_count: 30
                    unit_name: minute
                    display_name: 30 Minutes
                  - period_id: 10DAY
                    length_seconds: 864000
                    length_months: 0
                    unit_count: 10
                    unit_name: day
                    display_name: 10 Days
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesPeriod"
                type: array
          description: successful operation
      summary: Timeseries periods
      tags:
      - Exchange Rates
  /v1/exchangerate/{asset_id_base}/{asset_id_quote}/history:
    get:
      description: Get the historical exchange rates between two assets in the form
        of the timeseries.
      parameters:
      - description: Requested exchange rates base asset identifier (from the Metadata
          -> Assets)
        explode: false
        in: path
        name: asset_id_base
        required: true
        schema:
          type: string
        style: simple
      - description: Requested exchange rates base asset identifier (from the Metadata
          -> Assets)
        explode: false
        in: path
        name: asset_id_quote
        required: true
        schema:
          type: string
        style: simple
      - description: "Identifier of requested timeseries period (required, e.g. `5SEC`\
          \ or `1HRS`)"
        explode: true
        in: query
        name: period_id
        required: false
        schema:
          type: string
        style: form
      - description: Timeseries starting time in ISO 8601 (required)
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          type: string
        style: form
      - description: Timeseries ending time in ISO 8601 (required)
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - time_period_start: 2016-01-01T00:00:00.0000000Z
                    time_period_end: 0001-01-01T00:00:00.0000000Z
                    time_open: 2016-01-01T00:00:00.0000000Z
                    time_close: 2016-01-01T00:00:00.0000000Z
                    rate_open: 430.586617904731
                    rate_high: 430.586617904731
                    rate_low: 430.586617904731
                    rate_close: 430.586617904731
                  - time_period_start: 2016-01-01T00:01:00.0000000Z
                    time_period_end: 2016-01-01T00:02:00.0000000Z
                    time_open: 2016-01-01T00:01:00.0000000Z
                    time_close: 2016-01-01T00:01:00.0000000Z
                    rate_open: 430.38999999999993
                    rate_high: 430.38999999999993
                    rate_low: 430.38999999999993
                    rate_close: 430.38999999999993
                  - time_period_start: 2016-01-01T00:02:00.0000000Z
                    time_period_end: 2016-01-01T00:03:00.0000000Z
                    time_open: 2016-01-01T00:02:00.0000000Z
                    time_close: 2016-01-01T00:02:00.0000000Z
                    rate_open: 430.6522189770523
                    rate_high: 430.6522189770523
                    rate_low: 430.6522189770523
                    rate_close: 430.6522189770523
              schema:
                items:
                  $ref: "#/components/schemas/v1.ExchangeRatesTimeseriesItem"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2016-01-01T00:00:00.0000000Z
                    time_period_end: 0001-01-01T00:00:00.0000000Z
                    time_open: 2016-01-01T00:00:00.0000000Z
                    time_close: 2016-01-01T00:00:00.0000000Z
                    rate_open: 430.586617904731
                    rate_high: 430.586617904731
                    rate_low: 430.586617904731
                    rate_close: 430.586617904731
                  - time_period_start: 2016-01-01T00:01:00.0000000Z
                    time_period_end: 2016-01-01T00:02:00.0000000Z
                    time_open: 2016-01-01T00:01:00.0000000Z
                    time_close: 2016-01-01T00:01:00.0000000Z
                    rate_open: 430.38999999999993
                    rate_high: 430.38999999999993
                    rate_low: 430.38999999999993
                    rate_close: 430.38999999999993
                  - time_period_start: 2016-01-01T00:02:00.0000000Z
                    time_period_end: 2016-01-01T00:03:00.0000000Z
                    time_open: 2016-01-01T00:02:00.0000000Z
                    time_close: 2016-01-01T00:02:00.0000000Z
                    rate_open: 430.6522189770523
                    rate_high: 430.6522189770523
                    rate_low: 430.6522189770523
                    rate_close: 430.6522189770523
              schema:
                items:
                  $ref: "#/components/schemas/v1.ExchangeRatesTimeseriesItem"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2016-01-01T00:00:00.0000000Z
                    time_period_end: 0001-01-01T00:00:00.0000000Z
                    time_open: 2016-01-01T00:00:00.0000000Z
                    time_close: 2016-01-01T00:00:00.0000000Z
                    rate_open: 430.586617904731
                    rate_high: 430.586617904731
                    rate_low: 430.586617904731
                    rate_close: 430.586617904731
                  - time_period_start: 2016-01-01T00:01:00.0000000Z
                    time_period_end: 2016-01-01T00:02:00.0000000Z
                    time_open: 2016-01-01T00:01:00.0000000Z
                    time_close: 2016-01-01T00:01:00.0000000Z
                    rate_open: 430.38999999999993
                    rate_high: 430.38999999999993
                    rate_low: 430.38999999999993
                    rate_close: 430.38999999999993
                  - time_period_start: 2016-01-01T00:02:00.0000000Z
                    time_period_end: 2016-01-01T00:03:00.0000000Z
                    time_open: 2016-01-01T00:02:00.0000000Z
                    time_close: 2016-01-01T00:02:00.0000000Z
                    rate_open: 430.6522189770523
                    rate_high: 430.6522189770523
                    rate_low: 430.6522189770523
                    rate_close: 430.6522189770523
              schema:
                items:
                  $ref: "#/components/schemas/v1.ExchangeRatesTimeseriesItem"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - time_period_start: 2016-01-01T00:00:00.0000000Z
                    time_period_end: 0001-01-01T00:00:00.0000000Z
                    time_open: 2016-01-01T00:00:00.0000000Z
                    time_close: 2016-01-01T00:00:00.0000000Z
                    rate_open: 430.586617904731
                    rate_high: 430.586617904731
                    rate_low: 430.586617904731
                    rate_close: 430.586617904731
                  - time_period_start: 2016-01-01T00:01:00.0000000Z
                    time_period_end: 2016-01-01T00:02:00.0000000Z
                    time_open: 2016-01-01T00:01:00.0000000Z
                    time_close: 2016-01-01T00:01:00.0000000Z
                    rate_open: 430.38999999999993
                    rate_high: 430.38999999999993
                    rate_low: 430.38999999999993
                    rate_close: 430.38999999999993
                  - time_period_start: 2016-01-01T00:02:00.0000000Z
                    time_period_end: 2016-01-01T00:03:00.0000000Z
                    time_open: 2016-01-01T00:02:00.0000000Z
                    time_close: 2016-01-01T00:02:00.0000000Z
                    rate_open: 430.6522189770523
                    rate_high: 430.6522189770523
                    rate_low: 430.6522189770523
                    rate_close: 430.6522189770523
              schema:
                items:
                  $ref: "#/components/schemas/v1.ExchangeRatesTimeseriesItem"
                type: array
          description: successful operation
      summary: Timeseries data
      tags:
      - Exchange Rates
  /v1/exchanges:
    get:
      description: "Get a detailed list of exchanges provided by the system.\n   \
        \         \n:::info\nProperties of the output are providing aggregated information\
        \ from across all symbols related to the specific exchange. If you need to\
        \ calculate your aggregation (e.g., limiting only the particular type of symbols),\
        \ you should use /v1/symbols endpoint as a data source.\n:::"
      parameters:
      - description: "Comma or semicolon delimited exchange identifiers used to filter\
          \ response. (optional, eg. `BITSTAMP;GEMINI`)"
        explode: true
        in: query
        name: filter_exchange_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - exchange_id: OKCOINCNY
                    website: https://www.okcoin.cn/
                    name: OKCoin CNY
                    data_quote_start: 2015-02-15T12:53:50.3430000Z
                    data_quote_end: 2018-03-09T23:34:52.5800000Z
                    data_orderbook_start: 2015-02-15T12:53:50.3430000Z
                    data_orderbook_end: 2018-03-09T23:34:52.5800000Z
                    data_trade_start: 2013-06-12T14:24:24.0000000Z
                    data_trade_end: 2017-11-01T16:30:39.7077259Z
                    data_symbols_count: 2
                    volume_1hrs_usd: 0.0
                    volume_1day_usd: 0.0
                    volume_1mth_usd: 0.0
                    rank: 1
                  - exchange_id: HUOBI
                    website: https://www.huobi.com/
                    name: Huobi (HBUS)
                    data_quote_start: 2015-03-29T21:46:06.2630000Z
                    data_quote_end: 2019-11-03T18:22:29.1837496Z
                    data_orderbook_start: 2015-03-29T21:46:06.2630000Z
                    data_orderbook_end: 2019-11-03T18:23:53.2859878Z
                    data_trade_start: 2015-03-29T21:46:08.7030000Z
                    data_trade_end: 2019-11-03T18:21:48.2770000Z
                    data_symbols_count: 403
                    volume_1hrs_usd: 1605.8
                    volume_1day_usd: 59957.44
                    volume_1mth_usd: 1259508.43
                    rank: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.Exchange"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - exchange_id: OKCOINCNY
                    website: https://www.okcoin.cn/
                    name: OKCoin CNY
                    data_quote_start: 2015-02-15T12:53:50.3430000Z
                    data_quote_end: 2018-03-09T23:34:52.5800000Z
                    data_orderbook_start: 2015-02-15T12:53:50.3430000Z
                    data_orderbook_end: 2018-03-09T23:34:52.5800000Z
                    data_trade_start: 2013-06-12T14:24:24.0000000Z
                    data_trade_end: 2017-11-01T16:30:39.7077259Z
                    data_symbols_count: 2
                    volume_1hrs_usd: 0.0
                    volume_1day_usd: 0.0
                    volume_1mth_usd: 0.0
                    rank: 1
                  - exchange_id: HUOBI
                    website: https://www.huobi.com/
                    name: Huobi (HBUS)
                    data_quote_start: 2015-03-29T21:46:06.2630000Z
                    data_quote_end: 2019-11-03T18:22:29.1837496Z
                    data_orderbook_start: 2015-03-29T21:46:06.2630000Z
                    data_orderbook_end: 2019-11-03T18:23:53.2859878Z
                    data_trade_start: 2015-03-29T21:46:08.7030000Z
                    data_trade_end: 2019-11-03T18:21:48.2770000Z
                    data_symbols_count: 403
                    volume_1hrs_usd: 1605.8
                    volume_1day_usd: 59957.44
                    volume_1mth_usd: 1259508.43
                    rank: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.Exchange"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - exchange_id: OKCOINCNY
                    website: https://www.okcoin.cn/
                    name: OKCoin CNY
                    data_quote_start: 2015-02-15T12:53:50.3430000Z
                    data_quote_end: 2018-03-09T23:34:52.5800000Z
                    data_orderbook_start: 2015-02-15T12:53:50.3430000Z
                    data_orderbook_end: 2018-03-09T23:34:52.5800000Z
                    data_trade_start: 2013-06-12T14:24:24.0000000Z
                    data_trade_end: 2017-11-01T16:30:39.7077259Z
                    data_symbols_count: 2
                    volume_1hrs_usd: 0.0
                    volume_1day_usd: 0.0
                    volume_1mth_usd: 0.0
                    rank: 1
                  - exchange_id: HUOBI
                    website: https://www.huobi.com/
                    name: Huobi (HBUS)
                    data_quote_start: 2015-03-29T21:46:06.2630000Z
                    data_quote_end: 2019-11-03T18:22:29.1837496Z
                    data_orderbook_start: 2015-03-29T21:46:06.2630000Z
                    data_orderbook_end: 2019-11-03T18:23:53.2859878Z
                    data_trade_start: 2015-03-29T21:46:08.7030000Z
                    data_trade_end: 2019-11-03T18:21:48.2770000Z
                    data_symbols_count: 403
                    volume_1hrs_usd: 1605.8
                    volume_1day_usd: 59957.44
                    volume_1mth_usd: 1259508.43
                    rank: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.Exchange"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - exchange_id: OKCOINCNY
                    website: https://www.okcoin.cn/
                    name: OKCoin CNY
                    data_quote_start: 2015-02-15T12:53:50.3430000Z
                    data_quote_end: 2018-03-09T23:34:52.5800000Z
                    data_orderbook_start: 2015-02-15T12:53:50.3430000Z
                    data_orderbook_end: 2018-03-09T23:34:52.5800000Z
                    data_trade_start: 2013-06-12T14:24:24.0000000Z
                    data_trade_end: 2017-11-01T16:30:39.7077259Z
                    data_symbols_count: 2
                    volume_1hrs_usd: 0.0
                    volume_1day_usd: 0.0
                    volume_1mth_usd: 0.0
                    rank: 1
                  - exchange_id: HUOBI
                    website: https://www.huobi.com/
                    name: Huobi (HBUS)
                    data_quote_start: 2015-03-29T21:46:06.2630000Z
                    data_quote_end: 2019-11-03T18:22:29.1837496Z
                    data_orderbook_start: 2015-03-29T21:46:06.2630000Z
                    data_orderbook_end: 2019-11-03T18:23:53.2859878Z
                    data_trade_start: 2015-03-29T21:46:08.7030000Z
                    data_trade_end: 2019-11-03T18:21:48.2770000Z
                    data_symbols_count: 403
                    volume_1hrs_usd: 1605.8
                    volume_1day_usd: 59957.44
                    volume_1mth_usd: 1259508.43
                    rank: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.Exchange"
                type: array
          description: successful operation
      summary: List all exchanges
      tags:
      - Metadata
  /v1/exchanges/{exchange_id}:
    get:
      parameters:
      - description: The ID of the exchange.
        explode: false
        in: path
        name: exchange_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - exchange_id: OKCOINCNY
                    website: https://www.okcoin.cn/
                    name: OKCoin CNY
                    data_quote_start: 2015-02-15T12:53:50.3430000Z
                    data_quote_end: 2018-03-09T23:34:52.5800000Z
                    data_orderbook_start: 2015-02-15T12:53:50.3430000Z
                    data_orderbook_end: 2018-03-09T23:34:52.5800000Z
                    data_trade_start: 2013-06-12T14:24:24.0000000Z
                    data_trade_end: 2017-11-01T16:30:39.7077259Z
                    data_symbols_count: 2
                    volume_1hrs_usd: 0.0
                    volume_1day_usd: 0.0
                    volume_1mth_usd: 0.0
                    rank: 1
                  - exchange_id: HUOBI
                    website: https://www.huobi.com/
                    name: Huobi (HBUS)
                    data_quote_start: 2015-03-29T21:46:06.2630000Z
                    data_quote_end: 2019-11-03T18:22:29.1837496Z
                    data_orderbook_start: 2015-03-29T21:46:06.2630000Z
                    data_orderbook_end: 2019-11-03T18:23:53.2859878Z
                    data_trade_start: 2015-03-29T21:46:08.7030000Z
                    data_trade_end: 2019-11-03T18:21:48.2770000Z
                    data_symbols_count: 403
                    volume_1hrs_usd: 1605.8
                    volume_1day_usd: 59957.44
                    volume_1mth_usd: 1259508.43
                    rank: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.Exchange"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - exchange_id: OKCOINCNY
                    website: https://www.okcoin.cn/
                    name: OKCoin CNY
                    data_quote_start: 2015-02-15T12:53:50.3430000Z
                    data_quote_end: 2018-03-09T23:34:52.5800000Z
                    data_orderbook_start: 2015-02-15T12:53:50.3430000Z
                    data_orderbook_end: 2018-03-09T23:34:52.5800000Z
                    data_trade_start: 2013-06-12T14:24:24.0000000Z
                    data_trade_end: 2017-11-01T16:30:39.7077259Z
                    data_symbols_count: 2
                    volume_1hrs_usd: 0.0
                    volume_1day_usd: 0.0
                    volume_1mth_usd: 0.0
                    rank: 1
                  - exchange_id: HUOBI
                    website: https://www.huobi.com/
                    name: Huobi (HBUS)
                    data_quote_start: 2015-03-29T21:46:06.2630000Z
                    data_quote_end: 2019-11-03T18:22:29.1837496Z
                    data_orderbook_start: 2015-03-29T21:46:06.2630000Z
                    data_orderbook_end: 2019-11-03T18:23:53.2859878Z
                    data_trade_start: 2015-03-29T21:46:08.7030000Z
                    data_trade_end: 2019-11-03T18:21:48.2770000Z
                    data_symbols_count: 403
                    volume_1hrs_usd: 1605.8
                    volume_1day_usd: 59957.44
                    volume_1mth_usd: 1259508.43
                    rank: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.Exchange"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - exchange_id: OKCOINCNY
                    website: https://www.okcoin.cn/
                    name: OKCoin CNY
                    data_quote_start: 2015-02-15T12:53:50.3430000Z
                    data_quote_end: 2018-03-09T23:34:52.5800000Z
                    data_orderbook_start: 2015-02-15T12:53:50.3430000Z
                    data_orderbook_end: 2018-03-09T23:34:52.5800000Z
                    data_trade_start: 2013-06-12T14:24:24.0000000Z
                    data_trade_end: 2017-11-01T16:30:39.7077259Z
                    data_symbols_count: 2
                    volume_1hrs_usd: 0.0
                    volume_1day_usd: 0.0
                    volume_1mth_usd: 0.0
                    rank: 1
                  - exchange_id: HUOBI
                    website: https://www.huobi.com/
                    name: Huobi (HBUS)
                    data_quote_start: 2015-03-29T21:46:06.2630000Z
                    data_quote_end: 2019-11-03T18:22:29.1837496Z
                    data_orderbook_start: 2015-03-29T21:46:06.2630000Z
                    data_orderbook_end: 2019-11-03T18:23:53.2859878Z
                    data_trade_start: 2015-03-29T21:46:08.7030000Z
                    data_trade_end: 2019-11-03T18:21:48.2770000Z
                    data_symbols_count: 403
                    volume_1hrs_usd: 1605.8
                    volume_1day_usd: 59957.44
                    volume_1mth_usd: 1259508.43
                    rank: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.Exchange"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - exchange_id: OKCOINCNY
                    website: https://www.okcoin.cn/
                    name: OKCoin CNY
                    data_quote_start: 2015-02-15T12:53:50.3430000Z
                    data_quote_end: 2018-03-09T23:34:52.5800000Z
                    data_orderbook_start: 2015-02-15T12:53:50.3430000Z
                    data_orderbook_end: 2018-03-09T23:34:52.5800000Z
                    data_trade_start: 2013-06-12T14:24:24.0000000Z
                    data_trade_end: 2017-11-01T16:30:39.7077259Z
                    data_symbols_count: 2
                    volume_1hrs_usd: 0.0
                    volume_1day_usd: 0.0
                    volume_1mth_usd: 0.0
                    rank: 1
                  - exchange_id: HUOBI
                    website: https://www.huobi.com/
                    name: Huobi (HBUS)
                    data_quote_start: 2015-03-29T21:46:06.2630000Z
                    data_quote_end: 2019-11-03T18:22:29.1837496Z
                    data_orderbook_start: 2015-03-29T21:46:06.2630000Z
                    data_orderbook_end: 2019-11-03T18:23:53.2859878Z
                    data_trade_start: 2015-03-29T21:46:08.7030000Z
                    data_trade_end: 2019-11-03T18:21:48.2770000Z
                    data_symbols_count: 403
                    volume_1hrs_usd: 1605.8
                    volume_1day_usd: 59957.44
                    volume_1mth_usd: 1259508.43
                    rank: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.Exchange"
                type: array
          description: successful operation
      summary: List all exchanges by exchange_id
      tags:
      - Metadata
  /v1/exchanges/icons/{size}:
    get:
      parameters:
      - description: The size of the icons.
        explode: false
        in: path
        name: size
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - exchange_id: CHAINCE
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/204e55dd8dab4a0d823c21f04be6be4b.png
                  - exchange_id: BILAXY
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4958c92dbddd4936b1f655e5063dc782.png
                  - exchange_id: BCOINSG
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/b7c77041cdef4f359b4044b2d73c7741.png
              schema:
                items:
                  $ref: "#/components/schemas/v1.Icon"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - exchange_id: CHAINCE
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/204e55dd8dab4a0d823c21f04be6be4b.png
                  - exchange_id: BILAXY
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4958c92dbddd4936b1f655e5063dc782.png
                  - exchange_id: BCOINSG
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/b7c77041cdef4f359b4044b2d73c7741.png
              schema:
                items:
                  $ref: "#/components/schemas/v1.Icon"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - exchange_id: CHAINCE
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/204e55dd8dab4a0d823c21f04be6be4b.png
                  - exchange_id: BILAXY
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4958c92dbddd4936b1f655e5063dc782.png
                  - exchange_id: BCOINSG
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/b7c77041cdef4f359b4044b2d73c7741.png
              schema:
                items:
                  $ref: "#/components/schemas/v1.Icon"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - exchange_id: CHAINCE
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/204e55dd8dab4a0d823c21f04be6be4b.png
                  - exchange_id: BILAXY
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4958c92dbddd4936b1f655e5063dc782.png
                  - exchange_id: BCOINSG
                    url: https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/b7c77041cdef4f359b4044b2d73c7741.png
              schema:
                items:
                  $ref: "#/components/schemas/v1.Icon"
                type: array
          description: successful operation
      summary: List of icons for the exchanges
      tags:
      - Metadata
  /v1/metrics/listing:
    get:
      description: Get all data metrics.
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_QUANTITY
                    description: The liquidation quantity metric calculates the specific
                      amount of the asset that must be sold to settle the trader's
                      obligations and bring their position back to a manageable level.
                      It helps ensure that the trader's losses are covered and that
                      their account remains in good standing.
                  - metric_id: DERIVATIVES_LAST_PRICE
                    description: "The last price represents the price at which the\
                      \ most recent trade of the derivative contract occurred. It\
                      \ provides traders and investors with the latest information\
                      \ on the market value of the derivative, allowing them to assess\
                      \ the current market sentiment, track price movements, and make\
                      \ informed decisions regarding their derivative positions. The\
                      \ derivatives last price metric is crucial for monitoring real-time\
                      \ market conditions and managing derivative trading strategies\
                      \ effectively."
              schema:
                items:
                  $ref: "#/components/schemas/v1.Metric"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_QUANTITY
                    description: The liquidation quantity metric calculates the specific
                      amount of the asset that must be sold to settle the trader's
                      obligations and bring their position back to a manageable level.
                      It helps ensure that the trader's losses are covered and that
                      their account remains in good standing.
                  - metric_id: DERIVATIVES_LAST_PRICE
                    description: "The last price represents the price at which the\
                      \ most recent trade of the derivative contract occurred. It\
                      \ provides traders and investors with the latest information\
                      \ on the market value of the derivative, allowing them to assess\
                      \ the current market sentiment, track price movements, and make\
                      \ informed decisions regarding their derivative positions. The\
                      \ derivatives last price metric is crucial for monitoring real-time\
                      \ market conditions and managing derivative trading strategies\
                      \ effectively."
              schema:
                items:
                  $ref: "#/components/schemas/v1.Metric"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_QUANTITY
                    description: The liquidation quantity metric calculates the specific
                      amount of the asset that must be sold to settle the trader's
                      obligations and bring their position back to a manageable level.
                      It helps ensure that the trader's losses are covered and that
                      their account remains in good standing.
                  - metric_id: DERIVATIVES_LAST_PRICE
                    description: "The last price represents the price at which the\
                      \ most recent trade of the derivative contract occurred. It\
                      \ provides traders and investors with the latest information\
                      \ on the market value of the derivative, allowing them to assess\
                      \ the current market sentiment, track price movements, and make\
                      \ informed decisions regarding their derivative positions. The\
                      \ derivatives last price metric is crucial for monitoring real-time\
                      \ market conditions and managing derivative trading strategies\
                      \ effectively."
              schema:
                items:
                  $ref: "#/components/schemas/v1.Metric"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_QUANTITY
                    description: The liquidation quantity metric calculates the specific
                      amount of the asset that must be sold to settle the trader's
                      obligations and bring their position back to a manageable level.
                      It helps ensure that the trader's losses are covered and that
                      their account remains in good standing.
                  - metric_id: DERIVATIVES_LAST_PRICE
                    description: "The last price represents the price at which the\
                      \ most recent trade of the derivative contract occurred. It\
                      \ provides traders and investors with the latest information\
                      \ on the market value of the derivative, allowing them to assess\
                      \ the current market sentiment, track price movements, and make\
                      \ informed decisions regarding their derivative positions. The\
                      \ derivatives last price metric is crucial for monitoring real-time\
                      \ market conditions and managing derivative trading strategies\
                      \ effectively."
              schema:
                items:
                  $ref: "#/components/schemas/v1.Metric"
                type: array
          description: successful operation
      summary: Listing of all supported metrics by CoinAPI
      tags:
      - MetricsV1
  /v1/metrics/exchange/listing:
    get:
      description: Get data metrics for exchange.
      parameters:
      - description: The metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: false
        schema:
          type: string
        style: form
      - description: The exchange identifier (from the Metadata -> Exchanges)
        explode: true
        in: query
        name: exchange_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
          description: successful operation
      summary: Listing of all supported exchange metrics
      tags:
      - MetricsV1
  /v1/metrics/exchange/current:
    get:
      description: Get current exchange metrics values.
      parameters:
      - description: The metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: false
        schema:
          type: string
        style: form
      - description: The exchange identifier (from the Metadata -> Exchanges)
        explode: true
        in: query
        name: exchange_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-16T07:55:07.2787756Z
                    recv_time: 2023-06-16T07:55:07.0010000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE
                    value_decimal: 0.0086
                  - entry_time: 2023-06-26T07:05:39.9865633Z
                    recv_time: 2023-06-26T07:05:39.9000000Z
                    exchange_id: DERIBIT
                    metric_id: IV_UNDERLYING_PRICE
                    value_decimal: 30743.29
                  - entry_time: 2023-06-26T07:05:17.0768012Z
                    recv_time: 2023-06-26T07:05:16.8420000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE_IV
                    value_decimal: 60.77
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-16T07:55:07.2787756Z
                    recv_time: 2023-06-16T07:55:07.0010000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE
                    value_decimal: 0.0086
                  - entry_time: 2023-06-26T07:05:39.9865633Z
                    recv_time: 2023-06-26T07:05:39.9000000Z
                    exchange_id: DERIBIT
                    metric_id: IV_UNDERLYING_PRICE
                    value_decimal: 30743.29
                  - entry_time: 2023-06-26T07:05:17.0768012Z
                    recv_time: 2023-06-26T07:05:16.8420000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE_IV
                    value_decimal: 60.77
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-16T07:55:07.2787756Z
                    recv_time: 2023-06-16T07:55:07.0010000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE
                    value_decimal: 0.0086
                  - entry_time: 2023-06-26T07:05:39.9865633Z
                    recv_time: 2023-06-26T07:05:39.9000000Z
                    exchange_id: DERIBIT
                    metric_id: IV_UNDERLYING_PRICE
                    value_decimal: 30743.29
                  - entry_time: 2023-06-26T07:05:17.0768012Z
                    recv_time: 2023-06-26T07:05:16.8420000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE_IV
                    value_decimal: 60.77
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-16T07:55:07.2787756Z
                    recv_time: 2023-06-16T07:55:07.0010000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE
                    value_decimal: 0.0086
                  - entry_time: 2023-06-26T07:05:39.9865633Z
                    recv_time: 2023-06-26T07:05:39.9000000Z
                    exchange_id: DERIBIT
                    metric_id: IV_UNDERLYING_PRICE
                    value_decimal: 30743.29
                  - entry_time: 2023-06-26T07:05:17.0768012Z
                    recv_time: 2023-06-26T07:05:16.8420000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE_IV
                    value_decimal: 60.77
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
          description: successful operation
      summary: Current metrics for given exchange
      tags:
      - MetricsV1
  /v1/metrics/exchange/history:
    get:
      description: Get exchange metrics history.
      parameters:
      - description: Metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: true
        schema:
          type: string
        style: form
      - description: Exchange identifier (from the Metadata -> Exchanges)
        explode: true
        in: query
        name: exchange_id
        required: true
        schema:
          type: string
        style: form
      - description: Starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If set, returned values will be in unix timestamp format (valid\
          \ values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)"
        explode: true
        in: query
        name: time_format
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier of requested timeseries period (e.g. `5SEC` or `2MTH`),\
          \ default value is `1SEC`"
        explode: true
        in: query
        name: period_id
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - time_period_start: 2023-07-03T14:29:02.0000000Z
                    time_period_end: 2023-07-03T14:29:03.0000000Z
                    time_open: 2023-07-03T14:29:02.5699837Z
                    time_close: 2023-07-03T14:29:02.5699837Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 30668.476938
                  - time_period_start: 2023-07-03T14:29:03.0000000Z
                    time_period_end: 2023-07-03T14:29:04.0000000Z
                    time_open: 2023-07-03T14:29:03.1076159Z
                    time_close: 2023-07-03T14:29:03.1076159Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 0.05485331
                  - time_period_start: 2023-07-03T14:29:04.0000000Z
                    time_period_end: 2023-07-03T14:29:05.0000000Z
                    time_open: 2023-07-03T14:29:04.5792149Z
                    time_close: 2023-07-03T14:29:04.9459786Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 7.0257000000000005
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2023-07-03T14:29:02.0000000Z
                    time_period_end: 2023-07-03T14:29:03.0000000Z
                    time_open: 2023-07-03T14:29:02.5699837Z
                    time_close: 2023-07-03T14:29:02.5699837Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 30668.476938
                  - time_period_start: 2023-07-03T14:29:03.0000000Z
                    time_period_end: 2023-07-03T14:29:04.0000000Z
                    time_open: 2023-07-03T14:29:03.1076159Z
                    time_close: 2023-07-03T14:29:03.1076159Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 0.05485331
                  - time_period_start: 2023-07-03T14:29:04.0000000Z
                    time_period_end: 2023-07-03T14:29:05.0000000Z
                    time_open: 2023-07-03T14:29:04.5792149Z
                    time_close: 2023-07-03T14:29:04.9459786Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 7.0257000000000005
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2023-07-03T14:29:02.0000000Z
                    time_period_end: 2023-07-03T14:29:03.0000000Z
                    time_open: 2023-07-03T14:29:02.5699837Z
                    time_close: 2023-07-03T14:29:02.5699837Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 30668.476938
                  - time_period_start: 2023-07-03T14:29:03.0000000Z
                    time_period_end: 2023-07-03T14:29:04.0000000Z
                    time_open: 2023-07-03T14:29:03.1076159Z
                    time_close: 2023-07-03T14:29:03.1076159Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 0.05485331
                  - time_period_start: 2023-07-03T14:29:04.0000000Z
                    time_period_end: 2023-07-03T14:29:05.0000000Z
                    time_open: 2023-07-03T14:29:04.5792149Z
                    time_close: 2023-07-03T14:29:04.9459786Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 7.0257000000000005
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - time_period_start: 2023-07-03T14:29:02.0000000Z
                    time_period_end: 2023-07-03T14:29:03.0000000Z
                    time_open: 2023-07-03T14:29:02.5699837Z
                    time_close: 2023-07-03T14:29:02.5699837Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 30668.476938
                  - time_period_start: 2023-07-03T14:29:03.0000000Z
                    time_period_end: 2023-07-03T14:29:04.0000000Z
                    time_open: 2023-07-03T14:29:03.1076159Z
                    time_close: 2023-07-03T14:29:03.1076159Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 0.05485331
                  - time_period_start: 2023-07-03T14:29:04.0000000Z
                    time_period_end: 2023-07-03T14:29:05.0000000Z
                    time_open: 2023-07-03T14:29:04.5792149Z
                    time_close: 2023-07-03T14:29:04.9459786Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 7.0257000000000005
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
          description: successful operation
      summary: Historical metrics for the exchange
      tags:
      - MetricsV1
  /v1/metrics/symbol/listing:
    get:
      description: Get data metrics for symbol.
      parameters:
      - description: Metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: false
        schema:
          type: string
        style: form
      - description: Exchange identifier (from the Metadata -> Exchanges)
        explode: true
        in: query
        name: exchange_id
        required: false
        schema:
          type: string
        style: form
      - description: Symbol identifier (from the Metadata -> Symbols)
        explode: true
        in: query
        name: symbol_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    symbol_id: BINANCEFTS_PERP_ETC_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    symbol_id: BINANCEFTS_PERP_ETC_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    symbol_id: BINANCEFTS_PERP_ETC_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    symbol_id: BINANCEFTS_PERP_ETC_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
          description: successful operation
      summary: Listing of all supported metrics for symbol
      tags:
      - MetricsV1
  /v1/metrics/symbol/current:
    get:
      description: Get current symbol metrics.
      parameters:
      - description: Metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: false
        schema:
          type: string
        style: form
      - description: Symbol identifier (from the Metadata -> Symbols)
        explode: true
        in: query
        name: symbol_id
        required: false
        schema:
          type: string
        style: form
      - description: Exchange id (from the Metadata -> Exchanges)
        explode: true
        in: query
        name: exchange_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBITUAT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_RHO
                    value_decimal: -594.10357
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_VEGA
                    value_decimal: 49.31013
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_THETA
                    value_decimal: -6.14104
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: DERIVATIVES_INDEX_PRICE
                    value_decimal: 30027.74
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBITUAT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_RHO
                    value_decimal: -594.10357
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_VEGA
                    value_decimal: 49.31013
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_THETA
                    value_decimal: -6.14104
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: DERIVATIVES_INDEX_PRICE
                    value_decimal: 30027.74
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBITUAT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_RHO
                    value_decimal: -594.10357
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_VEGA
                    value_decimal: 49.31013
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_THETA
                    value_decimal: -6.14104
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: DERIVATIVES_INDEX_PRICE
                    value_decimal: 30027.74
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBITUAT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_RHO
                    value_decimal: -594.10357
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_VEGA
                    value_decimal: 49.31013
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: GREEKS_THETA
                    value_decimal: -6.14104
                  - entry_time: 2023-06-23T12:38:48.2782698Z
                    recv_time: 2023-06-23T12:38:48.0140000Z
                    exchange_id: DERIBIT
                    symbol_id: DERIBIT_OPT_BTC_USD_240329_80000_P
                    metric_id: DERIVATIVES_INDEX_PRICE
                    value_decimal: 30027.74
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
          description: successful operation
      summary: Current metrics for given symbol
      tags:
      - MetricsV1
  /v1/metrics/symbol/history:
    get:
      description: Get symbol metrics history.
      parameters:
      - description: Metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: true
        schema:
          type: string
        style: form
      - description: Symbol identifier (from the Metadata -> Symbols)
        explode: true
        in: query
        name: symbol_id
        required: true
        schema:
          type: string
        style: form
      - description: Starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If set, returned values will be in unix timestamp format (valid\
          \ values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)"
        explode: true
        in: query
        name: time_format
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier of requested timeseries period (e.g. `5SEC` or `2MTH`),\
          \ default value is `1SEC`"
        explode: true
        in: query
        name: period_id
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - time_period_start: 2023-07-03T14:29:02.0000000Z
                    time_period_end: 2023-07-03T14:29:03.0000000Z
                    time_open: 2023-07-03T14:29:02.5699837Z
                    time_close: 2023-07-03T14:29:02.5699837Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 30668.476938
                  - time_period_start: 2023-07-03T14:29:03.0000000Z
                    time_period_end: 2023-07-03T14:29:04.0000000Z
                    time_open: 2023-07-03T14:29:03.1076159Z
                    time_close: 2023-07-03T14:29:03.1076159Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 0.05485331
                  - time_period_start: 2023-07-03T14:29:04.0000000Z
                    time_period_end: 2023-07-03T14:29:05.0000000Z
                    time_open: 2023-07-03T14:29:04.5792149Z
                    time_close: 2023-07-03T14:29:04.9459786Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 7.0257000000000005
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2023-07-03T14:29:02.0000000Z
                    time_period_end: 2023-07-03T14:29:03.0000000Z
                    time_open: 2023-07-03T14:29:02.5699837Z
                    time_close: 2023-07-03T14:29:02.5699837Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 30668.476938
                  - time_period_start: 2023-07-03T14:29:03.0000000Z
                    time_period_end: 2023-07-03T14:29:04.0000000Z
                    time_open: 2023-07-03T14:29:03.1076159Z
                    time_close: 2023-07-03T14:29:03.1076159Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 0.05485331
                  - time_period_start: 2023-07-03T14:29:04.0000000Z
                    time_period_end: 2023-07-03T14:29:05.0000000Z
                    time_open: 2023-07-03T14:29:04.5792149Z
                    time_close: 2023-07-03T14:29:04.9459786Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 7.0257000000000005
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2023-07-03T14:29:02.0000000Z
                    time_period_end: 2023-07-03T14:29:03.0000000Z
                    time_open: 2023-07-03T14:29:02.5699837Z
                    time_close: 2023-07-03T14:29:02.5699837Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 30668.476938
                  - time_period_start: 2023-07-03T14:29:03.0000000Z
                    time_period_end: 2023-07-03T14:29:04.0000000Z
                    time_open: 2023-07-03T14:29:03.1076159Z
                    time_close: 2023-07-03T14:29:03.1076159Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 0.05485331
                  - time_period_start: 2023-07-03T14:29:04.0000000Z
                    time_period_end: 2023-07-03T14:29:05.0000000Z
                    time_open: 2023-07-03T14:29:04.5792149Z
                    time_close: 2023-07-03T14:29:04.9459786Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 7.0257000000000005
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - time_period_start: 2023-07-03T14:29:02.0000000Z
                    time_period_end: 2023-07-03T14:29:03.0000000Z
                    time_open: 2023-07-03T14:29:02.5699837Z
                    time_close: 2023-07-03T14:29:02.5699837Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 30668.476938
                  - time_period_start: 2023-07-03T14:29:03.0000000Z
                    time_period_end: 2023-07-03T14:29:04.0000000Z
                    time_open: 2023-07-03T14:29:03.1076159Z
                    time_close: 2023-07-03T14:29:03.1076159Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 0.05485331
                  - time_period_start: 2023-07-03T14:29:04.0000000Z
                    time_period_end: 2023-07-03T14:29:05.0000000Z
                    time_open: 2023-07-03T14:29:04.5792149Z
                    time_close: 2023-07-03T14:29:04.9459786Z
                    first: 0
                    last: 0
                    min: 0
                    max: 0
                    count: 0
                    sum: 7.0257000000000005
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
          description: successful operation
      summary: Historical metrics for symbol
      tags:
      - MetricsV1
  /v1/metrics/asset/listing:
    get:
      description: Get data metrics for asset.
      parameters:
      - description: Metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: false
        schema:
          type: string
        style: form
      - description: Exchange identifier (from the Metadata -> Exchanges)
        explode: true
        in: query
        name: exchange_id
        required: false
        schema:
          type: string
        style: form
      - description: Chain identifier
        explode: true
        in: query
        name: chain_id
        required: false
        schema:
          type: string
        style: form
      - description: Network identifier
        explode: true
        in: query
        name: network_id
        required: false
        schema:
          type: string
        style: form
      - description: Asset identifier (from the Metadata -> Assets)
        explode: true
        in: query
        name: asset_id
        required: false
        schema:
          type: string
        style: form
      - description: The asset external identifier
        explode: true
        in: query
        name: asset_id_external
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    symbol_id: BINANCEFTS_PERP_ETC_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    symbol_id: BINANCEFTS_PERP_ETC_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    symbol_id: BINANCEFTS_PERP_ETC_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - metric_id: LIQUIDATION_TIME_IN_FORCE
                    symbol_id: BINANCEFTS_PERP_ETC_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_TYPE
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
                  - metric_id: LIQUIDATION_ORDER_STATUS
                    symbol_id: BINANCEFTS_PERP_EOS_USDT
                    exchange_id: BINANCEFTS
              schema:
                items:
                  $ref: "#/components/schemas/v1.ListingItem"
                type: array
          description: successful operation
      summary: Listing of all supported metrics for asset
      tags:
      - MetricsV1
  /v1/metrics/asset/current:
    get:
      description: Get current asset metrics.
      parameters:
      - description: Metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: false
        schema:
          type: string
        style: form
      - description: Asset identifier (from the Metadata -> Assets)
        explode: true
        in: query
        name: asset_id
        required: false
        schema:
          type: string
        style: form
      - description: Exchange asset identifier
        explode: true
        in: query
        name: asset_id_external
        required: false
        schema:
          type: string
        style: form
      - description: Exchange identifier (from the Metadata -> Exchanges)
        explode: true
        in: query
        name: exchange_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-16T07:55:07.2787756Z
                    recv_time: 2023-06-16T07:55:07.0010000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE
                    value_decimal: 0.0086
                  - entry_time: 2023-06-26T07:05:39.9865633Z
                    recv_time: 2023-06-26T07:05:39.9000000Z
                    exchange_id: DERIBIT
                    metric_id: IV_UNDERLYING_PRICE
                    value_decimal: 30743.29
                  - entry_time: 2023-06-26T07:05:17.0768012Z
                    recv_time: 2023-06-26T07:05:16.8420000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE_IV
                    value_decimal: 60.77
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-16T07:55:07.2787756Z
                    recv_time: 2023-06-16T07:55:07.0010000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE
                    value_decimal: 0.0086
                  - entry_time: 2023-06-26T07:05:39.9865633Z
                    recv_time: 2023-06-26T07:05:39.9000000Z
                    exchange_id: DERIBIT
                    metric_id: IV_UNDERLYING_PRICE
                    value_decimal: 30743.29
                  - entry_time: 2023-06-26T07:05:17.0768012Z
                    recv_time: 2023-06-26T07:05:16.8420000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE_IV
                    value_decimal: 60.77
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-16T07:55:07.2787756Z
                    recv_time: 2023-06-16T07:55:07.0010000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE
                    value_decimal: 0.0086
                  - entry_time: 2023-06-26T07:05:39.9865633Z
                    recv_time: 2023-06-26T07:05:39.9000000Z
                    exchange_id: DERIBIT
                    metric_id: IV_UNDERLYING_PRICE
                    value_decimal: 30743.29
                  - entry_time: 2023-06-26T07:05:17.0768012Z
                    recv_time: 2023-06-26T07:05:16.8420000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE_IV
                    value_decimal: 60.77
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - entry_time: 2023-06-16T07:55:07.2787756Z
                    recv_time: 2023-06-16T07:55:07.0010000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE
                    value_decimal: 0.0086
                  - entry_time: 2023-06-26T07:05:39.9865633Z
                    recv_time: 2023-06-26T07:05:39.9000000Z
                    exchange_id: DERIBIT
                    metric_id: IV_UNDERLYING_PRICE
                    value_decimal: 30743.29
                  - entry_time: 2023-06-26T07:05:17.0768012Z
                    recv_time: 2023-06-26T07:05:16.8420000Z
                    exchange_id: DERIBIT
                    metric_id: DERIVATIVES_MARK_PRICE_IV
                    value_decimal: 60.77
              schema:
                items:
                  $ref: "#/components/schemas/v1.GeneralData"
                type: array
          description: successful operation
      summary: Current metrics for given asset
      tags:
      - MetricsV1
  /v1/metrics/asset/history:
    get:
      description: Get asset metrics history.
      parameters:
      - description: Metric identifier (from the Metrics -> Listing)
        explode: true
        in: query
        name: metric_id
        required: true
        schema:
          type: string
        style: form
      - description: Asset identifier (from the Metadata -> Assets)
        explode: true
        in: query
        name: asset_id
        required: false
        schema:
          type: string
        style: form
      - description: Exchange asset identifier
        explode: true
        in: query
        name: asset_id_external
        required: false
        schema:
          type: string
        style: form
      - description: Exchange identifier (from the Metadata -> Exchanges)
        explode: true
        in: query
        name: exchange_id
        required: true
        schema:
          type: string
        style: form
      - description: Starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If set, returned values will be in unix timestamp format (valid\
          \ values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)"
        explode: true
        in: query
        name: time_format
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier of requested timeseries period (e.g. `5SEC` or `2MTH`),\
          \ default value is `1SEC`"
        explode: true
        in: query
        name: period_id
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
            application/x-msgpack:
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricData"
                type: array
          description: successful operation
      summary: Historical metrics for asset
      tags:
      - MetricsV1
  /v2/metrics/listing:
    get:
      description: Get all metrics available in the system.
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example metrics listing (external + database generic):
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: FEES
                    description: Total fees collected by the protocol
                  - metric_id: VOLUMES
                    description: Trading volume metrics
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            application/json:
              examples:
                Example metrics listing (external + database generic):
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: FEES
                    description: Total fees collected by the protocol
                  - metric_id: VOLUMES
                    description: Trading volume metrics
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            text/json:
              examples:
                Example metrics listing (external + database generic):
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: FEES
                    description: Total fees collected by the protocol
                  - metric_id: VOLUMES
                    description: Trading volume metrics
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            application/x-msgpack:
              examples:
                Example metrics listing (external + database generic):
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: FEES
                    description: Total fees collected by the protocol
                  - metric_id: VOLUMES
                    description: Trading volume metrics
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
          description: successful operation
      summary: Listing of all supported metrics
      tags:
      - MetricsV2
  /v2/metrics/exchange/listing:
    get:
      description: Get all metrics that are actually available for the specified exchange.
      parameters:
      - description: "Exchange identifier (e.g., BINANCE, UNISWAP-V3-ETHEREUM)"
        explode: true
        in: query
        name: exchange_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example exchange metrics (external + generic):
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: FEES
                    description: Total fees collected by the protocol
                  - metric_id: TRADES_COUNT_BUYS
                    description: "Generic metric: TRADES_COUNT_BUYS"
                  - metric_id: VOLUME_QUOTED
                    description: "Generic metric: VOLUME_QUOTED"
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            application/json:
              examples:
                Example exchange metrics (external + generic):
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: FEES
                    description: Total fees collected by the protocol
                  - metric_id: TRADES_COUNT_BUYS
                    description: "Generic metric: TRADES_COUNT_BUYS"
                  - metric_id: VOLUME_QUOTED
                    description: "Generic metric: VOLUME_QUOTED"
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            text/json:
              examples:
                Example exchange metrics (external + generic):
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: FEES
                    description: Total fees collected by the protocol
                  - metric_id: TRADES_COUNT_BUYS
                    description: "Generic metric: TRADES_COUNT_BUYS"
                  - metric_id: VOLUME_QUOTED
                    description: "Generic metric: VOLUME_QUOTED"
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            application/x-msgpack:
              examples:
                Example exchange metrics (external + generic):
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: FEES
                    description: Total fees collected by the protocol
                  - metric_id: TRADES_COUNT_BUYS
                    description: "Generic metric: TRADES_COUNT_BUYS"
                  - metric_id: VOLUME_QUOTED
                    description: "Generic metric: VOLUME_QUOTED"
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
          description: successful operation
      summary: Listing of metrics available for specific exchange
      tags:
      - MetricsV2
  /v2/metrics/exchange/history:
    get:
      description: Get exchange metrics history.
      parameters:
      - description: "Metric identifier (e.g., `TVL`, `STABLES_BRIDGED_USD`)"
        explode: true
        in: query
        name: metric_id
        required: true
        schema:
          type: string
        style: form
      - description: "Exchange identifier (e.g., `BINANCE`, `UNISWAP-V3-ETHEREUM`)"
        explode: true
        in: query
        name: exchange_id
        required: true
        schema:
          type: string
        style: form
      - description: Starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If set, returned values will be in unix timestamp format (valid\
          \ values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)"
        explode: true
        in: query
        name: time_format
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier of requested timeseries period (e.g. `1MIN` or `2MTH`),\
          \ default value is `1MIN`"
        explode: true
        in: query
        name: period_id
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example external metric response (TVL, FEES, etc.):
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 1000000
                    last_value: 1050000
                    min_value: 990000
                    max_value: 110000
                    count_values: 24
                    sum_values: 25000000
                Example generic metric response (TRADES_COUNT, VOLUME, etc.):
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    value_open: 1000
                    value_high: 1100
                    value_low: 950
                    value_close: 1050
                    value_count: 24
                    value_sum: 25000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            application/json:
              examples:
                Example external metric response (TVL, FEES, etc.):
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 1000000
                    last_value: 1050000
                    min_value: 990000
                    max_value: 110000
                    count_values: 24
                    sum_values: 25000000
                Example generic metric response (TRADES_COUNT, VOLUME, etc.):
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    value_open: 1000
                    value_high: 1100
                    value_low: 950
                    value_close: 1050
                    value_count: 24
                    value_sum: 25000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            text/json:
              examples:
                Example external metric response (TVL, FEES, etc.):
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 1000000
                    last_value: 1050000
                    min_value: 990000
                    max_value: 110000
                    count_values: 24
                    sum_values: 25000000
                Example generic metric response (TRADES_COUNT, VOLUME, etc.):
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    value_open: 1000
                    value_high: 1100
                    value_low: 950
                    value_close: 1050
                    value_count: 24
                    value_sum: 25000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            application/x-msgpack:
              examples:
                Example external metric response (TVL, FEES, etc.):
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 1000000
                    last_value: 1050000
                    min_value: 990000
                    max_value: 110000
                    count_values: 24
                    sum_values: 25000000
                Example generic metric response (TRADES_COUNT, VOLUME, etc.):
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    value_open: 1000
                    value_high: 1100
                    value_low: 950
                    value_close: 1050
                    value_count: 24
                    value_sum: 25000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
          description: successful operation
        "400":
          description: "Invalid input, e.g., missing required parameters, invalid\
            \ exchange_id mapping."
        "500":
          description: Internal server error.
      summary: Historical metrics for the exchange
      tags:
      - MetricsV2
  /v2/metrics/asset/history:
    get:
      description: Get asset metrics history.
      parameters:
      - description: "Metric identifier (e.g., `TVL`, `STABLES_BRIDGED_USD`)"
        explode: true
        in: query
        name: metric_id
        required: true
        schema:
          type: string
        style: form
      - description: "Asset identifier (e.g., `USDC`, `USDT`)"
        explode: true
        in: query
        name: asset_id
        required: true
        schema:
          type: string
        style: form
      - description: Starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If set, returned values will be in unix timestamp format (valid\
          \ values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)"
        explode: true
        in: query
        name: time_format
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier of requested timeseries period (e.g. `1MIN` or `2MTH`),\
          \ default value is `1MIN`"
        explode: true
        in: query
        name: period_id
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example asset metrics response:
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 15000000000
                    last_value: 15500000000
                    min_value: 14800000000
                    max_value: 15600000000
                    count_values: 24
                    sum_values: 370000000000
                  - time_period_start: 2023-07-04T00:00:00.0000000Z
                    time_period_end: 2023-07-05T00:00:00.0000000Z
                    time_open: 2023-07-04T00:00:00.0000000Z
                    time_close: 2023-07-04T23:59:59.9990000Z
                    first_value: 15500000000
                    last_value: 15300000000
                    min_value: 15200000000
                    max_value: 15700000000
                    count_values: 24
                    sum_values: 372000000000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            application/json:
              examples:
                Example asset metrics response:
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 15000000000
                    last_value: 15500000000
                    min_value: 14800000000
                    max_value: 15600000000
                    count_values: 24
                    sum_values: 370000000000
                  - time_period_start: 2023-07-04T00:00:00.0000000Z
                    time_period_end: 2023-07-05T00:00:00.0000000Z
                    time_open: 2023-07-04T00:00:00.0000000Z
                    time_close: 2023-07-04T23:59:59.9990000Z
                    first_value: 15500000000
                    last_value: 15300000000
                    min_value: 15200000000
                    max_value: 15700000000
                    count_values: 24
                    sum_values: 372000000000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            text/json:
              examples:
                Example asset metrics response:
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 15000000000
                    last_value: 15500000000
                    min_value: 14800000000
                    max_value: 15600000000
                    count_values: 24
                    sum_values: 370000000000
                  - time_period_start: 2023-07-04T00:00:00.0000000Z
                    time_period_end: 2023-07-05T00:00:00.0000000Z
                    time_open: 2023-07-04T00:00:00.0000000Z
                    time_close: 2023-07-04T23:59:59.9990000Z
                    first_value: 15500000000
                    last_value: 15300000000
                    min_value: 15200000000
                    max_value: 15700000000
                    count_values: 24
                    sum_values: 372000000000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            application/x-msgpack:
              examples:
                Example asset metrics response:
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 15000000000
                    last_value: 15500000000
                    min_value: 14800000000
                    max_value: 15600000000
                    count_values: 24
                    sum_values: 370000000000
                  - time_period_start: 2023-07-04T00:00:00.0000000Z
                    time_period_end: 2023-07-05T00:00:00.0000000Z
                    time_open: 2023-07-04T00:00:00.0000000Z
                    time_close: 2023-07-04T23:59:59.9990000Z
                    first_value: 15500000000
                    last_value: 15300000000
                    min_value: 15200000000
                    max_value: 15700000000
                    count_values: 24
                    sum_values: 372000000000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
          description: successful operation
        "400":
          description: "Invalid input, e.g., missing required parameters, invalid\
            \ asset_id."
        "500":
          description: Internal server error.
      summary: Historical metrics for the asset
      tags:
      - MetricsV2
  /v2/metrics/chain/history:
    get:
      description: Get chain metrics history.
      parameters:
      - description: "Metric identifier (e.g., `TVL`, `STABLES_BRIDGED_USD`)"
        explode: true
        in: query
        name: metric_id
        required: true
        schema:
          type: string
        style: form
      - description: "Chain identifier (e.g., `Ethereum`, `Arbitrum`)"
        explode: true
        in: query
        name: chain_id
        required: true
        schema:
          type: string
        style: form
      - description: Starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If set, returned values will be in unix timestamp format (valid\
          \ values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)"
        explode: true
        in: query
        name: time_format
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier of requested timeseries period (e.g. `1MIN` or `2MTH`),\
          \ default value is `1MIN`"
        explode: true
        in: query
        name: period_id
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example chain metrics response:
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 25000000000
                    last_value: 26000000000
                    min_value: 24500000000
                    max_value: 26200000000
                    count_values: 24
                    sum_values: 615000000000
                  - time_period_start: 2023-07-04T00:00:00.0000000Z
                    time_period_end: 2023-07-05T00:00:00.0000000Z
                    time_open: 2023-07-04T00:00:00.0000000Z
                    time_close: 2023-07-04T23:59:59.9990000Z
                    first_value: 26000000000
                    last_value: 25800000000
                    min_value: 25700000000
                    max_value: 26100000000
                    count_values: 24
                    sum_values: 620000000000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            application/json:
              examples:
                Example chain metrics response:
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 25000000000
                    last_value: 26000000000
                    min_value: 24500000000
                    max_value: 26200000000
                    count_values: 24
                    sum_values: 615000000000
                  - time_period_start: 2023-07-04T00:00:00.0000000Z
                    time_period_end: 2023-07-05T00:00:00.0000000Z
                    time_open: 2023-07-04T00:00:00.0000000Z
                    time_close: 2023-07-04T23:59:59.9990000Z
                    first_value: 26000000000
                    last_value: 25800000000
                    min_value: 25700000000
                    max_value: 26100000000
                    count_values: 24
                    sum_values: 620000000000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            text/json:
              examples:
                Example chain metrics response:
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 25000000000
                    last_value: 26000000000
                    min_value: 24500000000
                    max_value: 26200000000
                    count_values: 24
                    sum_values: 615000000000
                  - time_period_start: 2023-07-04T00:00:00.0000000Z
                    time_period_end: 2023-07-05T00:00:00.0000000Z
                    time_open: 2023-07-04T00:00:00.0000000Z
                    time_close: 2023-07-04T23:59:59.9990000Z
                    first_value: 26000000000
                    last_value: 25800000000
                    min_value: 25700000000
                    max_value: 26100000000
                    count_values: 24
                    sum_values: 620000000000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
            application/x-msgpack:
              examples:
                Example chain metrics response:
                  value:
                  - time_period_start: 2023-07-03T00:00:00.0000000Z
                    time_period_end: 2023-07-04T00:00:00.0000000Z
                    time_open: 2023-07-03T00:00:00.0000000Z
                    time_close: 2023-07-03T23:59:59.9990000Z
                    first_value: 25000000000
                    last_value: 26000000000
                    min_value: 24500000000
                    max_value: 26200000000
                    count_values: 24
                    sum_values: 615000000000
                  - time_period_start: 2023-07-04T00:00:00.0000000Z
                    time_period_end: 2023-07-05T00:00:00.0000000Z
                    time_open: 2023-07-04T00:00:00.0000000Z
                    time_close: 2023-07-04T23:59:59.9990000Z
                    first_value: 26000000000
                    last_value: 25800000000
                    min_value: 25700000000
                    max_value: 26100000000
                    count_values: 24
                    sum_values: 620000000000
              schema:
                items:
                  $ref: "#/components/schemas/Models.BaseCsvModel"
                type: array
          description: successful operation
        "400":
          description: "Invalid input, e.g., missing required parameters, invalid\
            \ chain_id."
        "500":
          description: Internal server error.
      summary: Historical metrics for the chain
      tags:
      - MetricsV2
  /v2/metrics/asset/listing:
    get:
      description: Get all metrics that are actually available for the specified asset.
      parameters:
      - description: "Asset identifier (e.g., USDC, USDT)"
        explode: true
        in: query
        name: asset_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example external metrics for asset:
                  value:
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
                  - metric_id: STABLES_MINTED_USD
                    description: Total minted USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            application/json:
              examples:
                Example external metrics for asset:
                  value:
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
                  - metric_id: STABLES_MINTED_USD
                    description: Total minted USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            text/json:
              examples:
                Example external metrics for asset:
                  value:
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
                  - metric_id: STABLES_MINTED_USD
                    description: Total minted USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            application/x-msgpack:
              examples:
                Example external metrics for asset:
                  value:
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
                  - metric_id: STABLES_MINTED_USD
                    description: Total minted USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
          description: successful operation
      summary: Listing of metrics available for specific asset
      tags:
      - MetricsV2
  /v2/metrics/chain/listing:
    get:
      description: Get all metrics that are actually available for the specified blockchain
        chain.
      parameters:
      - description: "Chain identifier (e.g., ETHEREUM, ARBITRUM)"
        explode: true
        in: query
        name: chain_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example external metrics for chain:
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            application/json:
              examples:
                Example external metrics for chain:
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            text/json:
              examples:
                Example external metrics for chain:
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
            application/x-msgpack:
              examples:
                Example external metrics for chain:
                  value:
                  - metric_id: TVL
                    description: Total Value Locked in the protocol
                  - metric_id: STABLES_BRIDGED_USD
                    description: Total USD stablecoins bridged to USD value
                  - metric_id: STABLES_CIRCULATING_USD
                    description: Total circulating USD stablecoins
              schema:
                items:
                  $ref: "#/components/schemas/v1.MetricInfo"
                type: array
          description: successful operation
      summary: Listing of metrics available for specific chain
      tags:
      - MetricsV2
  /v1/options/{exchange_id}/current:
    get:
      description: |-
        Get current options data for a specific exchange.

        Returns option data grouped by underlying asset, quote currency, and expiration time,
        with quotes for both calls and puts at each strike price.
      parameters:
      - description: Exchange identifier (from the Metadata -> Exchanges)
        explode: false
        in: path
        name: exchange_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - asset_id_base: BTC
                    asset_id_quote: USD
                    underlying_price: 770.0
                    time_expiration: 2013-09-28T22:40:50.0000000Z
                    strikes:
                    - strike_price: 770.0
                      call:
                        symbol_id: DERIBIT_OPT_BTC-28SEP28_77000
                        time_exchange: 0001-01-01T00:00:00.0000000Z
                        time_coinapi: 0001-01-01T00:00:00.0000000Z
                        ask_price: 770.0
                        ask_size: 3252
                        bid_price: 760
                        bid_size: 124
                        last_trade:
                          time_exchange: 2017-03-18T22:42:21.3763342Z
                          time_coinapi: 2017-03-18T22:42:21.3763342Z
                          uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                          price: 770.0
                          size: 0.05
                          taker_side: SELL
                      put:
                        symbol_id: DERIBIT_OPT_BTC-28SEP28_77000
                        time_exchange: 0001-01-01T00:00:00.0000000Z
                        time_coinapi: 0001-01-01T00:00:00.0000000Z
                        ask_price: 770.0
                        ask_size: 3252
                        bid_price: 760
                        bid_size: 124
                        last_trade:
                          time_exchange: 2017-03-18T22:42:21.3763342Z
                          time_coinapi: 2017-03-18T22:42:21.3763342Z
                          uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                          price: 770.0
                          size: 0.05
                          taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/Options.OptionExchangeGroup"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - asset_id_base: BTC
                    asset_id_quote: USD
                    underlying_price: 770.0
                    time_expiration: 2013-09-28T22:40:50.0000000Z
                    strikes:
                    - strike_price: 770.0
                      call:
                        symbol_id: DERIBIT_OPT_BTC-28SEP28_77000
                        time_exchange: 0001-01-01T00:00:00.0000000Z
                        time_coinapi: 0001-01-01T00:00:00.0000000Z
                        ask_price: 770.0
                        ask_size: 3252
                        bid_price: 760
                        bid_size: 124
                        last_trade:
                          time_exchange: 2017-03-18T22:42:21.3763342Z
                          time_coinapi: 2017-03-18T22:42:21.3763342Z
                          uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                          price: 770.0
                          size: 0.05
                          taker_side: SELL
                      put:
                        symbol_id: DERIBIT_OPT_BTC-28SEP28_77000
                        time_exchange: 0001-01-01T00:00:00.0000000Z
                        time_coinapi: 0001-01-01T00:00:00.0000000Z
                        ask_price: 770.0
                        ask_size: 3252
                        bid_price: 760
                        bid_size: 124
                        last_trade:
                          time_exchange: 2017-03-18T22:42:21.3763342Z
                          time_coinapi: 2017-03-18T22:42:21.3763342Z
                          uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                          price: 770.0
                          size: 0.05
                          taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/Options.OptionExchangeGroup"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - asset_id_base: BTC
                    asset_id_quote: USD
                    underlying_price: 770.0
                    time_expiration: 2013-09-28T22:40:50.0000000Z
                    strikes:
                    - strike_price: 770.0
                      call:
                        symbol_id: DERIBIT_OPT_BTC-28SEP28_77000
                        time_exchange: 0001-01-01T00:00:00.0000000Z
                        time_coinapi: 0001-01-01T00:00:00.0000000Z
                        ask_price: 770.0
                        ask_size: 3252
                        bid_price: 760
                        bid_size: 124
                        last_trade:
                          time_exchange: 2017-03-18T22:42:21.3763342Z
                          time_coinapi: 2017-03-18T22:42:21.3763342Z
                          uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                          price: 770.0
                          size: 0.05
                          taker_side: SELL
                      put:
                        symbol_id: DERIBIT_OPT_BTC-28SEP28_77000
                        time_exchange: 0001-01-01T00:00:00.0000000Z
                        time_coinapi: 0001-01-01T00:00:00.0000000Z
                        ask_price: 770.0
                        ask_size: 3252
                        bid_price: 760
                        bid_size: 124
                        last_trade:
                          time_exchange: 2017-03-18T22:42:21.3763342Z
                          time_coinapi: 2017-03-18T22:42:21.3763342Z
                          uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                          price: 770.0
                          size: 0.05
                          taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/Options.OptionExchangeGroup"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - asset_id_base: BTC
                    asset_id_quote: USD
                    underlying_price: 770.0
                    time_expiration: 2013-09-28T22:40:50.0000000Z
                    strikes:
                    - strike_price: 770.0
                      call:
                        symbol_id: DERIBIT_OPT_BTC-28SEP28_77000
                        time_exchange: 0001-01-01T00:00:00.0000000Z
                        time_coinapi: 0001-01-01T00:00:00.0000000Z
                        ask_price: 770.0
                        ask_size: 3252
                        bid_price: 760
                        bid_size: 124
                        last_trade:
                          time_exchange: 2017-03-18T22:42:21.3763342Z
                          time_coinapi: 2017-03-18T22:42:21.3763342Z
                          uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                          price: 770.0
                          size: 0.05
                          taker_side: SELL
                      put:
                        symbol_id: DERIBIT_OPT_BTC-28SEP28_77000
                        time_exchange: 0001-01-01T00:00:00.0000000Z
                        time_coinapi: 0001-01-01T00:00:00.0000000Z
                        ask_price: 770.0
                        ask_size: 3252
                        bid_price: 760
                        bid_size: 124
                        last_trade:
                          time_exchange: 2017-03-18T22:42:21.3763342Z
                          time_coinapi: 2017-03-18T22:42:21.3763342Z
                          uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                          price: 770.0
                          size: 0.05
                          taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/Options.OptionExchangeGroup"
                type: array
          description: successful operation
      summary: Current data by Exchange
      tags:
      - Options
  /v1/orderbooks/{symbol_id}/depth/current:
    get:
      description: Retrieves the current depth of the order book for the specified
        symbol.
      parameters:
      - description: The symbol ID (from the Metadata -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of levels to include in the response.
        explode: true
        in: query
        name: limit_levels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/v1.OrderBookDepth"
            application/json:
              schema:
                $ref: "#/components/schemas/v1.OrderBookDepth"
            text/json:
              schema:
                $ref: "#/components/schemas/v1.OrderBookDepth"
            application/x-msgpack:
              schema:
                $ref: "#/components/schemas/v1.OrderBookDepth"
          description: successful operation
      summary: Current depth of the order book
      tags:
      - Order Book
  /v1/orderbooks/{symbol_id}/history:
    get:
      description: "Get historical order book snapshots for a specific symbol within\
        \ time range, returned in time ascending order.\n            \n:::info\nThe\
        \ historical order book data via the REST API is currently limited by a number\
        \ of updates and to the maximum number of 20 levels.\n:::\n\n:::warning\n\
        The 'time_start' and 'time_end' parameters must be from the same day as this\
        \ endpoint provides intraday data only for specific day.\nPlease use the 'date'\
        \ parameter instead for querying data for a specific day without filter.\n\
        :::"
      parameters:
      - description: Symbol identifier for requested timeseries (from the Metadata
          -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Date in ISO 8601, returned data is for the whole given day (preferred\
          \ method, required if 'time_start' is not provided)"
        explode: true
        in: query
        name: date
        required: false
        schema:
          type: string
        style: form
      - description: "Starting time in ISO 8601 (deprecated, use 'date' instead)"
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          type: string
        style: form
      - description: "Timeseries ending time in ISO 8601 (deprecated, use 'date' instead)"
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, minimum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      - description: Maximum amount of levels from each side of the book to include
          in response (optional)
        explode: true
        in: query
        name: limit_levels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    asks:
                    - price: 456.35
                      size: 123
                    - price: 456.36
                      size: 23
                    bids:
                    - price: 456.1
                      size: 42
                    - price: 456.09
                      size: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBook"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    asks:
                    - price: 456.35
                      size: 123
                    - price: 456.36
                      size: 23
                    bids:
                    - price: 456.1
                      size: 42
                    - price: 456.09
                      size: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBook"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    asks:
                    - price: 456.35
                      size: 123
                    - price: 456.36
                      size: 23
                    bids:
                    - price: 456.1
                      size: 42
                    - price: 456.09
                      size: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBook"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    asks:
                    - price: 456.35
                      size: 123
                    - price: 456.36
                      size: 23
                    bids:
                    - price: 456.1
                      size: 42
                    - price: 456.09
                      size: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBook"
                type: array
          description: successful operation
      summary: Historical data
      tags:
      - Order Book
  /v1/orderbooks/{symbol_id}/current:
    get:
      description: Retrieves the current order book for the specified symbol.
      parameters:
      - description: The symbol ID (from the Metadata -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of levels to include in the response.
        explode: true
        in: query
        name: limit_levels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                    symbol_id: COINBASE_SPOT_BCH_USD
                    time_exchange: 2020-08-27T10:28:35.6111130Z
                    time_coinapi: 2020-08-27T10:28:35.6766461Z
                    asks:
                    - id: 3c5e789c-4c84-448a-9c5d-50532ea1ccbb
                      price: 272.89
                      size: 1
                    - id: c64a76ba-5107-4c1b-b788-271ee88df318
                      price: 272.9
                      size: 18
                    bids:
                    - id: 100d5004-f4e0-4e92-a571-392403d5b073
                      price: 272.83
                      size: 18
                    - id: 0889cf06-4a9d-4519-98e6-fac5dcb7afbf
                      price: 272.83
                      size: 0.64185083
              schema:
                $ref: "#/components/schemas/v1.OrderBookBase"
            application/json:
              examples:
                Example response:
                  value:
                    symbol_id: COINBASE_SPOT_BCH_USD
                    time_exchange: 2020-08-27T10:28:35.6111130Z
                    time_coinapi: 2020-08-27T10:28:35.6766461Z
                    asks:
                    - id: 3c5e789c-4c84-448a-9c5d-50532ea1ccbb
                      price: 272.89
                      size: 1
                    - id: c64a76ba-5107-4c1b-b788-271ee88df318
                      price: 272.9
                      size: 18
                    bids:
                    - id: 100d5004-f4e0-4e92-a571-392403d5b073
                      price: 272.83
                      size: 18
                    - id: 0889cf06-4a9d-4519-98e6-fac5dcb7afbf
                      price: 272.83
                      size: 0.64185083
              schema:
                $ref: "#/components/schemas/v1.OrderBookBase"
            text/json:
              examples:
                Example response:
                  value:
                    symbol_id: COINBASE_SPOT_BCH_USD
                    time_exchange: 2020-08-27T10:28:35.6111130Z
                    time_coinapi: 2020-08-27T10:28:35.6766461Z
                    asks:
                    - id: 3c5e789c-4c84-448a-9c5d-50532ea1ccbb
                      price: 272.89
                      size: 1
                    - id: c64a76ba-5107-4c1b-b788-271ee88df318
                      price: 272.9
                      size: 18
                    bids:
                    - id: 100d5004-f4e0-4e92-a571-392403d5b073
                      price: 272.83
                      size: 18
                    - id: 0889cf06-4a9d-4519-98e6-fac5dcb7afbf
                      price: 272.83
                      size: 0.64185083
              schema:
                $ref: "#/components/schemas/v1.OrderBookBase"
            application/x-msgpack:
              examples:
                Example response:
                  value:
                    symbol_id: COINBASE_SPOT_BCH_USD
                    time_exchange: 2020-08-27T10:28:35.6111130Z
                    time_coinapi: 2020-08-27T10:28:35.6766461Z
                    asks:
                    - id: 3c5e789c-4c84-448a-9c5d-50532ea1ccbb
                      price: 272.89
                      size: 1
                    - id: c64a76ba-5107-4c1b-b788-271ee88df318
                      price: 272.9
                      size: 18
                    bids:
                    - id: 100d5004-f4e0-4e92-a571-392403d5b073
                      price: 272.83
                      size: 18
                    - id: 0889cf06-4a9d-4519-98e6-fac5dcb7afbf
                      price: 272.83
                      size: 0.64185083
              schema:
                $ref: "#/components/schemas/v1.OrderBookBase"
          description: successful operation
      summary: Get current order book
      tags:
      - Order Book
  /v1/orderbooks/{symbol_id}/latest:
    get:
      description: "Get latest order book snapshots for a specific symbol, returned\
        \ in time descending order.\n            \n:::info\nThe historical order book\
        \ data via the REST API is currently limited by a number of updates and to\
        \ the maximum number of 20 levels.\n:::"
      parameters:
      - description: Symbol identifier of requested timeseries (from the Metadata
          -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      - description: Maximum amount of levels from each side of the book to include
          in response (optional)
        explode: true
        in: query
        name: limit_levels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    asks:
                    - price: 456.35
                      size: 123
                    - price: 456.36
                      size: 23
                    bids:
                    - price: 456.1
                      size: 42
                    - price: 456.09
                      size: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBook"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    asks:
                    - price: 456.35
                      size: 123
                    - price: 456.36
                      size: 23
                    bids:
                    - price: 456.1
                      size: 42
                    - price: 456.09
                      size: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBook"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    asks:
                    - price: 456.35
                      size: 123
                    - price: 456.36
                      size: 23
                    bids:
                    - price: 456.1
                      size: 42
                    - price: 456.09
                      size: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBook"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    asks:
                    - price: 456.35
                      size: 123
                    - price: 456.36
                      size: 23
                    bids:
                    - price: 456.1
                      size: 42
                    - price: 456.09
                      size: 5
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBook"
                type: array
          description: successful operation
      summary: Latest data
      tags:
      - Order Book
  /v1/orderbooks3/current:
    get:
      parameters:
      - description: Comma or semicolon delimited parts of symbol identifier used
          to filter the response.
        explode: true
        in: query
        name: filter_symbol_id
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of levels to include in the response.
        explode: true
        in: query
        name: limit_levels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBookBase"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBookBase"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBookBase"
                type: array
            application/x-msgpack:
              schema:
                items:
                  $ref: "#/components/schemas/v1.OrderBookBase"
                type: array
          description: successful operation
      summary: Current order books
      tags:
      - Order Book L3
  /v1/orderbooks3/{symbol_id}/current:
    get:
      description: Retrieves the current order book for the specified symbol.
      parameters:
      - description: The symbol ID (from the Metadata -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of levels to include in the response.
        explode: true
        in: query
        name: limit_levels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                    symbol_id: COINBASE_SPOT_BCH_USD
                    time_exchange: 2020-08-27T10:28:35.6111130Z
                    time_coinapi: 2020-08-27T10:28:35.6766461Z
                    asks:
                    - id: 3c5e789c-4c84-448a-9c5d-50532ea1ccbb
                      price: 272.89
                      size: 1
                    - id: c64a76ba-5107-4c1b-b788-271ee88df318
                      price: 272.9
                      size: 18
                    bids:
                    - id: 100d5004-f4e0-4e92-a571-392403d5b073
                      price: 272.83
                      size: 18
                    - id: 0889cf06-4a9d-4519-98e6-fac5dcb7afbf
                      price: 272.83
                      size: 0.64185083
              schema:
                $ref: "#/components/schemas/v1.OrderBookBase"
            application/json:
              examples:
                Example response:
                  value:
                    symbol_id: COINBASE_SPOT_BCH_USD
                    time_exchange: 2020-08-27T10:28:35.6111130Z
                    time_coinapi: 2020-08-27T10:28:35.6766461Z
                    asks:
                    - id: 3c5e789c-4c84-448a-9c5d-50532ea1ccbb
                      price: 272.89
                      size: 1
                    - id: c64a76ba-5107-4c1b-b788-271ee88df318
                      price: 272.9
                      size: 18
                    bids:
                    - id: 100d5004-f4e0-4e92-a571-392403d5b073
                      price: 272.83
                      size: 18
                    - id: 0889cf06-4a9d-4519-98e6-fac5dcb7afbf
                      price: 272.83
                      size: 0.64185083
              schema:
                $ref: "#/components/schemas/v1.OrderBookBase"
            text/json:
              examples:
                Example response:
                  value:
                    symbol_id: COINBASE_SPOT_BCH_USD
                    time_exchange: 2020-08-27T10:28:35.6111130Z
                    time_coinapi: 2020-08-27T10:28:35.6766461Z
                    asks:
                    - id: 3c5e789c-4c84-448a-9c5d-50532ea1ccbb
                      price: 272.89
                      size: 1
                    - id: c64a76ba-5107-4c1b-b788-271ee88df318
                      price: 272.9
                      size: 18
                    bids:
                    - id: 100d5004-f4e0-4e92-a571-392403d5b073
                      price: 272.83
                      size: 18
                    - id: 0889cf06-4a9d-4519-98e6-fac5dcb7afbf
                      price: 272.83
                      size: 0.64185083
              schema:
                $ref: "#/components/schemas/v1.OrderBookBase"
            application/x-msgpack:
              examples:
                Example response:
                  value:
                    symbol_id: COINBASE_SPOT_BCH_USD
                    time_exchange: 2020-08-27T10:28:35.6111130Z
                    time_coinapi: 2020-08-27T10:28:35.6766461Z
                    asks:
                    - id: 3c5e789c-4c84-448a-9c5d-50532ea1ccbb
                      price: 272.89
                      size: 1
                    - id: c64a76ba-5107-4c1b-b788-271ee88df318
                      price: 272.9
                      size: 18
                    bids:
                    - id: 100d5004-f4e0-4e92-a571-392403d5b073
                      price: 272.83
                      size: 18
                    - id: 0889cf06-4a9d-4519-98e6-fac5dcb7afbf
                      price: 272.83
                      size: 0.64185083
              schema:
                $ref: "#/components/schemas/v1.OrderBookBase"
          description: successful operation
      summary: Current order book by symbol_id
      tags:
      - Order Book L3
  /v1/quotes/{symbol_id}/history:
    get:
      description: |-
        Get historical quote updates within requested time range, returned in time ascending order.

        :::warning
        The 'time_start' and 'time_end' parameters must be from the same day as this endpoint provides intraday data only for specific day.
        Please use the 'date' parameter instead for querying data for a specific day without filter.
        :::
      parameters:
      - description: Symbol identifier for requested timeseries (from the Metadata
          -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Date in ISO 8601, returned data is for the whole given day (preferred\
          \ method, required if 'time_start' is not provided)"
        explode: true
        in: query
        name: date
        required: false
        schema:
          type: string
        style: form
      - description: Starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          type: string
        style: form
      - description: Timeseries ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, minimum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
          description: successful operation
      summary: Historical data
      tags:
      - Quotes
  /v1/quotes/current:
    get:
      description: "Get current quotes for all symbols or for a specific symbol.\n\
        \            \n:::info\nWhen requesting current data for a specific symbol,\
        \ output is not encapsulated into JSON array as only one item is returned.\n\
        :::"
      parameters:
      - description: Comma or semicolon delimited parts of symbol identifier used
          to filter response. (optional)
        explode: true
        in: query
        name: filter_symbol_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.QuoteTrade"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.QuoteTrade"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.QuoteTrade"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.QuoteTrade"
                type: array
          description: successful operation
      summary: Current data
      tags:
      - Quotes
  /v1/quotes/{symbol_id}/current:
    get:
      parameters:
      - description: The symbol identifier (from the Metadata -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
              schema:
                $ref: "#/components/schemas/v1.QuoteTrade"
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
              schema:
                $ref: "#/components/schemas/v1.QuoteTrade"
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
              schema:
                $ref: "#/components/schemas/v1.QuoteTrade"
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                    last_trade:
                      time_exchange: 2017-03-18T22:42:21.3763342Z
                      time_coinapi: 2017-03-18T22:42:21.3763342Z
                      uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                      price: 770.0
                      size: 0.05
                      taker_side: SELL
              schema:
                $ref: "#/components/schemas/v1.QuoteTrade"
          description: successful operation
      summary: Current quotes for a specific symbol
      tags:
      - Quotes
  /v1/quotes/latest:
    get:
      description: Get latest updates of the quotes up to 1 minute ago. Latest data
        is always returned in time descending order.
      parameters:
      - description: Comma or semicolon delimited parts of symbol identifier used
          to filter response. (optional)
        explode: true
        in: query
        name: filter_symbol_id
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
          description: successful operation
      summary: Latest data
      tags:
      - Quotes
  /v1/quotes/{symbol_id}/latest:
    get:
      parameters:
      - description: Symbol identifier of requested timeseries (from the Metadata
          -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    ask_price: 770.0
                    ask_size: 3252
                    bid_price: 760
                    bid_size: 124
              schema:
                items:
                  $ref: "#/components/schemas/v1.Quote"
                type: array
          description: successful operation
      summary: Latest quote updates for a specific symbol
      tags:
      - Quotes
  /v1/symbols/map/{exchange_id}:
    get:
      parameters:
      - description: The ID of the exchange (from the Metadata -> Exchanges)
        explode: false
        in: path
        name: exchange_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/v1.SymbolMapping"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1.SymbolMapping"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1.SymbolMapping"
                type: array
            application/x-msgpack:
              schema:
                items:
                  $ref: "#/components/schemas/v1.SymbolMapping"
                type: array
          description: successful operation
      summary: List active symbol mapping for the exchange
      tags:
      - Metadata
  /v1/symbols/{exchange_id}/active:
    get:
      description: "Retrieves all currently active (listed) symbols, with optional\
        \ filtering.\n            \n:::info\n\"price_precision\" and \"size_precision\"\
        \ are data precisions and are not always the same precisions used for trading\
        \ eg. for the \"BINANCE\" exchanges.\n:::\n            \n:::info\nYou should\
        \ not assume that the market data will be always within the resolution provided\
        \ by the \"price_precision\" and \"size_precision\". The fact that the precision\
        \ values can be derived from a posterior implies the fact that this data could\
        \ be delayed, also it can be changed by the data source without notice and\
        \ we will immediately deliver data with the new precision while could not\
        \ update the precision values in this endpoint immediately.\n:::\n       \
        \     \n### Symbol identifier\n            \nOur symbol identifier is created\
        \ using a pattern that depends on symbol type.\n            \nType | `symbol_id`\
        \ pattern\n--------- | ---------\nSPOT | `{exchange_id}_SPOT_{asset_id_base}_{asset_id_quote}`\n\
        FUTURES | `{exchange_id}_FTS_{asset_id_base}_{asset_id_quote}_{YYMMDD of future_delivery_time}`\n\
        OPTION | `{exchange_id}_OPT_{asset_id_base}_{asset_id_quote}_{YYMMDD of option_expiration_time}_{option_strike_price}_{option_type_is_call\
        \ as C/P}`\nPERPETUAL | `{exchange_id}_PERP_{asset_id_base}_{asset_id_quote}`\n\
        INDEX | `{exchange_id}_IDX_{index_id}`\nCREDIT | `{exchange_id}_CRE_{asset_id_base}`\n\
        CONTACT  | `{exchange_id}_COT_{contract_id}`\n            \n:::info\nIn the\
        \ unlikely event when the \"symbol_id\" for more than one market is the same.\
        \ We will append the additional term (prefixed with the \"_\") at the end\
        \ of the duplicated identifiers to differentiate them.\n:::info\n        \
        \    \n### Symbol types list (enumeration of `symbol_type` output variable)\n\
        \            \nType | Name | Description\n-------- | - | -----------\nSPOT\
        \ | FX Spot | Agreement to exchange one asset for another one *(e.g. Buy BTC\
        \ for USD)*\nFUTURES | Futures contract | FX Spot derivative contract where\
        \ traders agree to trade fx spot at predetermined future time\nOPTION | Option\
        \ contract | FX Spot derivative contract where traders agree to trade right\
        \ to require buy or sell of fx spot at agreed price on exercise date\nPERPETUAL\
        \ | Perpetual contract | FX Spot derivative contract where traders agree to\
        \ trade fx spot continously without predetermined future delivery time\nINDEX\
        \ | Index | Statistical composite that measures changes in the economy or\
        \ markets.\nCREDIT | Credit/Funding | Margin funding contract. Order book\
        \ displays lending offers and borrow bids. Price represents the daily rate.\n\
        CONTRACT | Contract | Represents other types of financial instruments *(e.g.\
        \ spreads, interest rate swap)*\n            \n### Additional output variables\
        \ for `symbol_type = INDEX`\n            \nVariable | Description\n---------\
        \ | -----------\nindex_id | Index identifier\nindex_display_name | Human readable\
        \ name of the index *(optional)*\nindex_display_description | Description\
        \ of the index *(optional)*\n            \n### Additional output variables\
        \ for `symbol_type = FUTURES`\n            \nVariable | Description\n---------\
        \ | -----------\nfuture_delivery_time | Predetermined time of futures contract\
        \ delivery date in ISO 8601\nfuture_contract_unit | Contact size *(eg. 10\
        \ BTC if `future_contract_unit` = `10` and `future_contract_unit_asset` =\
        \ `BTC`)*\nfuture_contract_unit_asset | Identifier of the asset used to denominate\
        \ the contract unit\n            \n### Additional output variables for `symbol_type\
        \ = PERPETUAL`\n            \nVariable | Description\n--------- | -----------\n\
        future_contract_unit | Contact size *(eg. 10 BTC if `future_contract_unit`\
        \ = `10` and `future_contract_unit_asset` = `BTC`)*\nfuture_contract_unit_asset\
        \ | Identifier of the asset used to denominate the contract unit\n       \
        \     \n### Additional output variables for `symbol_type = OPTION`\n     \
        \       \nVariable | Description\n--------- | -----------\noption_type_is_call\
        \ | Boolean value representing option type. `true` for Call options, `false`\
        \ for Put options\noption_strike_price | Price at which option contract can\
        \ be exercised\noption_contract_unit | Base asset amount of underlying spot\
        \ which single option represents\noption_exercise_style | Option exercise\
        \ style. Can be `EUROPEAN` or `AMERICAN`\noption_expiration_time | Option\
        \ contract expiration time in ISO 8601\n            \n### Additional output\
        \ variables for `symbol_type = CONTRACT`\n            \nVariable | Description\n\
        --------- | -----------\ncontract_delivery_time | Predetermined time of contract\
        \ delivery date in ISO 8601\ncontract_unit | Contact size *(eg. 10 BTC if\
        \ `contract_unit` = `10` and `contract_unit_asset` = `BTC`)*\ncontract_unit_asset\
        \ | Identifier of the asset used to denominate the contract unit\ncontract_id\
        \ | Identifier of contract by the exchange"
      parameters:
      - description: The ID of the exchange.
        explode: false
        in: path
        name: exchange_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Comma or semicolon delimited parts of symbol identifier used\
          \ to filter response. (optional, eg. `BITSTAMP`_ or `BINANCE_SPOT_`)"
        explode: true
        in: query
        name: filter_symbol_id
        required: false
        schema:
          type: string
        style: form
      - description: The filter for asset ID.
        explode: true
        in: query
        name: filter_asset_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: KRAKENFTS_PERP_BTC_USD
                    exchange_id: KRAKENFTS
                    symbol_type: PERPETUAL
                    asset_id_base: BTC
                    asset_id_quote: USD
                    asset_id_unit: USD
                    future_contract_unit: 1.0
                    future_contract_unit_asset: USD
                    data_start: 2019-10-30
                    data_end: 2021-03-03
                    data_quote_start: 2019-10-30T16:53:10.3262317Z
                    data_quote_end: 2021-03-03T13:51:45.6970000Z
                    data_orderbook_start: 2019-10-30T16:53:10.3262317Z
                    data_orderbook_end: 2020-08-05T14:37:32.0080000Z
                    data_trade_start: 2019-10-30T16:38:52.1620000Z
                    data_trade_end: 2021-03-03T13:46:25.7810000Z
                    volume_1hrs: 22897091
                    volume_1hrs_usd: 2.2897091E7
                    volume_1day: 459390289
                    volume_1day_usd: 4.59390289E8
                    volume_1mth: 12875674995
                    volume_1mth_usd: 1.2875674995E10
                    price: 51266
                    symbol_id_exchange: pi_xbtusd
                    asset_id_base_exchange: XBT
                    asset_id_quote_exchange: USD
                    price_precision: 0.1
                    size_precision: 1.0
                    symbol_id_int: 0
                  - symbol_id: POLONIEX_SPOT_LTC_USDC
                    exchange_id: POLONIEX
                    symbol_type: SPOT
                    asset_id_base: LTC
                    asset_id_quote: USDC
                    data_start: 2018-11-20
                    data_end: 2021-03-01
                    data_quote_start: 2018-11-20T15:24:58.4128803Z
                    data_quote_end: 2021-03-01T16:07:09.3475456Z
                    data_orderbook_start: 2018-11-20T15:24:58.4128803Z
                    data_orderbook_end: 2020-08-05T14:37:20.2695780Z
                    data_trade_start: 2018-11-20T15:25:38.0000000Z
                    data_trade_end: 2021-03-01T16:03:18.0000000Z
                    volume_1hrs: 51.68645899
                    volume_1hrs_usd: 9036.44
                    volume_1day: 465.568863
                    volume_1day_usd: 81396.28
                    volume_1mth: 22528.27638495
                    volume_1mth_usd: 3938661.0
                    symbol_id_exchange: USDC_LTC
                    asset_id_base_exchange: LTC
                    asset_id_quote_exchange: USDC
                    price_precision: 1.0E-8
                    size_precision: 1.0E-8
                    symbol_id_int: 0
              schema:
                items:
                  $ref: "#/components/schemas/v1.Symbol"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: KRAKENFTS_PERP_BTC_USD
                    exchange_id: KRAKENFTS
                    symbol_type: PERPETUAL
                    asset_id_base: BTC
                    asset_id_quote: USD
                    asset_id_unit: USD
                    future_contract_unit: 1.0
                    future_contract_unit_asset: USD
                    data_start: 2019-10-30
                    data_end: 2021-03-03
                    data_quote_start: 2019-10-30T16:53:10.3262317Z
                    data_quote_end: 2021-03-03T13:51:45.6970000Z
                    data_orderbook_start: 2019-10-30T16:53:10.3262317Z
                    data_orderbook_end: 2020-08-05T14:37:32.0080000Z
                    data_trade_start: 2019-10-30T16:38:52.1620000Z
                    data_trade_end: 2021-03-03T13:46:25.7810000Z
                    volume_1hrs: 22897091
                    volume_1hrs_usd: 2.2897091E7
                    volume_1day: 459390289
                    volume_1day_usd: 4.59390289E8
                    volume_1mth: 12875674995
                    volume_1mth_usd: 1.2875674995E10
                    price: 51266
                    symbol_id_exchange: pi_xbtusd
                    asset_id_base_exchange: XBT
                    asset_id_quote_exchange: USD
                    price_precision: 0.1
                    size_precision: 1.0
                    symbol_id_int: 0
                  - symbol_id: POLONIEX_SPOT_LTC_USDC
                    exchange_id: POLONIEX
                    symbol_type: SPOT
                    asset_id_base: LTC
                    asset_id_quote: USDC
                    data_start: 2018-11-20
                    data_end: 2021-03-01
                    data_quote_start: 2018-11-20T15:24:58.4128803Z
                    data_quote_end: 2021-03-01T16:07:09.3475456Z
                    data_orderbook_start: 2018-11-20T15:24:58.4128803Z
                    data_orderbook_end: 2020-08-05T14:37:20.2695780Z
                    data_trade_start: 2018-11-20T15:25:38.0000000Z
                    data_trade_end: 2021-03-01T16:03:18.0000000Z
                    volume_1hrs: 51.68645899
                    volume_1hrs_usd: 9036.44
                    volume_1day: 465.568863
                    volume_1day_usd: 81396.28
                    volume_1mth: 22528.27638495
                    volume_1mth_usd: 3938661.0
                    symbol_id_exchange: USDC_LTC
                    asset_id_base_exchange: LTC
                    asset_id_quote_exchange: USDC
                    price_precision: 1.0E-8
                    size_precision: 1.0E-8
                    symbol_id_int: 0
              schema:
                items:
                  $ref: "#/components/schemas/v1.Symbol"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: KRAKENFTS_PERP_BTC_USD
                    exchange_id: KRAKENFTS
                    symbol_type: PERPETUAL
                    asset_id_base: BTC
                    asset_id_quote: USD
                    asset_id_unit: USD
                    future_contract_unit: 1.0
                    future_contract_unit_asset: USD
                    data_start: 2019-10-30
                    data_end: 2021-03-03
                    data_quote_start: 2019-10-30T16:53:10.3262317Z
                    data_quote_end: 2021-03-03T13:51:45.6970000Z
                    data_orderbook_start: 2019-10-30T16:53:10.3262317Z
                    data_orderbook_end: 2020-08-05T14:37:32.0080000Z
                    data_trade_start: 2019-10-30T16:38:52.1620000Z
                    data_trade_end: 2021-03-03T13:46:25.7810000Z
                    volume_1hrs: 22897091
                    volume_1hrs_usd: 2.2897091E7
                    volume_1day: 459390289
                    volume_1day_usd: 4.59390289E8
                    volume_1mth: 12875674995
                    volume_1mth_usd: 1.2875674995E10
                    price: 51266
                    symbol_id_exchange: pi_xbtusd
                    asset_id_base_exchange: XBT
                    asset_id_quote_exchange: USD
                    price_precision: 0.1
                    size_precision: 1.0
                    symbol_id_int: 0
                  - symbol_id: POLONIEX_SPOT_LTC_USDC
                    exchange_id: POLONIEX
                    symbol_type: SPOT
                    asset_id_base: LTC
                    asset_id_quote: USDC
                    data_start: 2018-11-20
                    data_end: 2021-03-01
                    data_quote_start: 2018-11-20T15:24:58.4128803Z
                    data_quote_end: 2021-03-01T16:07:09.3475456Z
                    data_orderbook_start: 2018-11-20T15:24:58.4128803Z
                    data_orderbook_end: 2020-08-05T14:37:20.2695780Z
                    data_trade_start: 2018-11-20T15:25:38.0000000Z
                    data_trade_end: 2021-03-01T16:03:18.0000000Z
                    volume_1hrs: 51.68645899
                    volume_1hrs_usd: 9036.44
                    volume_1day: 465.568863
                    volume_1day_usd: 81396.28
                    volume_1mth: 22528.27638495
                    volume_1mth_usd: 3938661.0
                    symbol_id_exchange: USDC_LTC
                    asset_id_base_exchange: LTC
                    asset_id_quote_exchange: USDC
                    price_precision: 1.0E-8
                    size_precision: 1.0E-8
                    symbol_id_int: 0
              schema:
                items:
                  $ref: "#/components/schemas/v1.Symbol"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: KRAKENFTS_PERP_BTC_USD
                    exchange_id: KRAKENFTS
                    symbol_type: PERPETUAL
                    asset_id_base: BTC
                    asset_id_quote: USD
                    asset_id_unit: USD
                    future_contract_unit: 1.0
                    future_contract_unit_asset: USD
                    data_start: 2019-10-30
                    data_end: 2021-03-03
                    data_quote_start: 2019-10-30T16:53:10.3262317Z
                    data_quote_end: 2021-03-03T13:51:45.6970000Z
                    data_orderbook_start: 2019-10-30T16:53:10.3262317Z
                    data_orderbook_end: 2020-08-05T14:37:32.0080000Z
                    data_trade_start: 2019-10-30T16:38:52.1620000Z
                    data_trade_end: 2021-03-03T13:46:25.7810000Z
                    volume_1hrs: 22897091
                    volume_1hrs_usd: 2.2897091E7
                    volume_1day: 459390289
                    volume_1day_usd: 4.59390289E8
                    volume_1mth: 12875674995
                    volume_1mth_usd: 1.2875674995E10
                    price: 51266
                    symbol_id_exchange: pi_xbtusd
                    asset_id_base_exchange: XBT
                    asset_id_quote_exchange: USD
                    price_precision: 0.1
                    size_precision: 1.0
                    symbol_id_int: 0
                  - symbol_id: POLONIEX_SPOT_LTC_USDC
                    exchange_id: POLONIEX
                    symbol_type: SPOT
                    asset_id_base: LTC
                    asset_id_quote: USDC
                    data_start: 2018-11-20
                    data_end: 2021-03-01
                    data_quote_start: 2018-11-20T15:24:58.4128803Z
                    data_quote_end: 2021-03-01T16:07:09.3475456Z
                    data_orderbook_start: 2018-11-20T15:24:58.4128803Z
                    data_orderbook_end: 2020-08-05T14:37:20.2695780Z
                    data_trade_start: 2018-11-20T15:25:38.0000000Z
                    data_trade_end: 2021-03-01T16:03:18.0000000Z
                    volume_1hrs: 51.68645899
                    volume_1hrs_usd: 9036.44
                    volume_1day: 465.568863
                    volume_1day_usd: 81396.28
                    volume_1mth: 22528.27638495
                    volume_1mth_usd: 3938661.0
                    symbol_id_exchange: USDC_LTC
                    asset_id_base_exchange: LTC
                    asset_id_quote_exchange: USDC
                    price_precision: 1.0E-8
                    size_precision: 1.0E-8
                    symbol_id_int: 0
              schema:
                items:
                  $ref: "#/components/schemas/v1.Symbol"
                type: array
          description: successful operation
      summary: List all active symbols
      tags:
      - Metadata
  /v1/symbols/{exchange_id}/history:
    get:
      description: |-
        This endpoint provides access to symbols that are no longer actively traded or listed on a given exchange.
        The data is provided with pagination support.
      parameters:
      - description: The ID of the exchange.
        explode: false
        in: path
        name: exchange_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page number for pagination (starts from 1).
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Number of records to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: KRAKENFTS_PERP_BTC_USD
                    exchange_id: KRAKENFTS
                    symbol_type: PERPETUAL
                    asset_id_base: BTC
                    asset_id_quote: USD
                    asset_id_unit: USD
                    future_contract_unit: 1.0
                    future_contract_unit_asset: USD
                    data_start: 2019-10-30
                    data_end: 2021-03-03
                    data_quote_start: 2019-10-30T16:53:10.3262317Z
                    data_quote_end: 2021-03-03T13:51:45.6970000Z
                    data_orderbook_start: 2019-10-30T16:53:10.3262317Z
                    data_orderbook_end: 2020-08-05T14:37:32.0080000Z
                    data_trade_start: 2019-10-30T16:38:52.1620000Z
                    data_trade_end: 2021-03-03T13:46:25.7810000Z
                    volume_1hrs: 22897091
                    volume_1hrs_usd: 2.2897091E7
                    volume_1day: 459390289
                    volume_1day_usd: 4.59390289E8
                    volume_1mth: 12875674995
                    volume_1mth_usd: 1.2875674995E10
                    price: 51266
                    symbol_id_exchange: pi_xbtusd
                    asset_id_base_exchange: XBT
                    asset_id_quote_exchange: USD
                    price_precision: 0.1
                    size_precision: 1.0
                    symbol_id_int: 0
                  - symbol_id: POLONIEX_SPOT_LTC_USDC
                    exchange_id: POLONIEX
                    symbol_type: SPOT
                    asset_id_base: LTC
                    asset_id_quote: USDC
                    data_start: 2018-11-20
                    data_end: 2021-03-01
                    data_quote_start: 2018-11-20T15:24:58.4128803Z
                    data_quote_end: 2021-03-01T16:07:09.3475456Z
                    data_orderbook_start: 2018-11-20T15:24:58.4128803Z
                    data_orderbook_end: 2020-08-05T14:37:20.2695780Z
                    data_trade_start: 2018-11-20T15:25:38.0000000Z
                    data_trade_end: 2021-03-01T16:03:18.0000000Z
                    volume_1hrs: 51.68645899
                    volume_1hrs_usd: 9036.44
                    volume_1day: 465.568863
                    volume_1day_usd: 81396.28
                    volume_1mth: 22528.27638495
                    volume_1mth_usd: 3938661.0
                    symbol_id_exchange: USDC_LTC
                    asset_id_base_exchange: LTC
                    asset_id_quote_exchange: USDC
                    price_precision: 1.0E-8
                    size_precision: 1.0E-8
                    symbol_id_int: 0
              schema:
                items:
                  $ref: "#/components/schemas/v1.Symbol"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: KRAKENFTS_PERP_BTC_USD
                    exchange_id: KRAKENFTS
                    symbol_type: PERPETUAL
                    asset_id_base: BTC
                    asset_id_quote: USD
                    asset_id_unit: USD
                    future_contract_unit: 1.0
                    future_contract_unit_asset: USD
                    data_start: 2019-10-30
                    data_end: 2021-03-03
                    data_quote_start: 2019-10-30T16:53:10.3262317Z
                    data_quote_end: 2021-03-03T13:51:45.6970000Z
                    data_orderbook_start: 2019-10-30T16:53:10.3262317Z
                    data_orderbook_end: 2020-08-05T14:37:32.0080000Z
                    data_trade_start: 2019-10-30T16:38:52.1620000Z
                    data_trade_end: 2021-03-03T13:46:25.7810000Z
                    volume_1hrs: 22897091
                    volume_1hrs_usd: 2.2897091E7
                    volume_1day: 459390289
                    volume_1day_usd: 4.59390289E8
                    volume_1mth: 12875674995
                    volume_1mth_usd: 1.2875674995E10
                    price: 51266
                    symbol_id_exchange: pi_xbtusd
                    asset_id_base_exchange: XBT
                    asset_id_quote_exchange: USD
                    price_precision: 0.1
                    size_precision: 1.0
                    symbol_id_int: 0
                  - symbol_id: POLONIEX_SPOT_LTC_USDC
                    exchange_id: POLONIEX
                    symbol_type: SPOT
                    asset_id_base: LTC
                    asset_id_quote: USDC
                    data_start: 2018-11-20
                    data_end: 2021-03-01
                    data_quote_start: 2018-11-20T15:24:58.4128803Z
                    data_quote_end: 2021-03-01T16:07:09.3475456Z
                    data_orderbook_start: 2018-11-20T15:24:58.4128803Z
                    data_orderbook_end: 2020-08-05T14:37:20.2695780Z
                    data_trade_start: 2018-11-20T15:25:38.0000000Z
                    data_trade_end: 2021-03-01T16:03:18.0000000Z
                    volume_1hrs: 51.68645899
                    volume_1hrs_usd: 9036.44
                    volume_1day: 465.568863
                    volume_1day_usd: 81396.28
                    volume_1mth: 22528.27638495
                    volume_1mth_usd: 3938661.0
                    symbol_id_exchange: USDC_LTC
                    asset_id_base_exchange: LTC
                    asset_id_quote_exchange: USDC
                    price_precision: 1.0E-8
                    size_precision: 1.0E-8
                    symbol_id_int: 0
              schema:
                items:
                  $ref: "#/components/schemas/v1.Symbol"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: KRAKENFTS_PERP_BTC_USD
                    exchange_id: KRAKENFTS
                    symbol_type: PERPETUAL
                    asset_id_base: BTC
                    asset_id_quote: USD
                    asset_id_unit: USD
                    future_contract_unit: 1.0
                    future_contract_unit_asset: USD
                    data_start: 2019-10-30
                    data_end: 2021-03-03
                    data_quote_start: 2019-10-30T16:53:10.3262317Z
                    data_quote_end: 2021-03-03T13:51:45.6970000Z
                    data_orderbook_start: 2019-10-30T16:53:10.3262317Z
                    data_orderbook_end: 2020-08-05T14:37:32.0080000Z
                    data_trade_start: 2019-10-30T16:38:52.1620000Z
                    data_trade_end: 2021-03-03T13:46:25.7810000Z
                    volume_1hrs: 22897091
                    volume_1hrs_usd: 2.2897091E7
                    volume_1day: 459390289
                    volume_1day_usd: 4.59390289E8
                    volume_1mth: 12875674995
                    volume_1mth_usd: 1.2875674995E10
                    price: 51266
                    symbol_id_exchange: pi_xbtusd
                    asset_id_base_exchange: XBT
                    asset_id_quote_exchange: USD
                    price_precision: 0.1
                    size_precision: 1.0
                    symbol_id_int: 0
                  - symbol_id: POLONIEX_SPOT_LTC_USDC
                    exchange_id: POLONIEX
                    symbol_type: SPOT
                    asset_id_base: LTC
                    asset_id_quote: USDC
                    data_start: 2018-11-20
                    data_end: 2021-03-01
                    data_quote_start: 2018-11-20T15:24:58.4128803Z
                    data_quote_end: 2021-03-01T16:07:09.3475456Z
                    data_orderbook_start: 2018-11-20T15:24:58.4128803Z
                    data_orderbook_end: 2020-08-05T14:37:20.2695780Z
                    data_trade_start: 2018-11-20T15:25:38.0000000Z
                    data_trade_end: 2021-03-01T16:03:18.0000000Z
                    volume_1hrs: 51.68645899
                    volume_1hrs_usd: 9036.44
                    volume_1day: 465.568863
                    volume_1day_usd: 81396.28
                    volume_1mth: 22528.27638495
                    volume_1mth_usd: 3938661.0
                    symbol_id_exchange: USDC_LTC
                    asset_id_base_exchange: LTC
                    asset_id_quote_exchange: USDC
                    price_precision: 1.0E-8
                    size_precision: 1.0E-8
                    symbol_id_int: 0
              schema:
                items:
                  $ref: "#/components/schemas/v1.Symbol"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: KRAKENFTS_PERP_BTC_USD
                    exchange_id: KRAKENFTS
                    symbol_type: PERPETUAL
                    asset_id_base: BTC
                    asset_id_quote: USD
                    asset_id_unit: USD
                    future_contract_unit: 1.0
                    future_contract_unit_asset: USD
                    data_start: 2019-10-30
                    data_end: 2021-03-03
                    data_quote_start: 2019-10-30T16:53:10.3262317Z
                    data_quote_end: 2021-03-03T13:51:45.6970000Z
                    data_orderbook_start: 2019-10-30T16:53:10.3262317Z
                    data_orderbook_end: 2020-08-05T14:37:32.0080000Z
                    data_trade_start: 2019-10-30T16:38:52.1620000Z
                    data_trade_end: 2021-03-03T13:46:25.7810000Z
                    volume_1hrs: 22897091
                    volume_1hrs_usd: 2.2897091E7
                    volume_1day: 459390289
                    volume_1day_usd: 4.59390289E8
                    volume_1mth: 12875674995
                    volume_1mth_usd: 1.2875674995E10
                    price: 51266
                    symbol_id_exchange: pi_xbtusd
                    asset_id_base_exchange: XBT
                    asset_id_quote_exchange: USD
                    price_precision: 0.1
                    size_precision: 1.0
                    symbol_id_int: 0
                  - symbol_id: POLONIEX_SPOT_LTC_USDC
                    exchange_id: POLONIEX
                    symbol_type: SPOT
                    asset_id_base: LTC
                    asset_id_quote: USDC
                    data_start: 2018-11-20
                    data_end: 2021-03-01
                    data_quote_start: 2018-11-20T15:24:58.4128803Z
                    data_quote_end: 2021-03-01T16:07:09.3475456Z
                    data_orderbook_start: 2018-11-20T15:24:58.4128803Z
                    data_orderbook_end: 2020-08-05T14:37:20.2695780Z
                    data_trade_start: 2018-11-20T15:25:38.0000000Z
                    data_trade_end: 2021-03-01T16:03:18.0000000Z
                    volume_1hrs: 51.68645899
                    volume_1hrs_usd: 9036.44
                    volume_1day: 465.568863
                    volume_1day_usd: 81396.28
                    volume_1mth: 22528.27638495
                    volume_1mth_usd: 3938661.0
                    symbol_id_exchange: USDC_LTC
                    asset_id_base_exchange: LTC
                    asset_id_quote_exchange: USDC
                    price_precision: 1.0E-8
                    size_precision: 1.0E-8
                    symbol_id_int: 0
              schema:
                items:
                  $ref: "#/components/schemas/v1.Symbol"
                type: array
          description: successful operation
      summary: List all historical symbols for an exchange.
      tags:
      - Metadata
  /v1/ohlcv/periods:
    get:
      description: "Get full list of supported time periods available for requesting\
        \ OHLCV timeseries data.\n            \n### Available periods\n          \
        \  \nTime unit | Period identifiers\n--------- | -----------\nSecond | 1SEC,\
        \ 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SEC\nMinute | 1MIN,\
        \ 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MIN\nHour | 1HRS, 2HRS,\
        \ 3HRS, 4HRS, 6HRS, 8HRS, 12HRS\nDay | 1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAY\n\
        Month | 1MTH, 2MTH, 3MTH, 4MTH, 6MTH\nYear | 1YRS, 2YRS, 3YRS, 4YRS, 5YRS\n\
        \            \n:::tip\nYou can assume that we will not remove any periods\
        \ from this response, however, we may add new ones.\n:::"
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - period_id: 1SEC
                    length_seconds: 1
                    length_months: 0
                    unit_count: 1
                    unit_name: second
                    display_name: 1 Second
                  - period_id: 10DAY
                    length_seconds: 864000
                    length_months: 0
                    unit_count: 10
                    unit_name: day
                    display_name: 10 Days
                  - period_id: 2YRS
                    length_seconds: 0
                    length_months: 24
                    unit_count: 2
                    unit_name: year
                    display_name: 2 Years
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesPeriod"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - period_id: 1SEC
                    length_seconds: 1
                    length_months: 0
                    unit_count: 1
                    unit_name: second
                    display_name: 1 Second
                  - period_id: 10DAY
                    length_seconds: 864000
                    length_months: 0
                    unit_count: 10
                    unit_name: day
                    display_name: 10 Days
                  - period_id: 2YRS
                    length_seconds: 0
                    length_months: 24
                    unit_count: 2
                    unit_name: year
                    display_name: 2 Years
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesPeriod"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - period_id: 1SEC
                    length_seconds: 1
                    length_months: 0
                    unit_count: 1
                    unit_name: second
                    display_name: 1 Second
                  - period_id: 10DAY
                    length_seconds: 864000
                    length_months: 0
                    unit_count: 10
                    unit_name: day
                    display_name: 10 Days
                  - period_id: 2YRS
                    length_seconds: 0
                    length_months: 24
                    unit_count: 2
                    unit_name: year
                    display_name: 2 Years
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesPeriod"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - period_id: 1SEC
                    length_seconds: 1
                    length_months: 0
                    unit_count: 1
                    unit_name: second
                    display_name: 1 Second
                  - period_id: 10DAY
                    length_seconds: 864000
                    length_months: 0
                    unit_count: 10
                    unit_name: day
                    display_name: 10 Days
                  - period_id: 2YRS
                    length_seconds: 0
                    length_months: 24
                    unit_count: 2
                    unit_name: year
                    display_name: 2 Years
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesPeriod"
                type: array
          description: successful operation
      summary: List all periods
      tags:
      - Ohlcv
  /v1/ohlcv/{symbol_id}/history:
    get:
      description: "Get OHLCV timeseries data returned in time ascending order. Data\
        \ can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`,\
        \ if you need to query timeseries by asset pairs eg. `BTC/USD`, then please\
        \ reffer to the Exchange Rates Timeseries data\n            \n:::info\nThe\
        \ OHLCV Historical endpoint data can be delayed a few seconds. Use OHLCV real-time\
        \ data stream to get data without delay.\n:::"
      parameters:
      - description: Symbol identifier of requested timeseries (from the Metadata
          -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of requested timeseries period (e.g. `5SEC` or `2MTH`)
        explode: true
        in: query
        name: period_id
        required: true
        schema:
          type: string
        style: form
      - description: Timeseries starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          type: string
        style: form
      - description: Timeseries ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (mininum is 1, maximum is 100000,\
          \ default value is 100, if the parameter is used then every 100 output items\
          \ are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - time_period_start: 2017-01-01T00:00:00.0000000Z
                    time_period_end: 2017-01-02T00:00:00.0000000Z
                    time_open: 2017-01-01T00:01:08.0000000Z
                    time_close: 2017-01-01T23:59:46.0000000Z
                    price_open: 966.34
                    price_high: 1005.0
                    price_low: 960.53
                    price_close: 997.75
                    volume_traded: 6850.59330859
                    trades_count: 7815
                  - time_period_start: 2017-01-02T00:00:00.0000000Z
                    time_period_end: 2017-01-03T00:00:00.0000000Z
                    time_open: 2017-01-02T00:00:05.0000000Z
                    time_close: 2017-01-02T23:59:37.0000000Z
                    price_open: 997.75
                    price_high: 1032.0
                    price_low: 990.01
                    price_close: 1012.54
                    volume_traded: 8167.38103018
                    trades_count: 7871
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesItem"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2017-01-01T00:00:00.0000000Z
                    time_period_end: 2017-01-02T00:00:00.0000000Z
                    time_open: 2017-01-01T00:01:08.0000000Z
                    time_close: 2017-01-01T23:59:46.0000000Z
                    price_open: 966.34
                    price_high: 1005.0
                    price_low: 960.53
                    price_close: 997.75
                    volume_traded: 6850.59330859
                    trades_count: 7815
                  - time_period_start: 2017-01-02T00:00:00.0000000Z
                    time_period_end: 2017-01-03T00:00:00.0000000Z
                    time_open: 2017-01-02T00:00:05.0000000Z
                    time_close: 2017-01-02T23:59:37.0000000Z
                    price_open: 997.75
                    price_high: 1032.0
                    price_low: 990.01
                    price_close: 1012.54
                    volume_traded: 8167.38103018
                    trades_count: 7871
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesItem"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2017-01-01T00:00:00.0000000Z
                    time_period_end: 2017-01-02T00:00:00.0000000Z
                    time_open: 2017-01-01T00:01:08.0000000Z
                    time_close: 2017-01-01T23:59:46.0000000Z
                    price_open: 966.34
                    price_high: 1005.0
                    price_low: 960.53
                    price_close: 997.75
                    volume_traded: 6850.59330859
                    trades_count: 7815
                  - time_period_start: 2017-01-02T00:00:00.0000000Z
                    time_period_end: 2017-01-03T00:00:00.0000000Z
                    time_open: 2017-01-02T00:00:05.0000000Z
                    time_close: 2017-01-02T23:59:37.0000000Z
                    price_open: 997.75
                    price_high: 1032.0
                    price_low: 990.01
                    price_close: 1012.54
                    volume_traded: 8167.38103018
                    trades_count: 7871
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesItem"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - time_period_start: 2017-01-01T00:00:00.0000000Z
                    time_period_end: 2017-01-02T00:00:00.0000000Z
                    time_open: 2017-01-01T00:01:08.0000000Z
                    time_close: 2017-01-01T23:59:46.0000000Z
                    price_open: 966.34
                    price_high: 1005.0
                    price_low: 960.53
                    price_close: 997.75
                    volume_traded: 6850.59330859
                    trades_count: 7815
                  - time_period_start: 2017-01-02T00:00:00.0000000Z
                    time_period_end: 2017-01-03T00:00:00.0000000Z
                    time_open: 2017-01-02T00:00:05.0000000Z
                    time_close: 2017-01-02T23:59:37.0000000Z
                    price_open: 997.75
                    price_high: 1032.0
                    price_low: 990.01
                    price_close: 1012.54
                    volume_traded: 8167.38103018
                    trades_count: 7871
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesItem"
                type: array
          description: successful operation
      summary: Historical data
      tags:
      - Ohlcv
  /v1/ohlcv/exchanges/{exchange_id}/history:
    get:
      description: "Get OHLCV timeseries data returned in time ascending order. Data\
        \ can be requested by the period and for the specific exchange eg `BITSTAMP`\n\
        \            \n:::info\nThe OHLCV Historical endpoint data can be delayed\
        \ a few seconds. Use OHLCV real-time data stream to get data without delay.\n\
        The difference between `time_end` and `time_start` cannot be higher than 1\
        \ day.\nThe `period_id` cannot be higher than `1DAY`.\n:::"
      parameters:
      - description: Exchange identifier of requested timeseries (from the Metadata
          -> Exchanges)
        explode: false
        in: path
        name: exchange_id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of requested timeseries period (e.g. `5SEC` or `1DAY`)
        explode: true
        in: query
        name: period_id
        required: true
        schema:
          type: string
        style: form
      - description: Timeseries starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: true
        schema:
          type: string
        style: form
      - description: Timeseries ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Models.ExchangeTimeseriesItem"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Models.ExchangeTimeseriesItem"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Models.ExchangeTimeseriesItem"
                type: array
            application/x-msgpack:
              schema:
                items:
                  $ref: "#/components/schemas/Models.ExchangeTimeseriesItem"
                type: array
          description: successful operation
      summary: Historical data by exchange
      tags:
      - Ohlcv
  /v1/ohlcv/{symbol_id}/latest:
    get:
      description: "Get OHLCV latest timeseries data returned in time descending order.\
        \ Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`,\
        \ if you need to query timeseries by asset pairs eg. `BTC/USD`, then please\
        \ reffer to the Exchange Rates Timeseries data\n            \n:::info\nOHLCV\
        \ Latest endpoint is just the shortcut to the OHLCV Historical endpoint with\
        \ substituted `time_start` and `time_end` parameters. \nThe OHLCV Historical\
        \ endpoint data can be delayed a few seconds. Use OHLCV real-time data stream\
        \ to get data without delay.\n:::"
      parameters:
      - description: Symbol identifier of requested timeseries (from the Metadata
          -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of requested timeseries period (e.g. `5SEC` or `2MTH`)
        explode: true
        in: query
        name: period_id
        required: true
        schema:
          type: string
        style: form
      - description: "Amount of items to return (mininum is 1, maximum is 100000,\
          \ default value is 100, if the parameter is used then every 100 output items\
          \ are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - time_period_start: 2017-08-09T14:31:00.0000000Z
                    time_period_end: 2017-08-09T14:32:00.0000000Z
                    time_open: 2017-08-09T14:31:01.0000000Z
                    time_close: 2017-08-09T14:31:46.0000000Z
                    price_open: 3255.59
                    price_high: 3255.59
                    price_low: 3244.74
                    price_close: 3244.74
                    volume_traded: 16.90327455
                    trades_count: 31
                  - time_period_start: 2017-08-09T14:30:00.0000000Z
                    time_period_end: 2017-08-09T14:31:00.0000000Z
                    time_open: 2017-08-09T14:30:05.0000000Z
                    time_close: 2017-08-09T14:30:35.0000000Z
                    price_open: 3256.0
                    price_high: 3256.01
                    price_low: 3247.0
                    price_close: 3255.6
                    volume_traded: 58.13139792
                    trades_count: 33
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesItem"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2017-08-09T14:31:00.0000000Z
                    time_period_end: 2017-08-09T14:32:00.0000000Z
                    time_open: 2017-08-09T14:31:01.0000000Z
                    time_close: 2017-08-09T14:31:46.0000000Z
                    price_open: 3255.59
                    price_high: 3255.59
                    price_low: 3244.74
                    price_close: 3244.74
                    volume_traded: 16.90327455
                    trades_count: 31
                  - time_period_start: 2017-08-09T14:30:00.0000000Z
                    time_period_end: 2017-08-09T14:31:00.0000000Z
                    time_open: 2017-08-09T14:30:05.0000000Z
                    time_close: 2017-08-09T14:30:35.0000000Z
                    price_open: 3256.0
                    price_high: 3256.01
                    price_low: 3247.0
                    price_close: 3255.6
                    volume_traded: 58.13139792
                    trades_count: 33
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesItem"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - time_period_start: 2017-08-09T14:31:00.0000000Z
                    time_period_end: 2017-08-09T14:32:00.0000000Z
                    time_open: 2017-08-09T14:31:01.0000000Z
                    time_close: 2017-08-09T14:31:46.0000000Z
                    price_open: 3255.59
                    price_high: 3255.59
                    price_low: 3244.74
                    price_close: 3244.74
                    volume_traded: 16.90327455
                    trades_count: 31
                  - time_period_start: 2017-08-09T14:30:00.0000000Z
                    time_period_end: 2017-08-09T14:31:00.0000000Z
                    time_open: 2017-08-09T14:30:05.0000000Z
                    time_close: 2017-08-09T14:30:35.0000000Z
                    price_open: 3256.0
                    price_high: 3256.01
                    price_low: 3247.0
                    price_close: 3255.6
                    volume_traded: 58.13139792
                    trades_count: 33
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesItem"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - time_period_start: 2017-08-09T14:31:00.0000000Z
                    time_period_end: 2017-08-09T14:32:00.0000000Z
                    time_open: 2017-08-09T14:31:01.0000000Z
                    time_close: 2017-08-09T14:31:46.0000000Z
                    price_open: 3255.59
                    price_high: 3255.59
                    price_low: 3244.74
                    price_close: 3244.74
                    volume_traded: 16.90327455
                    trades_count: 31
                  - time_period_start: 2017-08-09T14:30:00.0000000Z
                    time_period_end: 2017-08-09T14:31:00.0000000Z
                    time_open: 2017-08-09T14:30:05.0000000Z
                    time_close: 2017-08-09T14:30:35.0000000Z
                    price_open: 3256.0
                    price_high: 3256.01
                    price_low: 3247.0
                    price_close: 3255.6
                    volume_traded: 58.13139792
                    trades_count: 33
              schema:
                items:
                  $ref: "#/components/schemas/v1.TimeseriesItem"
                type: array
          description: successful operation
      summary: Latest data
      tags:
      - Ohlcv
  /v1/trades/{symbol_id}/history:
    get:
      description: |-
        Get history transactions from specific symbol, returned in time ascending order.

        :::warning
        The 'time_start' and 'time_end' parameters must be from the same day as this endpoint provides intraday data only for specific day.
        Please use the 'date' parameter instead for querying data for a specific day without filter.
        :::
      parameters:
      - description: Symbol identifier for requested timeseries (from the Metadata
          -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Date in ISO 8601, returned data is for the whole given day (required\
          \ if 'time_start' is not provided)"
        explode: true
        in: query
        name: date
        required: false
        schema:
          type: string
        style: form
      - description: Starting time in ISO 8601
        explode: true
        in: query
        name: time_start
        required: false
        schema:
          type: string
        style: form
      - description: Timeseries ending time in ISO 8601
        explode: true
        in: query
        name: time_end
        required: false
        schema:
          type: string
        style: form
      - description: "Amount of items to return (optional, minimum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      - description: Information that additional exchange trade identifier should
          be included in the `id_trade` parameter of the trade if exchange providing
          identifiers.
        explode: true
        in: query
        name: include_id
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
          description: successful operation
      summary: Historical data
      tags:
      - Trades
  /v1/trades/{symbol_id}/latest:
    get:
      description: Get latest trades executed up to 1 minute ago. Latest data is always
        returned in time descending order.
      parameters:
      - description: Symbol identifier for requested timeseries (from the Metadata
          -> Symbols)
        explode: false
        in: path
        name: symbol_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      - description: Information that additional exchange trade identifier should
          be included in the `id_trade` parameter of the trade if exchange providing
          identifiers.
        explode: true
        in: query
        name: include_id
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
          description: successful operation
      summary: Latest data by symbol_id
      tags:
      - Trades
  /v1/trades/latest:
    get:
      description: Get latest trades executed up to 1 minute ago. Latest data is always
        returned in time descending order.
      parameters:
      - description: Comma or semicolon delimited parts of symbol identifier used
          to filter response. (optional)
        explode: true
        in: query
        name: filter_symbol_id
        required: false
        schema:
          type: string
        style: form
      - description: Information that additional exchange trade identifier should
          be included in the `id_trade` parameter of the trade if exchange providing
          identifiers.
        explode: true
        in: query
        name: include_id
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Amount of items to return (optional, mininum is 1, maximum is\
          \ 100000, default value is 100, if the parameter is used then every 100\
          \ output items are counted as one request)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            application/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            text/json:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
            application/x-msgpack:
              examples:
                Example response:
                  value:
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T22:40:50.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 770c7a3b-7258-4441-8182-83740f3e2457
                    price: 770.0
                    size: 0.05
                    taker_side: BUY
                  - symbol_id: BITSTAMP_SPOT_BTC_USD
                    time_exchange: 2013-09-28T23:12:59.0000000Z
                    time_coinapi: 2017-03-18T22:42:21.3763342Z
                    uuid: 1ea8adc5-6459-47ca-adbf-0c3f8c729bb2
                    price: 770.0
                    size: 0.05
                    taker_side: SELL
              schema:
                items:
                  $ref: "#/components/schemas/v1.Trade"
                type: array
          description: successful operation
      summary: Latest data
      tags:
      - Trades
components:
  schemas:
    Models.BaseCsvModel:
      additionalProperties: false
      type: object
    Models.ExchangeTimeseriesItem:
      additionalProperties: false
      description: Represents a timeseries item with price and volume information.
      example:
        time_period_end: 2000-01-23T04:56:07.000+00:00
        symbol_id_coinapi: symbol_id_coinapi
        time_open: 2000-01-23T04:56:07.000+00:00
        price_close: 5.962133916683182
        trades_count: 2
        time_close: 2000-01-23T04:56:07.000+00:00
        symbol_id_exchange: symbol_id_exchange
        price_open: 0.8008281904610115
        time_period_start: 2000-01-23T04:56:07.000+00:00
        price_high: 6.027456183070403
        volume_traded: 5.637376656633329
        price_low: 1.4658129805029452
      properties:
        time_period_start:
          description: The start time of the time period.
          format: date-time
          type: string
        time_period_end:
          description: The end time of the time period.
          format: date-time
          type: string
        time_open:
          description: The time when the price opened.
          format: date-time
          nullable: true
          type: string
        time_close:
          description: The time when the price closed.
          format: date-time
          nullable: true
          type: string
        price_open:
          description: The opening price.
          format: double
          nullable: true
          type: number
        price_high:
          description: The highest price during the time period.
          format: double
          nullable: true
          type: number
        price_low:
          description: The lowest price during the time period.
          format: double
          nullable: true
          type: number
        price_close:
          description: The closing price.
          format: double
          nullable: true
          type: number
        volume_traded:
          description: The total volume traded during the time period. This could
            be zero if there was not transactions and there was only orderbook activity.
          format: double
          type: number
        trades_count:
          description: The number of trades executed during the time period. This
            could be zero if there was not transactions and there was only orderbook
            activity.
          format: int64
          type: integer
        symbol_id_exchange:
          nullable: true
          type: string
        symbol_id_coinapi:
          nullable: true
          type: string
      type: object
    Options.OptionExchangeGroup:
      additionalProperties: false
      description: Represents an option exchange group data model.
      example:
        asset_id_base: asset_id_base
        underlying_price: 0.8008281904610115
        time_expiration: 2000-01-23T04:56:07.000+00:00
        strikes:
        - call:
            time_exchange: 2000-01-23T04:56:07.000+00:00
            ask_size: 5.962133916683182
            last_trade:
              time_exchange: 2000-01-23T04:56:07.000+00:00
              size: 9.301444243932576
              price: 7.061401241503109
              time_coinapi: 2000-01-23T04:56:07.000+00:00
              taker_side: taker_side
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            bid_size: 2.3021358869347655
            time_coinapi: 2000-01-23T04:56:07.000+00:00
            symbol_id: symbol_id
            bid_price: 5.637376656633329
            ask_price: 1.4658129805029452
          put:
            time_exchange: 2000-01-23T04:56:07.000+00:00
            ask_size: 5.962133916683182
            last_trade:
              time_exchange: 2000-01-23T04:56:07.000+00:00
              size: 9.301444243932576
              price: 7.061401241503109
              time_coinapi: 2000-01-23T04:56:07.000+00:00
              taker_side: taker_side
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            bid_size: 2.3021358869347655
            time_coinapi: 2000-01-23T04:56:07.000+00:00
            symbol_id: symbol_id
            bid_price: 5.637376656633329
            ask_price: 1.4658129805029452
          strike_price: 6.027456183070403
        - call:
            time_exchange: 2000-01-23T04:56:07.000+00:00
            ask_size: 5.962133916683182
            last_trade:
              time_exchange: 2000-01-23T04:56:07.000+00:00
              size: 9.301444243932576
              price: 7.061401241503109
              time_coinapi: 2000-01-23T04:56:07.000+00:00
              taker_side: taker_side
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            bid_size: 2.3021358869347655
            time_coinapi: 2000-01-23T04:56:07.000+00:00
            symbol_id: symbol_id
            bid_price: 5.637376656633329
            ask_price: 1.4658129805029452
          put:
            time_exchange: 2000-01-23T04:56:07.000+00:00
            ask_size: 5.962133916683182
            last_trade:
              time_exchange: 2000-01-23T04:56:07.000+00:00
              size: 9.301444243932576
              price: 7.061401241503109
              time_coinapi: 2000-01-23T04:56:07.000+00:00
              taker_side: taker_side
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            bid_size: 2.3021358869347655
            time_coinapi: 2000-01-23T04:56:07.000+00:00
            symbol_id: symbol_id
            bid_price: 5.637376656633329
            ask_price: 1.4658129805029452
          strike_price: 6.027456183070403
        asset_id_quote: asset_id_quote
      properties:
        asset_id_base:
          description: The base asset identifier.
          nullable: true
          type: string
        asset_id_quote:
          description: The quote asset identifier.
          nullable: true
          type: string
        underlying_price:
          description: The underlying price of the option.
          format: double
          nullable: true
          type: number
        time_expiration:
          description: The expiration time of the option.
          format: date-time
          type: string
        strikes:
          description: The list of strikes available.
          items:
            $ref: "#/components/schemas/Options.Strike"
          nullable: true
          type: array
      type: object
    Options.Strike:
      additionalProperties: false
      description: Represents a strike within the option exchange group.
      example:
        call:
          time_exchange: 2000-01-23T04:56:07.000+00:00
          ask_size: 5.962133916683182
          last_trade:
            time_exchange: 2000-01-23T04:56:07.000+00:00
            size: 9.301444243932576
            price: 7.061401241503109
            time_coinapi: 2000-01-23T04:56:07.000+00:00
            taker_side: taker_side
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bid_size: 2.3021358869347655
          time_coinapi: 2000-01-23T04:56:07.000+00:00
          symbol_id: symbol_id
          bid_price: 5.637376656633329
          ask_price: 1.4658129805029452
        put:
          time_exchange: 2000-01-23T04:56:07.000+00:00
          ask_size: 5.962133916683182
          last_trade:
            time_exchange: 2000-01-23T04:56:07.000+00:00
            size: 9.301444243932576
            price: 7.061401241503109
            time_coinapi: 2000-01-23T04:56:07.000+00:00
            taker_side: taker_side
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bid_size: 2.3021358869347655
          time_coinapi: 2000-01-23T04:56:07.000+00:00
          symbol_id: symbol_id
          bid_price: 5.637376656633329
          ask_price: 1.4658129805029452
        strike_price: 6.027456183070403
      properties:
        strike_price:
          description: The strike price.
          format: double
          type: number
        call:
          $ref: "#/components/schemas/v1.QuoteTrade"
        put:
          $ref: "#/components/schemas/v1.QuoteTrade"
      type: object
    v1.Asset:
      additionalProperties: false
      description: Represents an asset.
      example:
        price_usd: 2.3021358869347655
        volume_1mth_usd: 5.637376656633329
        data_end: data_end
        id_icon: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        data_orderbook_end: 2000-01-23T04:56:07.000+00:00
        data_start: data_start
        type_is_crypto: 0
        data_quote_start: 2000-01-23T04:56:07.000+00:00
        asset_id: asset_id
        volume_1hrs_usd: 1.4658129805029452
        supply_current: 7.061401241503109
        data_quote_end: 2000-01-23T04:56:07.000+00:00
        data_orderbook_start: 2000-01-23T04:56:07.000+00:00
        data_trade_start: 2000-01-23T04:56:07.000+00:00
        supply_max: 3.616076749251911
        name: name
        data_symbols_count: 6
        chain_addresses:
        - network_id: network_id
          address: address
          chain_id: chain_id
        - network_id: network_id
          address: address
          chain_id: chain_id
        supply_total: 9.301444243932576
        data_trade_end: 2000-01-23T04:56:07.000+00:00
        volume_1day_usd: 5.962133916683182
      properties:
        asset_id:
          description: Gets or sets the asset ID.
          nullable: true
          type: string
        name:
          description: Gets or sets the name of the asset.
          nullable: true
          type: string
        type_is_crypto:
          description: Gets or sets a value indicating whether the asset is a cryptocurrency.
          format: int32
          type: integer
        data_quote_start:
          description: Gets or sets the start date of quote data.
          format: date-time
          nullable: true
          type: string
        data_quote_end:
          description: Gets or sets the end date of quote data.
          format: date-time
          nullable: true
          type: string
        data_orderbook_start:
          description: Gets or sets the start date of order book data.
          format: date-time
          nullable: true
          type: string
        data_orderbook_end:
          description: Gets or sets the end date of order book data.
          format: date-time
          nullable: true
          type: string
        data_trade_start:
          description: Gets or sets the start date of trade data.
          format: date-time
          nullable: true
          type: string
        data_trade_end:
          description: Gets or sets the end date of trade data.
          format: date-time
          nullable: true
          type: string
        data_symbols_count:
          description: Gets or sets the number of symbols.
          format: int64
          nullable: true
          type: integer
        volume_1hrs_usd:
          description: Gets or sets the USD volume in the last 1 hour.
          format: double
          nullable: true
          type: number
        volume_1day_usd:
          description: Gets or sets the USD volume in the last 1 day.
          format: double
          nullable: true
          type: number
        volume_1mth_usd:
          description: Gets or sets the USD volume in the last 1 month.
          format: double
          nullable: true
          type: number
        price_usd:
          description: Gets or sets the USD price of the asset.
          format: double
          nullable: true
          type: number
        id_icon:
          description: Gets or sets the ID of the icon for the asset.
          format: uuid
          nullable: true
          type: string
        supply_current:
          description: Gets or sets the current supply of the asset.
          format: double
          nullable: true
          type: number
        supply_total:
          description: Gets or sets the total supply of the asset.
          format: double
          nullable: true
          type: number
        supply_max:
          description: Gets or sets the maximum supply of the asset.
          format: double
          nullable: true
          type: number
        chain_addresses:
          description: ""
          items:
            $ref: "#/components/schemas/v1.ChainNetworkAddress"
          nullable: true
          type: array
        data_start:
          nullable: true
          readOnly: true
          type: string
        data_end:
          nullable: true
          readOnly: true
          type: string
      type: object
    v1.Chain:
      additionalProperties: false
      description: Represents a blockchain chain.
      example:
        chain_id: chain_id
        name: name
      properties:
        chain_id:
          description: Gets or sets the chain identifier.
          nullable: true
          type: string
        name:
          description: Gets or sets the name of the chain.
          nullable: true
          type: string
      type: object
    v1.ChainNetworkAddress:
      additionalProperties: false
      description: Contains information about assets' chain network addresses
      example:
        network_id: network_id
        address: address
        chain_id: chain_id
      properties:
        chain_id:
          description: Gets or sets chain id
          nullable: true
          type: string
        network_id:
          description: Gets or sets network id
          nullable: true
          type: string
        address:
          description: Gets or sets chain address
          nullable: true
          type: string
      type: object
    v1.Exchange:
      additionalProperties: false
      description: Represents an exchange.
      example:
        data_end: data_end
        volume_1mth_usd: 5.637376656633329
        metric_id:
        - metric_id
        - metric_id
        website: website
        data_orderbook_end: 2000-01-23T04:56:07.000+00:00
        data_start: data_start
        data_quote_start: 2000-01-23T04:56:07.000+00:00
        volume_1hrs_usd: 1.4658129805029452
        icons:
        - exchange_id: exchange_id
          asset_id: asset_id
          url: url
        - exchange_id: exchange_id
          asset_id: asset_id
          url: url
        integration_status: integration_status
        exchange_id: exchange_id
        data_quote_end: 2000-01-23T04:56:07.000+00:00
        data_orderbook_start: 2000-01-23T04:56:07.000+00:00
        data_trade_start: 2000-01-23T04:56:07.000+00:00
        name: name
        data_symbols_count: 6
        rank: 2.3021358869347655
        data_trade_end: 2000-01-23T04:56:07.000+00:00
        data_trade_count: 0
        volume_1day_usd: 5.962133916683182
      properties:
        exchange_id:
          description: Gets or sets the exchange ID.
          nullable: true
          type: string
        website:
          description: Gets or sets the website URL of the exchange.
          nullable: true
          type: string
        name:
          description: Gets or sets the name of the exchange.
          nullable: true
          type: string
        data_start:
          nullable: true
          readOnly: true
          type: string
        data_end:
          nullable: true
          readOnly: true
          type: string
        data_quote_start:
          description: Gets or sets the start date of quote data.
          format: date-time
          nullable: true
          type: string
        data_quote_end:
          description: Gets or sets the end date of quote data.
          format: date-time
          nullable: true
          type: string
        data_orderbook_start:
          description: Gets or sets the start date of order book data.
          format: date-time
          nullable: true
          type: string
        data_orderbook_end:
          description: Gets or sets the end date of order book data.
          format: date-time
          nullable: true
          type: string
        data_trade_start:
          description: Gets or sets the start date of trade data.
          format: date-time
          nullable: true
          type: string
        data_trade_end:
          description: Gets or sets the end date of trade data.
          format: date-time
          nullable: true
          type: string
        data_trade_count:
          description: Gets or sets the number of trades.
          format: int64
          nullable: true
          type: integer
        data_symbols_count:
          description: Gets or sets the number of symbols.
          format: int64
          nullable: true
          type: integer
        volume_1hrs_usd:
          description: Gets or sets the USD volume in the last 1 hour.
          format: double
          nullable: true
          type: number
        volume_1day_usd:
          description: Gets or sets the USD volume in the last 1 day.
          format: double
          nullable: true
          type: number
        volume_1mth_usd:
          description: Gets or sets the USD volume in the last 1 month.
          format: double
          nullable: true
          type: number
        metric_id:
          description: Gets or sets the list of metric IDs.
          items:
            type: string
          nullable: true
          type: array
        icons:
          description: Gets or sets the list of icons for the exchange.
          items:
            $ref: "#/components/schemas/v1.Icon"
          nullable: true
          readOnly: true
          type: array
        rank:
          description: Rank of the exchange.
          format: double
          type: number
        integration_status:
          description: Status of the integration
          nullable: true
          type: string
      type: object
    v1.ExchangeRate:
      additionalProperties: false
      description: Represents an exchange rate.
      example:
        asset_id_base: asset_id_base
        rate: 0.8008281904610115
        asset_id_quote: asset_id_quote
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        time:
          description: Gets or sets the time of the exchange rate.
          format: date-time
          type: string
        asset_id_base:
          description: Gets or sets the base asset ID of the exchange rate.
          nullable: true
          type: string
        asset_id_quote:
          description: Gets or sets the quote asset ID of the exchange rate.
          nullable: true
          type: string
        rate:
          description: Gets or sets the exchange rate value.
          format: double
          type: number
      type: object
    v1.ExchangeRates:
      additionalProperties: false
      description: Represents exchange rates for a specific base asset.
      example:
        asset_id_base: asset_id_base
        rates:
        - rate: 0.8008281904610115
          asset_id_quote: asset_id_quote
          time: 2000-01-23T04:56:07.000+00:00
        - rate: 0.8008281904610115
          asset_id_quote: asset_id_quote
          time: 2000-01-23T04:56:07.000+00:00
      properties:
        asset_id_base:
          description: Gets or sets the base asset ID.
          nullable: true
          type: string
        rates:
          description: Gets or sets the list of exchange rates.
          items:
            $ref: "#/components/schemas/v1.ExchangeRatesRate"
          nullable: true
          type: array
      type: object
    v1.ExchangeRatesRate:
      additionalProperties: false
      description: Represents an exchange rate within a collection of exchange rates.
      example:
        rate: 0.8008281904610115
        asset_id_quote: asset_id_quote
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        time:
          description: Gets or sets the time of the exchange rate.
          format: date-time
          type: string
        asset_id_quote:
          description: Gets or sets the quote asset ID of the exchange rate.
          nullable: true
          type: string
        rate:
          description: Gets or sets the exchange rate value.
          format: double
          type: number
      type: object
    v1.ExchangeRatesTimeseriesItem:
      additionalProperties: false
      description: Represents an item in the exchange rate timeseries.
      example:
        time_period_end: 2000-01-23T04:56:07.000+00:00
        time_open: 2000-01-23T04:56:07.000+00:00
        rate_high: 6.027456183070403
        rate_low: 1.4658129805029452
        time_close: 2000-01-23T04:56:07.000+00:00
        rate_close: 5.962133916683182
        time_period_start: 2000-01-23T04:56:07.000+00:00
        rate_open: 0.8008281904610115
      properties:
        time_period_start:
          description: Gets or sets the start time of the period.
          format: date-time
          type: string
        time_period_end:
          description: Gets or sets the end time of the period.
          format: date-time
          type: string
        time_open:
          description: Gets or sets the opening time of the period.
          format: date-time
          nullable: true
          type: string
        time_close:
          description: Gets or sets the closing time of the period.
          format: date-time
          nullable: true
          type: string
        rate_open:
          description: Gets or sets the opening rate for the period.
          format: double
          nullable: true
          type: number
        rate_high:
          description: Gets or sets the highest rate for the period.
          format: double
          nullable: true
          type: number
        rate_low:
          description: Gets or sets the lowest rate for the period.
          format: double
          nullable: true
          type: number
        rate_close:
          description: Gets or sets the closing rate for the period.
          format: double
          nullable: true
          type: number
      type: object
    v1.GeneralData:
      additionalProperties: false
      description: Class representation of general metric data. This class is an XML
        type with name 'general_data' and inherits from the BaseCsvModel class.
      example:
        entry_time: 2000-01-23T04:56:07.000+00:00
        metric_id: metric_id
        value_text: value_text
        value_time: 2000-01-23T04:56:07.000+00:00
        exchange_id: exchange_id
        recv_time: 2000-01-23T04:56:07.000+00:00
        asset_id: asset_id
        symbol_id: symbol_id
        value_decimal: 0.8008281904610115
      properties:
        entry_time:
          description: Gets or sets the entry time for the data point.
          format: date-time
          type: string
        recv_time:
          description: Gets or sets the received time for the data point.
          format: date-time
          type: string
        exchange_id:
          description: Gets or sets the identifier for the exchange.
          nullable: true
          type: string
        asset_id:
          description: Gets or sets the identifier for the asset.
          nullable: true
          type: string
        symbol_id:
          description: Gets or sets the identifier for the symbol.
          nullable: true
          type: string
        metric_id:
          description: Gets or sets the identifier for the metric.
          nullable: true
          type: string
        value_decimal:
          description: Gets or sets the decimal value for the metric.
          format: double
          nullable: true
          type: number
        value_text:
          description: Gets or sets the textual representation of the value for the
            metric.
          nullable: true
          type: string
        value_time:
          description: Gets or sets the timestamp value for the metric.
          format: date-time
          nullable: true
          type: string
      type: object
    v1.Icon:
      additionalProperties: false
      description: Represents an icon.
      example:
        exchange_id: exchange_id
        asset_id: asset_id
        url: url
      properties:
        exchange_id:
          description: Gets or sets the exchange ID associated with the icon.
          nullable: true
          type: string
        asset_id:
          description: Gets or sets the asset ID associated with the icon.
          nullable: true
          type: string
        url:
          description: Gets or sets the URL of the icon.
          nullable: true
          type: string
      type: object
    v1.LastTrade:
      additionalProperties: false
      description: Represents the last executed transaction.
      example:
        time_exchange: 2000-01-23T04:56:07.000+00:00
        size: 9.301444243932576
        price: 7.061401241503109
        time_coinapi: 2000-01-23T04:56:07.000+00:00
        taker_side: taker_side
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        time_exchange:
          description: The exchange time of the last trade.
          format: date-time
          type: string
        time_coinapi:
          description: The CoinAPI time when the last trade was received.
          format: date-time
          type: string
        uuid:
          description: The UUID of the last trade.
          format: uuid
          type: string
        price:
          description: The price of the last trade.
          format: double
          type: number
        size:
          description: The size of the last trade.
          format: double
          type: number
        taker_side:
          description: The taker side of the last trade.
          nullable: true
          type: string
      type: object
    v1.ListingItem:
      additionalProperties: false
      description: Represents a listing item.
      example:
        metric_id: metric_id
        exchange_id: exchange_id
        network_id: network_id
        chain_id: chain_id
        asset_id: asset_id
        asset_id_external: asset_id_external
        symbol_id: symbol_id
        symbol_id_external: symbol_id_external
      properties:
        metric_id:
          description: Gets or sets the metric ID.
          nullable: true
          type: string
        symbol_id:
          description: Gets or sets the symbol ID.
          nullable: true
          type: string
        symbol_id_external:
          description: Gets or sets the symbol ID from the exchange.
          nullable: true
          type: string
        exchange_id:
          description: Gets or sets the exchange ID.
          nullable: true
          type: string
        asset_id:
          description: Gets or sets the asset ID.
          nullable: true
          type: string
        asset_id_external:
          description: Gets or sets the asset ID from the exchange.
          nullable: true
          type: string
        chain_id:
          description: Gets or sets the chain id.
          nullable: true
          type: string
        network_id:
          description: Gets or sets the network id.
          nullable: true
          type: string
      type: object
    v1.Metric:
      additionalProperties: false
      description: Represents a metric.
      example:
        metric_id: metric_id
        description: description
      properties:
        metric_id:
          description: Gets or sets the metric ID.
          nullable: true
          type: string
        description:
          description: Gets or sets the metric description.
          nullable: true
          type: string
      type: object
    v1.MetricData:
      additionalProperties: false
      description: Represents a data model for metric data.
      example:
        time: 2000-01-23T04:56:07.000+00:00
        value: 0.8008281904610115
        symbol_id: symbol_id
      properties:
        symbol_id:
          description: Gets or sets the symbol id.
          nullable: true
          type: string
        time:
          description: Gets or sets the time at which the value is recorded.
          format: date-time
          type: string
        value:
          description: Gets or sets the value of the metric.
          format: double
          type: number
      type: object
    v1.MetricInfo:
      additionalProperties: false
      description: Represents a metric information.
      example:
        metric_id: metric_id
        description: description
        source_id: source_id
      properties:
        metric_id:
          description: Gets or sets the metric identifier.
          nullable: true
          type: string
        description:
          description: Gets or sets the description of the metric.
          nullable: true
          type: string
        source_id:
          description: Gets or sets the source identifier of the metric.
          nullable: true
          type: string
      type: object
    v1.OrderBook:
      additionalProperties: false
      description: Represents an order book with additional information and functionality.
      example:
        time_exchange: 2000-01-23T04:56:07.000+00:00
        asks: ""
        bids: ""
        time_coinapi: 2000-01-23T04:56:07.000+00:00
        symbol_id: symbol_id
      properties:
        symbol_id:
          description: The symbol identifier.
          nullable: true
          type: string
        time_exchange:
          description: The exchange time of the order book.
          format: date-time
          type: string
        time_coinapi:
          description: The CoinAPI time when the order book was received.
          format: date-time
          type: string
        asks:
          description: The asks made by market makers.
          nullable: true
        bids:
          description: The bids made by market makers.
          nullable: true
      type: object
    v1.OrderBookBase:
      additionalProperties: false
      description: Represents the base model for order book data.
      example:
        time_exchange: 2000-01-23T04:56:07.000+00:00
        asks: ""
        bids: ""
        time_coinapi: 2000-01-23T04:56:07.000+00:00
        symbol_id: symbol_id
      properties:
        symbol_id:
          description: The symbol identifier.
          nullable: true
          type: string
        time_exchange:
          description: The exchange time of the order book.
          format: date-time
          type: string
        time_coinapi:
          description: The CoinAPI time when the order book was received.
          format: date-time
          type: string
        asks:
          description: The asks made by market makers.
          nullable: true
        bids:
          description: The bids made by market makers.
          nullable: true
      type: object
    v1.OrderBookDepth:
      additionalProperties: false
      description: Represents the depth of an order book.
      example:
        ask_depth: 1.4658129805029452
        time_exchange: 2000-01-23T04:56:07.000+00:00
        ask_levels: 0
        bid_levels: 6
        time_coinapi: 2000-01-23T04:56:07.000+00:00
        bid_depth: 5.962133916683182
        symbol_id: symbol_id
      properties:
        symbol_id:
          description: The symbol identifier.
          nullable: true
          type: string
        time_exchange:
          description: The exchange time of the order book.
          format: date-time
          type: string
        time_coinapi:
          description: The CoinAPI time when the order book was received.
          format: date-time
          type: string
        ask_levels:
          description: The number of ask levels in the order book.
          format: int64
          type: integer
        bid_levels:
          description: The number of bid levels in the order book.
          format: int64
          type: integer
        ask_depth:
          description: The depth of the ask side of the order book.
          format: double
          type: number
        bid_depth:
          description: The depth of the bid side of the order book.
          format: double
          type: number
      type: object
    v1.Quote:
      additionalProperties: false
      description: Represents a quote data model.
      example:
        time_exchange: 2000-01-23T04:56:07.000+00:00
        ask_size: 6.027456183070403
        bid_size: 5.962133916683182
        time_coinapi: 2000-01-23T04:56:07.000+00:00
        symbol_id: symbol_id
        bid_price: 1.4658129805029452
        ask_price: 0.8008281904610115
      properties:
        symbol_id:
          description: The symbol identifier.
          nullable: true
          type: string
        time_exchange:
          description: The exchange time of the quote.
          format: date-time
          type: string
        time_coinapi:
          description: The CoinAPI time when the quote was received.
          format: date-time
          type: string
        ask_price:
          description: The best asking price.
          format: double
          nullable: true
          type: number
        ask_size:
          description: "The volume resting on the best ask. If the value is equal\
            \ to zero, then the size is unknown."
          format: double
          nullable: true
          type: number
        bid_price:
          description: The best bidding price.
          format: double
          nullable: true
          type: number
        bid_size:
          description: "The volume resting on the best bid. If the value is equal\
            \ to zero, then the size is unknown."
          format: double
          nullable: true
          type: number
      type: object
    v1.QuoteTrade:
      additionalProperties: false
      description: Represents a quote trade data model.
      example:
        time_exchange: 2000-01-23T04:56:07.000+00:00
        ask_size: 5.962133916683182
        last_trade:
          time_exchange: 2000-01-23T04:56:07.000+00:00
          size: 9.301444243932576
          price: 7.061401241503109
          time_coinapi: 2000-01-23T04:56:07.000+00:00
          taker_side: taker_side
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bid_size: 2.3021358869347655
        time_coinapi: 2000-01-23T04:56:07.000+00:00
        symbol_id: symbol_id
        bid_price: 5.637376656633329
        ask_price: 1.4658129805029452
      properties:
        symbol_id:
          description: The symbol identifier.
          nullable: true
          type: string
        time_exchange:
          description: The exchange time of the quote trade.
          format: date-time
          type: string
        time_coinapi:
          description: The CoinAPI time when the quote trade was received.
          format: date-time
          type: string
        ask_price:
          description: The best asking price.
          format: double
          nullable: true
          type: number
        ask_size:
          description: "The volume resting on the best ask. If the value is equal\
            \ to zero, then the size is unknown."
          format: double
          nullable: true
          type: number
        bid_price:
          description: The best bidding price.
          format: double
          nullable: true
          type: number
        bid_size:
          description: "The volume resting on the best bid. If the value is equal\
            \ to zero, then the size is unknown."
          format: double
          nullable: true
          type: number
        last_trade:
          $ref: "#/components/schemas/v1.LastTrade"
      type: object
    v1.Symbol:
      additionalProperties: false
      description: Represents a symbol data model.
      example:
        contract_id: contract_id
        data_start: data_start
        raw_kvp:
          key: raw_kvp
        volume_1hrs_usd: 2.3021358869347655
        index_display_name: index_display_name
        option_contract_unit: 1.4658129805029452
        asset_id_base: asset_id_base
        contract_unit_asset: contract_unit_asset
        exchange_id: exchange_id
        contract_display_description: contract_display_description
        data_quote_end: 2000-01-23T04:56:07.000+00:00
        symbol_id_int: 1
        future_contract_unit_asset: future_contract_unit_asset
        data_trade_start: 2000-01-23T04:56:07.000+00:00
        price: 4.145608029883936
        symbol_type: symbol_type
        volume_to_usd: 1.0246457001441578
        asset_id_quote_exchange: asset_id_quote_exchange
        index_id: index_id
        symbol_id: symbol_id
        index_display_description: index_display_description
        future_delivery_time: 2000-01-23T04:56:07.000+00:00
        data_end: data_end
        volume_1mth_usd: 2.027123023002322
        volume_1hrs: 5.637376656633329
        asset_id_unit: asset_id_unit
        data_orderbook_end: 2000-01-23T04:56:07.000+00:00
        symbol_id_exchange: symbol_id_exchange
        contract_unit: 5.962133916683182
        asset_id_quote: asset_id_quote
        data_quote_start: 2000-01-23T04:56:07.000+00:00
        asset_id_base_exchange: asset_id_base_exchange
        option_expiration_time: 2000-01-23T04:56:07.000+00:00
        volume_1mth: 3.616076749251911
        volume_1day: 7.061401241503109
        price_precision: 7.386281948385884
        option_type_is_call: true
        option_strike_price: 6.027456183070403
        future_contract_unit: 0.8008281904610115
        option_exercise_style: option_exercise_style
        data_orderbook_start: 2000-01-23T04:56:07.000+00:00
        contract_delivery_time: 2000-01-23T04:56:07.000+00:00
        size_precision: 1.2315135367772556
        data_trade_end: 2000-01-23T04:56:07.000+00:00
        contract_display_name: contract_display_name
        volume_1day_usd: 9.301444243932576
      properties:
        symbol_id:
          description: The symbol identifier.
          nullable: true
          type: string
        exchange_id:
          description: The exchange identifier.
          nullable: true
          type: string
        symbol_type:
          description: The symbol type.
          nullable: true
          type: string
        asset_id_base:
          description: The base asset identifier.
          nullable: true
          type: string
        asset_id_quote:
          description: The quote asset identifier.
          nullable: true
          type: string
        asset_id_unit:
          description: The unit asset identifier.
          nullable: true
          type: string
        future_contract_unit:
          description: The contract unit for futures.
          format: double
          nullable: true
          type: number
        future_contract_unit_asset:
          description: The asset used as the unit for futures contract.
          nullable: true
          type: string
        future_delivery_time:
          description: The future delivery time for futures contract.
          format: date-time
          nullable: true
          type: string
        option_type_is_call:
          description: Indicates whether the option type is a call.
          nullable: true
          type: boolean
        option_strike_price:
          description: The strike price for options.
          format: double
          nullable: true
          type: number
        option_contract_unit:
          description: The contract unit for options.
          format: double
          nullable: true
          type: number
        option_exercise_style:
          description: The exercise style for options.
          nullable: true
          type: string
        option_expiration_time:
          description: The expiration time for options.
          format: date-time
          nullable: true
          type: string
        contract_delivery_time:
          description: The delivery time for contracts.
          format: date-time
          nullable: true
          type: string
        contract_unit:
          description: The contract unit for contracts.
          format: double
          nullable: true
          type: number
        contract_unit_asset:
          description: The asset used as the unit for contracts.
          nullable: true
          type: string
        contract_id:
          description: The contract identifier.
          nullable: true
          type: string
        contract_display_name:
          description: The display name of the contract.
          nullable: true
          type: string
        contract_display_description:
          description: The display description of the contract.
          nullable: true
          type: string
        data_start:
          nullable: true
          readOnly: true
          type: string
        data_end:
          nullable: true
          readOnly: true
          type: string
        data_quote_start:
          description: The start date of quote data.
          format: date-time
          nullable: true
          type: string
        data_quote_end:
          description: The end date of quote data.
          format: date-time
          nullable: true
          type: string
        data_orderbook_start:
          description: The start date of order book data.
          format: date-time
          nullable: true
          type: string
        data_orderbook_end:
          description: The end date of order book data.
          format: date-time
          nullable: true
          type: string
        data_trade_start:
          description: The start date of trade data.
          format: date-time
          nullable: true
          type: string
        data_trade_end:
          description: The end date of trade data.
          format: date-time
          nullable: true
          type: string
        index_id:
          description: The index identifier.
          nullable: true
          type: string
        index_display_name:
          description: The display name of the index.
          nullable: true
          type: string
        index_display_description:
          description: The display description of the index.
          nullable: true
          type: string
        volume_1hrs:
          description: The volume in the last 1 hour.
          format: double
          nullable: true
          type: number
        volume_1hrs_usd:
          description: The volume in USD in the last 1 hour.
          format: double
          nullable: true
          type: number
        volume_1day:
          description: The volume in the last 1 day.
          format: double
          nullable: true
          type: number
        volume_1day_usd:
          description: The volume in USD in the last 1 day.
          format: double
          nullable: true
          type: number
        volume_1mth:
          description: The volume in the last 1 month.
          format: double
          nullable: true
          type: number
        volume_1mth_usd:
          description: The volume in USD in the last 1 month.
          format: double
          nullable: true
          type: number
        price:
          description: The price.
          format: double
          nullable: true
          type: number
        symbol_id_exchange:
          description: The symbol identifier in the exchange.
          nullable: true
          type: string
        asset_id_base_exchange:
          description: The base asset identifier in the exchange.
          nullable: true
          type: string
        asset_id_quote_exchange:
          description: The quote asset identifier in the exchange.
          nullable: true
          type: string
        price_precision:
          description: The price precision.
          format: double
          nullable: true
          type: number
        size_precision:
          description: The size precision.
          format: double
          nullable: true
          type: number
        raw_kvp:
          additionalProperties:
            type: string
          description: Not normalized raw kvp data.
          nullable: true
          type: object
        volume_to_usd:
          description: Volume unit in USD.
          format: double
          nullable: true
          type: number
        symbol_id_int:
          description: "The symbol identifier in integer immutable format, used to\
            \ correlate data across different APIs."
          format: int32
          nullable: true
          readOnly: true
          type: integer
      type: object
    v1.SymbolMapping:
      additionalProperties: false
      description: Represents symbol mapping information for exchange symbols.
      example:
        asset_id_base: asset_id_base
        symbol_id_exchange: symbol_id_exchange
        asset_id_quote: asset_id_quote
        asset_id_base_exchange: asset_id_base_exchange
        coinapi_datainfo_id: 0
        asset_id_quote_exchange: asset_id_quote_exchange
        size_precision: 1.4658129805029452
        symbol_id: symbol_id
        price_precision: 6.027456183070403
      properties:
        symbol_id:
          description: The symbol ID.
          nullable: true
          type: string
        symbol_id_exchange:
          description: The exchange-specific symbol ID.
          nullable: true
          type: string
        coinapi_datainfo_id:
          description: The CoinAPI DataInfo ID.
          format: int32
          type: integer
        asset_id_base_exchange:
          description: The exchange-specific base asset ID.
          nullable: true
          type: string
        asset_id_quote_exchange:
          description: The exchange-specific quote asset ID.
          nullable: true
          type: string
        asset_id_base:
          description: The base asset ID.
          nullable: true
          type: string
        asset_id_quote:
          description: The quote asset ID.
          nullable: true
          type: string
        price_precision:
          description: The price precision.
          format: double
          nullable: true
          type: number
        size_precision:
          description: The size precision.
          format: double
          nullable: true
          type: number
      type: object
    v1.TimeseriesItem:
      additionalProperties: false
      description: Represents a timeseries item with price and volume information.
      example:
        time_period_end: 2000-01-23T04:56:07.000+00:00
        time_open: 2000-01-23T04:56:07.000+00:00
        price_close: 5.962133916683182
        trades_count: 2
        time_close: 2000-01-23T04:56:07.000+00:00
        price_open: 0.8008281904610115
        time_period_start: 2000-01-23T04:56:07.000+00:00
        price_high: 6.027456183070403
        volume_traded: 5.637376656633329
        price_low: 1.4658129805029452
      properties:
        time_period_start:
          description: The start time of the time period.
          format: date-time
          type: string
        time_period_end:
          description: The end time of the time period.
          format: date-time
          type: string
        time_open:
          description: The time when the price opened.
          format: date-time
          nullable: true
          type: string
        time_close:
          description: The time when the price closed.
          format: date-time
          nullable: true
          type: string
        price_open:
          description: The opening price.
          format: double
          nullable: true
          type: number
        price_high:
          description: The highest price during the time period.
          format: double
          nullable: true
          type: number
        price_low:
          description: The lowest price during the time period.
          format: double
          nullable: true
          type: number
        price_close:
          description: The closing price.
          format: double
          nullable: true
          type: number
        volume_traded:
          description: The total volume traded during the time period. This could
            be zero if there was not transactions and there was only orderbook activity.
          format: double
          type: number
        trades_count:
          description: The number of trades executed during the time period. This
            could be zero if there was not transactions and there was only orderbook
            activity.
          format: int64
          type: integer
      type: object
    v1.TimeseriesPeriod:
      additionalProperties: false
      description: Represents a timeseries period used in exchange rate data.
      example:
        unit_name: unit_name
        length_months: 6
        length_seconds: 0
        period_id: period_id
        display_name: display_name
        unit_count: 1
      properties:
        period_id:
          description: The period ID.
          nullable: true
          type: string
        length_seconds:
          description: The length of the period in seconds.
          format: int32
          type: integer
        length_months:
          description: The length of the period in months.
          format: int32
          type: integer
        unit_count:
          description: The unit count.
          format: int32
          nullable: true
          type: integer
        unit_name:
          description: The unit name.
          nullable: true
          type: string
        display_name:
          description: The display name of the timeseries period.
          nullable: true
          type: string
      type: object
    v1.Trade:
      additionalProperties: false
      description: Represents a trade executed on the exchange.
      example:
        time_exchange: 2000-01-23T04:56:07.000+00:00
        id_order_taker: id_order_taker
        size: 6.027456183070403
        price: 0.8008281904610115
        time_coinapi: 2000-01-23T04:56:07.000+00:00
        taker_side: taker_side
        id_order_maker: id_order_maker
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        symbol_id: symbol_id
        id_trade: id_trade
      properties:
        symbol_id:
          description: The symbol identifier.
          nullable: true
          type: string
        time_exchange:
          description: The time of trade reported by the exchange.
          format: date-time
          type: string
        time_coinapi:
          description: The time when the trade was received by CoinAPI.
          format: date-time
          type: string
        uuid:
          description: The unique identifier for the trade.
          format: uuid
          type: string
        price:
          description: The price of the transaction.
          format: double
          type: number
        size:
          description: The base asset amount traded in the transaction.
          format: double
          type: number
        taker_side:
          description: The aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).
          nullable: true
          type: string
        id_trade:
          description: The trade identifier.
          nullable: true
          type: string
        id_order_maker:
          description: The order maker identifier.
          nullable: true
          type: string
        id_order_taker:
          description: The order taker identifier.
          nullable: true
          type: string
      type: object
  securitySchemes:
    APIKey:
      description: API Key is required to access the endpoints
      in: header
      name: Authorization
      type: apiKey
    JWT:
      bearerFormat: JWT
      description: "JWT Authorization header using the Bearer scheme. Example: \"\
        Bearer {token}\""
      scheme: bearer
      type: http

