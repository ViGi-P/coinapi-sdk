/*
 * Exchange Rates Historical REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an item in the exchange rate timeseries.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-06T06:06:29.829610082Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class V1ExchangeRatesTimeseriesItem {
  public static final String SERIALIZED_NAME_TIME_PERIOD_START = "time_period_start";
  @SerializedName(SERIALIZED_NAME_TIME_PERIOD_START)
  @javax.annotation.Nullable
  private OffsetDateTime timePeriodStart;

  public static final String SERIALIZED_NAME_TIME_PERIOD_END = "time_period_end";
  @SerializedName(SERIALIZED_NAME_TIME_PERIOD_END)
  @javax.annotation.Nullable
  private OffsetDateTime timePeriodEnd;

  public static final String SERIALIZED_NAME_TIME_OPEN = "time_open";
  @SerializedName(SERIALIZED_NAME_TIME_OPEN)
  @javax.annotation.Nullable
  private OffsetDateTime timeOpen;

  public static final String SERIALIZED_NAME_TIME_CLOSE = "time_close";
  @SerializedName(SERIALIZED_NAME_TIME_CLOSE)
  @javax.annotation.Nullable
  private OffsetDateTime timeClose;

  public static final String SERIALIZED_NAME_RATE_OPEN = "rate_open";
  @SerializedName(SERIALIZED_NAME_RATE_OPEN)
  @javax.annotation.Nullable
  private Double rateOpen;

  public static final String SERIALIZED_NAME_RATE_HIGH = "rate_high";
  @SerializedName(SERIALIZED_NAME_RATE_HIGH)
  @javax.annotation.Nullable
  private Double rateHigh;

  public static final String SERIALIZED_NAME_RATE_LOW = "rate_low";
  @SerializedName(SERIALIZED_NAME_RATE_LOW)
  @javax.annotation.Nullable
  private Double rateLow;

  public static final String SERIALIZED_NAME_RATE_CLOSE = "rate_close";
  @SerializedName(SERIALIZED_NAME_RATE_CLOSE)
  @javax.annotation.Nullable
  private Double rateClose;

  public V1ExchangeRatesTimeseriesItem() {
  }

  public V1ExchangeRatesTimeseriesItem timePeriodStart(@javax.annotation.Nullable OffsetDateTime timePeriodStart) {
    this.timePeriodStart = timePeriodStart;
    return this;
  }

  /**
   * Gets or sets the start time of the period.
   * @return timePeriodStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimePeriodStart() {
    return timePeriodStart;
  }

  public void setTimePeriodStart(@javax.annotation.Nullable OffsetDateTime timePeriodStart) {
    this.timePeriodStart = timePeriodStart;
  }


  public V1ExchangeRatesTimeseriesItem timePeriodEnd(@javax.annotation.Nullable OffsetDateTime timePeriodEnd) {
    this.timePeriodEnd = timePeriodEnd;
    return this;
  }

  /**
   * Gets or sets the end time of the period.
   * @return timePeriodEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimePeriodEnd() {
    return timePeriodEnd;
  }

  public void setTimePeriodEnd(@javax.annotation.Nullable OffsetDateTime timePeriodEnd) {
    this.timePeriodEnd = timePeriodEnd;
  }


  public V1ExchangeRatesTimeseriesItem timeOpen(@javax.annotation.Nullable OffsetDateTime timeOpen) {
    this.timeOpen = timeOpen;
    return this;
  }

  /**
   * Gets or sets the opening time of the period.
   * @return timeOpen
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeOpen() {
    return timeOpen;
  }

  public void setTimeOpen(@javax.annotation.Nullable OffsetDateTime timeOpen) {
    this.timeOpen = timeOpen;
  }


  public V1ExchangeRatesTimeseriesItem timeClose(@javax.annotation.Nullable OffsetDateTime timeClose) {
    this.timeClose = timeClose;
    return this;
  }

  /**
   * Gets or sets the closing time of the period.
   * @return timeClose
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeClose() {
    return timeClose;
  }

  public void setTimeClose(@javax.annotation.Nullable OffsetDateTime timeClose) {
    this.timeClose = timeClose;
  }


  public V1ExchangeRatesTimeseriesItem rateOpen(@javax.annotation.Nullable Double rateOpen) {
    this.rateOpen = rateOpen;
    return this;
  }

  /**
   * Gets or sets the opening rate for the period.
   * @return rateOpen
   */
  @javax.annotation.Nullable
  public Double getRateOpen() {
    return rateOpen;
  }

  public void setRateOpen(@javax.annotation.Nullable Double rateOpen) {
    this.rateOpen = rateOpen;
  }


  public V1ExchangeRatesTimeseriesItem rateHigh(@javax.annotation.Nullable Double rateHigh) {
    this.rateHigh = rateHigh;
    return this;
  }

  /**
   * Gets or sets the highest rate for the period.
   * @return rateHigh
   */
  @javax.annotation.Nullable
  public Double getRateHigh() {
    return rateHigh;
  }

  public void setRateHigh(@javax.annotation.Nullable Double rateHigh) {
    this.rateHigh = rateHigh;
  }


  public V1ExchangeRatesTimeseriesItem rateLow(@javax.annotation.Nullable Double rateLow) {
    this.rateLow = rateLow;
    return this;
  }

  /**
   * Gets or sets the lowest rate for the period.
   * @return rateLow
   */
  @javax.annotation.Nullable
  public Double getRateLow() {
    return rateLow;
  }

  public void setRateLow(@javax.annotation.Nullable Double rateLow) {
    this.rateLow = rateLow;
  }


  public V1ExchangeRatesTimeseriesItem rateClose(@javax.annotation.Nullable Double rateClose) {
    this.rateClose = rateClose;
    return this;
  }

  /**
   * Gets or sets the closing rate for the period.
   * @return rateClose
   */
  @javax.annotation.Nullable
  public Double getRateClose() {
    return rateClose;
  }

  public void setRateClose(@javax.annotation.Nullable Double rateClose) {
    this.rateClose = rateClose;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ExchangeRatesTimeseriesItem v1ExchangeRatesTimeseriesItem = (V1ExchangeRatesTimeseriesItem) o;
    return Objects.equals(this.timePeriodStart, v1ExchangeRatesTimeseriesItem.timePeriodStart) &&
        Objects.equals(this.timePeriodEnd, v1ExchangeRatesTimeseriesItem.timePeriodEnd) &&
        Objects.equals(this.timeOpen, v1ExchangeRatesTimeseriesItem.timeOpen) &&
        Objects.equals(this.timeClose, v1ExchangeRatesTimeseriesItem.timeClose) &&
        Objects.equals(this.rateOpen, v1ExchangeRatesTimeseriesItem.rateOpen) &&
        Objects.equals(this.rateHigh, v1ExchangeRatesTimeseriesItem.rateHigh) &&
        Objects.equals(this.rateLow, v1ExchangeRatesTimeseriesItem.rateLow) &&
        Objects.equals(this.rateClose, v1ExchangeRatesTimeseriesItem.rateClose);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(timePeriodStart, timePeriodEnd, timeOpen, timeClose, rateOpen, rateHigh, rateLow, rateClose);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ExchangeRatesTimeseriesItem {\n");
    sb.append("    timePeriodStart: ").append(toIndentedString(timePeriodStart)).append("\n");
    sb.append("    timePeriodEnd: ").append(toIndentedString(timePeriodEnd)).append("\n");
    sb.append("    timeOpen: ").append(toIndentedString(timeOpen)).append("\n");
    sb.append("    timeClose: ").append(toIndentedString(timeClose)).append("\n");
    sb.append("    rateOpen: ").append(toIndentedString(rateOpen)).append("\n");
    sb.append("    rateHigh: ").append(toIndentedString(rateHigh)).append("\n");
    sb.append("    rateLow: ").append(toIndentedString(rateLow)).append("\n");
    sb.append("    rateClose: ").append(toIndentedString(rateClose)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("time_period_start", "time_period_end", "time_open", "time_close", "rate_open", "rate_high", "rate_low", "rate_close"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to V1ExchangeRatesTimeseriesItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1ExchangeRatesTimeseriesItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1ExchangeRatesTimeseriesItem is not found in the empty JSON string", V1ExchangeRatesTimeseriesItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1ExchangeRatesTimeseriesItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1ExchangeRatesTimeseriesItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1ExchangeRatesTimeseriesItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1ExchangeRatesTimeseriesItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1ExchangeRatesTimeseriesItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1ExchangeRatesTimeseriesItem.class));

       return (TypeAdapter<T>) new TypeAdapter<V1ExchangeRatesTimeseriesItem>() {
           @Override
           public void write(JsonWriter out, V1ExchangeRatesTimeseriesItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1ExchangeRatesTimeseriesItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of V1ExchangeRatesTimeseriesItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of V1ExchangeRatesTimeseriesItem
   * @throws IOException if the JSON string is invalid with respect to V1ExchangeRatesTimeseriesItem
   */
  public static V1ExchangeRatesTimeseriesItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1ExchangeRatesTimeseriesItem.class);
  }

  /**
   * Convert an instance of V1ExchangeRatesTimeseriesItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

