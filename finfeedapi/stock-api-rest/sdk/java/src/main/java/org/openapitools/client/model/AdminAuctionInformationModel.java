/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the response DTO for auction information
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-06T06:07:59.075795092Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class AdminAuctionInformationModel {
  public static final String SERIALIZED_NAME_SYMBOL = "symbol";
  @SerializedName(SERIALIZED_NAME_SYMBOL)
  @javax.annotation.Nullable
  private String symbol;

  public static final String SERIALIZED_NAME_TIMESTAMP_NANOS = "timestamp_nanos";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP_NANOS)
  @javax.annotation.Nullable
  private Long timestampNanos;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  @javax.annotation.Nullable
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_AUCTION_TYPE = "auction_type";
  @SerializedName(SERIALIZED_NAME_AUCTION_TYPE)
  @javax.annotation.Nullable
  private Integer auctionType;

  public static final String SERIALIZED_NAME_AUCTION_TYPE_CODE = "auction_type_code";
  @SerializedName(SERIALIZED_NAME_AUCTION_TYPE_CODE)
  @javax.annotation.Nullable
  private String auctionTypeCode;

  public static final String SERIALIZED_NAME_AUCTION_TYPE_TEXT = "auction_type_text";
  @SerializedName(SERIALIZED_NAME_AUCTION_TYPE_TEXT)
  @javax.annotation.Nullable
  private String auctionTypeText;

  public static final String SERIALIZED_NAME_IS_AUCTION_TYPE_OPENING = "is_auction_type_opening";
  @SerializedName(SERIALIZED_NAME_IS_AUCTION_TYPE_OPENING)
  @javax.annotation.Nullable
  private Boolean isAuctionTypeOpening;

  public static final String SERIALIZED_NAME_IS_AUCTION_TYPE_CLOSING = "is_auction_type_closing";
  @SerializedName(SERIALIZED_NAME_IS_AUCTION_TYPE_CLOSING)
  @javax.annotation.Nullable
  private Boolean isAuctionTypeClosing;

  public static final String SERIALIZED_NAME_IS_AUCTION_TYPE_IPO = "is_auction_type_ipo";
  @SerializedName(SERIALIZED_NAME_IS_AUCTION_TYPE_IPO)
  @javax.annotation.Nullable
  private Boolean isAuctionTypeIpo;

  public static final String SERIALIZED_NAME_IS_AUCTION_TYPE_HALT = "is_auction_type_halt";
  @SerializedName(SERIALIZED_NAME_IS_AUCTION_TYPE_HALT)
  @javax.annotation.Nullable
  private Boolean isAuctionTypeHalt;

  public static final String SERIALIZED_NAME_IS_AUCTION_TYPE_VOLATILITY = "is_auction_type_volatility";
  @SerializedName(SERIALIZED_NAME_IS_AUCTION_TYPE_VOLATILITY)
  @javax.annotation.Nullable
  private Boolean isAuctionTypeVolatility;

  public static final String SERIALIZED_NAME_PAIRED_SHARES = "paired_shares";
  @SerializedName(SERIALIZED_NAME_PAIRED_SHARES)
  @javax.annotation.Nullable
  private Integer pairedShares;

  public static final String SERIALIZED_NAME_REFERENCE_PRICE = "reference_price";
  @SerializedName(SERIALIZED_NAME_REFERENCE_PRICE)
  @javax.annotation.Nullable
  private Double referencePrice;

  public static final String SERIALIZED_NAME_INDICATIVE_CLEARING_PRICE = "indicative_clearing_price";
  @SerializedName(SERIALIZED_NAME_INDICATIVE_CLEARING_PRICE)
  @javax.annotation.Nullable
  private Double indicativeClearingPrice;

  public static final String SERIALIZED_NAME_IMBALANCE_SHARES = "imbalance_shares";
  @SerializedName(SERIALIZED_NAME_IMBALANCE_SHARES)
  @javax.annotation.Nullable
  private Integer imbalanceShares;

  public static final String SERIALIZED_NAME_IMBALANCE_SIDE = "imbalance_side";
  @SerializedName(SERIALIZED_NAME_IMBALANCE_SIDE)
  @javax.annotation.Nullable
  private Integer imbalanceSide;

  public static final String SERIALIZED_NAME_IMBALANCE_SIDE_CODE = "imbalance_side_code";
  @SerializedName(SERIALIZED_NAME_IMBALANCE_SIDE_CODE)
  @javax.annotation.Nullable
  private String imbalanceSideCode;

  public static final String SERIALIZED_NAME_IMBALANCE_SIDE_TEXT = "imbalance_side_text";
  @SerializedName(SERIALIZED_NAME_IMBALANCE_SIDE_TEXT)
  @javax.annotation.Nullable
  private String imbalanceSideText;

  public static final String SERIALIZED_NAME_IS_IMBALANCE_SIDE_BUY = "is_imbalance_side_buy";
  @SerializedName(SERIALIZED_NAME_IS_IMBALANCE_SIDE_BUY)
  @javax.annotation.Nullable
  private Boolean isImbalanceSideBuy;

  public static final String SERIALIZED_NAME_IS_IMBALANCE_SIDE_SELL = "is_imbalance_side_sell";
  @SerializedName(SERIALIZED_NAME_IS_IMBALANCE_SIDE_SELL)
  @javax.annotation.Nullable
  private Boolean isImbalanceSideSell;

  public static final String SERIALIZED_NAME_IS_IMBALANCE_SIDE_NONE = "is_imbalance_side_none";
  @SerializedName(SERIALIZED_NAME_IS_IMBALANCE_SIDE_NONE)
  @javax.annotation.Nullable
  private Boolean isImbalanceSideNone;

  public static final String SERIALIZED_NAME_EXTENSION_NUMBER = "extension_number";
  @SerializedName(SERIALIZED_NAME_EXTENSION_NUMBER)
  @javax.annotation.Nullable
  private Integer extensionNumber;

  public static final String SERIALIZED_NAME_SCHEDULED_AUCTION_TIME_SECONDS = "scheduled_auction_time_seconds";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_AUCTION_TIME_SECONDS)
  @javax.annotation.Nullable
  private Integer scheduledAuctionTimeSeconds;

  public static final String SERIALIZED_NAME_SCHEDULED_AUCTION_TIME = "scheduled_auction_time";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_AUCTION_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime scheduledAuctionTime;

  public static final String SERIALIZED_NAME_AUCTION_BOOK_CLEARING_PRICE = "auction_book_clearing_price";
  @SerializedName(SERIALIZED_NAME_AUCTION_BOOK_CLEARING_PRICE)
  @javax.annotation.Nullable
  private Double auctionBookClearingPrice;

  public static final String SERIALIZED_NAME_COLLAR_REFERENCE_PRICE = "collar_reference_price";
  @SerializedName(SERIALIZED_NAME_COLLAR_REFERENCE_PRICE)
  @javax.annotation.Nullable
  private Double collarReferencePrice;

  public static final String SERIALIZED_NAME_LOWER_AUCTION_COLLAR = "lower_auction_collar";
  @SerializedName(SERIALIZED_NAME_LOWER_AUCTION_COLLAR)
  @javax.annotation.Nullable
  private Double lowerAuctionCollar;

  public static final String SERIALIZED_NAME_UPPER_AUCTION_COLLAR = "upper_auction_collar";
  @SerializedName(SERIALIZED_NAME_UPPER_AUCTION_COLLAR)
  @javax.annotation.Nullable
  private Double upperAuctionCollar;

  public AdminAuctionInformationModel() {
  }

  public AdminAuctionInformationModel symbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
    return this;
  }

  /**
   * The stock symbol
   * @return symbol
   */
  @javax.annotation.Nullable
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }


  public AdminAuctionInformationModel timestampNanos(@javax.annotation.Nullable Long timestampNanos) {
    this.timestampNanos = timestampNanos;
    return this;
  }

  /**
   * Original timestamp in nanoseconds since epoch
   * @return timestampNanos
   */
  @javax.annotation.Nullable
  public Long getTimestampNanos() {
    return timestampNanos;
  }

  public void setTimestampNanos(@javax.annotation.Nullable Long timestampNanos) {
    this.timestampNanos = timestampNanos;
  }


  public AdminAuctionInformationModel timestamp(@javax.annotation.Nullable OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Time when the auction data was recorded as DateTime
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(@javax.annotation.Nullable OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  public AdminAuctionInformationModel auctionType(@javax.annotation.Nullable Integer auctionType) {
    this.auctionType = auctionType;
    return this;
  }

  /**
   * Type of auction as byte value
   * @return auctionType
   */
  @javax.annotation.Nullable
  public Integer getAuctionType() {
    return auctionType;
  }

  public void setAuctionType(@javax.annotation.Nullable Integer auctionType) {
    this.auctionType = auctionType;
  }


  public AdminAuctionInformationModel auctionTypeCode(@javax.annotation.Nullable String auctionTypeCode) {
    this.auctionTypeCode = auctionTypeCode;
    return this;
  }

  /**
   * Type of auction as character string
   * @return auctionTypeCode
   */
  @javax.annotation.Nullable
  public String getAuctionTypeCode() {
    return auctionTypeCode;
  }

  public void setAuctionTypeCode(@javax.annotation.Nullable String auctionTypeCode) {
    this.auctionTypeCode = auctionTypeCode;
  }


  public AdminAuctionInformationModel auctionTypeText(@javax.annotation.Nullable String auctionTypeText) {
    this.auctionTypeText = auctionTypeText;
    return this;
  }

  /**
   * Human-readable description of the auction type
   * @return auctionTypeText
   */
  @javax.annotation.Nullable
  public String getAuctionTypeText() {
    return auctionTypeText;
  }

  public void setAuctionTypeText(@javax.annotation.Nullable String auctionTypeText) {
    this.auctionTypeText = auctionTypeText;
  }


  public AdminAuctionInformationModel isAuctionTypeOpening(@javax.annotation.Nullable Boolean isAuctionTypeOpening) {
    this.isAuctionTypeOpening = isAuctionTypeOpening;
    return this;
  }

  /**
   * Indicates if the auction type is &#39;Opening Auction&#39; (&#39;O&#39;/0x4f).
   * @return isAuctionTypeOpening
   */
  @javax.annotation.Nullable
  public Boolean getIsAuctionTypeOpening() {
    return isAuctionTypeOpening;
  }

  public void setIsAuctionTypeOpening(@javax.annotation.Nullable Boolean isAuctionTypeOpening) {
    this.isAuctionTypeOpening = isAuctionTypeOpening;
  }


  public AdminAuctionInformationModel isAuctionTypeClosing(@javax.annotation.Nullable Boolean isAuctionTypeClosing) {
    this.isAuctionTypeClosing = isAuctionTypeClosing;
    return this;
  }

  /**
   * Indicates if the auction type is &#39;Closing Auction&#39; (&#39;C&#39;/0x43).
   * @return isAuctionTypeClosing
   */
  @javax.annotation.Nullable
  public Boolean getIsAuctionTypeClosing() {
    return isAuctionTypeClosing;
  }

  public void setIsAuctionTypeClosing(@javax.annotation.Nullable Boolean isAuctionTypeClosing) {
    this.isAuctionTypeClosing = isAuctionTypeClosing;
  }


  public AdminAuctionInformationModel isAuctionTypeIpo(@javax.annotation.Nullable Boolean isAuctionTypeIpo) {
    this.isAuctionTypeIpo = isAuctionTypeIpo;
    return this;
  }

  /**
   * Indicates if the auction type is &#39;IPO Auction&#39; (&#39;I&#39;/0x49).
   * @return isAuctionTypeIpo
   */
  @javax.annotation.Nullable
  public Boolean getIsAuctionTypeIpo() {
    return isAuctionTypeIpo;
  }

  public void setIsAuctionTypeIpo(@javax.annotation.Nullable Boolean isAuctionTypeIpo) {
    this.isAuctionTypeIpo = isAuctionTypeIpo;
  }


  public AdminAuctionInformationModel isAuctionTypeHalt(@javax.annotation.Nullable Boolean isAuctionTypeHalt) {
    this.isAuctionTypeHalt = isAuctionTypeHalt;
    return this;
  }

  /**
   * Indicates if the auction type is &#39;Halt Auction&#39; (&#39;H&#39;/0x48).
   * @return isAuctionTypeHalt
   */
  @javax.annotation.Nullable
  public Boolean getIsAuctionTypeHalt() {
    return isAuctionTypeHalt;
  }

  public void setIsAuctionTypeHalt(@javax.annotation.Nullable Boolean isAuctionTypeHalt) {
    this.isAuctionTypeHalt = isAuctionTypeHalt;
  }


  public AdminAuctionInformationModel isAuctionTypeVolatility(@javax.annotation.Nullable Boolean isAuctionTypeVolatility) {
    this.isAuctionTypeVolatility = isAuctionTypeVolatility;
    return this;
  }

  /**
   * Indicates if the auction type is &#39;Volatility Auction&#39; (&#39;V&#39;/0x56).
   * @return isAuctionTypeVolatility
   */
  @javax.annotation.Nullable
  public Boolean getIsAuctionTypeVolatility() {
    return isAuctionTypeVolatility;
  }

  public void setIsAuctionTypeVolatility(@javax.annotation.Nullable Boolean isAuctionTypeVolatility) {
    this.isAuctionTypeVolatility = isAuctionTypeVolatility;
  }


  public AdminAuctionInformationModel pairedShares(@javax.annotation.Nullable Integer pairedShares) {
    this.pairedShares = pairedShares;
    return this;
  }

  /**
   * Number of shares paired at the Reference Price
   * @return pairedShares
   */
  @javax.annotation.Nullable
  public Integer getPairedShares() {
    return pairedShares;
  }

  public void setPairedShares(@javax.annotation.Nullable Integer pairedShares) {
    this.pairedShares = pairedShares;
  }


  public AdminAuctionInformationModel referencePrice(@javax.annotation.Nullable Double referencePrice) {
    this.referencePrice = referencePrice;
    return this;
  }

  /**
   * Reference price as decimal
   * @return referencePrice
   */
  @javax.annotation.Nullable
  public Double getReferencePrice() {
    return referencePrice;
  }

  public void setReferencePrice(@javax.annotation.Nullable Double referencePrice) {
    this.referencePrice = referencePrice;
  }


  public AdminAuctionInformationModel indicativeClearingPrice(@javax.annotation.Nullable Double indicativeClearingPrice) {
    this.indicativeClearingPrice = indicativeClearingPrice;
    return this;
  }

  /**
   * Indicative clearing price as decimal
   * @return indicativeClearingPrice
   */
  @javax.annotation.Nullable
  public Double getIndicativeClearingPrice() {
    return indicativeClearingPrice;
  }

  public void setIndicativeClearingPrice(@javax.annotation.Nullable Double indicativeClearingPrice) {
    this.indicativeClearingPrice = indicativeClearingPrice;
  }


  public AdminAuctionInformationModel imbalanceShares(@javax.annotation.Nullable Integer imbalanceShares) {
    this.imbalanceShares = imbalanceShares;
    return this;
  }

  /**
   * Number of unpaired shares at the Reference Price
   * @return imbalanceShares
   */
  @javax.annotation.Nullable
  public Integer getImbalanceShares() {
    return imbalanceShares;
  }

  public void setImbalanceShares(@javax.annotation.Nullable Integer imbalanceShares) {
    this.imbalanceShares = imbalanceShares;
  }


  public AdminAuctionInformationModel imbalanceSide(@javax.annotation.Nullable Integer imbalanceSide) {
    this.imbalanceSide = imbalanceSide;
    return this;
  }

  /**
   * Side of the imbalance as byte value
   * @return imbalanceSide
   */
  @javax.annotation.Nullable
  public Integer getImbalanceSide() {
    return imbalanceSide;
  }

  public void setImbalanceSide(@javax.annotation.Nullable Integer imbalanceSide) {
    this.imbalanceSide = imbalanceSide;
  }


  public AdminAuctionInformationModel imbalanceSideCode(@javax.annotation.Nullable String imbalanceSideCode) {
    this.imbalanceSideCode = imbalanceSideCode;
    return this;
  }

  /**
   * Side of the imbalance as character string
   * @return imbalanceSideCode
   */
  @javax.annotation.Nullable
  public String getImbalanceSideCode() {
    return imbalanceSideCode;
  }

  public void setImbalanceSideCode(@javax.annotation.Nullable String imbalanceSideCode) {
    this.imbalanceSideCode = imbalanceSideCode;
  }


  public AdminAuctionInformationModel imbalanceSideText(@javax.annotation.Nullable String imbalanceSideText) {
    this.imbalanceSideText = imbalanceSideText;
    return this;
  }

  /**
   * Human-readable description of the imbalance side
   * @return imbalanceSideText
   */
  @javax.annotation.Nullable
  public String getImbalanceSideText() {
    return imbalanceSideText;
  }

  public void setImbalanceSideText(@javax.annotation.Nullable String imbalanceSideText) {
    this.imbalanceSideText = imbalanceSideText;
  }


  public AdminAuctionInformationModel isImbalanceSideBuy(@javax.annotation.Nullable Boolean isImbalanceSideBuy) {
    this.isImbalanceSideBuy = isImbalanceSideBuy;
    return this;
  }

  /**
   * Indicates if there is a buy-side imbalance (&#39;B&#39;/0x42).
   * @return isImbalanceSideBuy
   */
  @javax.annotation.Nullable
  public Boolean getIsImbalanceSideBuy() {
    return isImbalanceSideBuy;
  }

  public void setIsImbalanceSideBuy(@javax.annotation.Nullable Boolean isImbalanceSideBuy) {
    this.isImbalanceSideBuy = isImbalanceSideBuy;
  }


  public AdminAuctionInformationModel isImbalanceSideSell(@javax.annotation.Nullable Boolean isImbalanceSideSell) {
    this.isImbalanceSideSell = isImbalanceSideSell;
    return this;
  }

  /**
   * Indicates if there is a sell-side imbalance (&#39;S&#39;/0x53).
   * @return isImbalanceSideSell
   */
  @javax.annotation.Nullable
  public Boolean getIsImbalanceSideSell() {
    return isImbalanceSideSell;
  }

  public void setIsImbalanceSideSell(@javax.annotation.Nullable Boolean isImbalanceSideSell) {
    this.isImbalanceSideSell = isImbalanceSideSell;
  }


  public AdminAuctionInformationModel isImbalanceSideNone(@javax.annotation.Nullable Boolean isImbalanceSideNone) {
    this.isImbalanceSideNone = isImbalanceSideNone;
    return this;
  }

  /**
   * Indicates if there is no imbalance (&#39;N&#39;/0x4e).
   * @return isImbalanceSideNone
   */
  @javax.annotation.Nullable
  public Boolean getIsImbalanceSideNone() {
    return isImbalanceSideNone;
  }

  public void setIsImbalanceSideNone(@javax.annotation.Nullable Boolean isImbalanceSideNone) {
    this.isImbalanceSideNone = isImbalanceSideNone;
  }


  public AdminAuctionInformationModel extensionNumber(@javax.annotation.Nullable Integer extensionNumber) {
    this.extensionNumber = extensionNumber;
    return this;
  }

  /**
   * Number of extensions to the auction
   * @return extensionNumber
   */
  @javax.annotation.Nullable
  public Integer getExtensionNumber() {
    return extensionNumber;
  }

  public void setExtensionNumber(@javax.annotation.Nullable Integer extensionNumber) {
    this.extensionNumber = extensionNumber;
  }


  public AdminAuctionInformationModel scheduledAuctionTimeSeconds(@javax.annotation.Nullable Integer scheduledAuctionTimeSeconds) {
    this.scheduledAuctionTimeSeconds = scheduledAuctionTimeSeconds;
    return this;
  }

  /**
   * Scheduled auction time in seconds since epoch
   * @return scheduledAuctionTimeSeconds
   */
  @javax.annotation.Nullable
  public Integer getScheduledAuctionTimeSeconds() {
    return scheduledAuctionTimeSeconds;
  }

  public void setScheduledAuctionTimeSeconds(@javax.annotation.Nullable Integer scheduledAuctionTimeSeconds) {
    this.scheduledAuctionTimeSeconds = scheduledAuctionTimeSeconds;
  }


  public AdminAuctionInformationModel scheduledAuctionTime(@javax.annotation.Nullable OffsetDateTime scheduledAuctionTime) {
    this.scheduledAuctionTime = scheduledAuctionTime;
    return this;
  }

  /**
   * Scheduled time for the auction as DateTime
   * @return scheduledAuctionTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScheduledAuctionTime() {
    return scheduledAuctionTime;
  }

  public void setScheduledAuctionTime(@javax.annotation.Nullable OffsetDateTime scheduledAuctionTime) {
    this.scheduledAuctionTime = scheduledAuctionTime;
  }


  public AdminAuctionInformationModel auctionBookClearingPrice(@javax.annotation.Nullable Double auctionBookClearingPrice) {
    this.auctionBookClearingPrice = auctionBookClearingPrice;
    return this;
  }

  /**
   * Auction book clearing price as decimal
   * @return auctionBookClearingPrice
   */
  @javax.annotation.Nullable
  public Double getAuctionBookClearingPrice() {
    return auctionBookClearingPrice;
  }

  public void setAuctionBookClearingPrice(@javax.annotation.Nullable Double auctionBookClearingPrice) {
    this.auctionBookClearingPrice = auctionBookClearingPrice;
  }


  public AdminAuctionInformationModel collarReferencePrice(@javax.annotation.Nullable Double collarReferencePrice) {
    this.collarReferencePrice = collarReferencePrice;
    return this;
  }

  /**
   * Collar reference price as decimal
   * @return collarReferencePrice
   */
  @javax.annotation.Nullable
  public Double getCollarReferencePrice() {
    return collarReferencePrice;
  }

  public void setCollarReferencePrice(@javax.annotation.Nullable Double collarReferencePrice) {
    this.collarReferencePrice = collarReferencePrice;
  }


  public AdminAuctionInformationModel lowerAuctionCollar(@javax.annotation.Nullable Double lowerAuctionCollar) {
    this.lowerAuctionCollar = lowerAuctionCollar;
    return this;
  }

  /**
   * Lower auction collar as decimal
   * @return lowerAuctionCollar
   */
  @javax.annotation.Nullable
  public Double getLowerAuctionCollar() {
    return lowerAuctionCollar;
  }

  public void setLowerAuctionCollar(@javax.annotation.Nullable Double lowerAuctionCollar) {
    this.lowerAuctionCollar = lowerAuctionCollar;
  }


  public AdminAuctionInformationModel upperAuctionCollar(@javax.annotation.Nullable Double upperAuctionCollar) {
    this.upperAuctionCollar = upperAuctionCollar;
    return this;
  }

  /**
   * Upper auction collar as decimal
   * @return upperAuctionCollar
   */
  @javax.annotation.Nullable
  public Double getUpperAuctionCollar() {
    return upperAuctionCollar;
  }

  public void setUpperAuctionCollar(@javax.annotation.Nullable Double upperAuctionCollar) {
    this.upperAuctionCollar = upperAuctionCollar;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminAuctionInformationModel adminAuctionInformationModel = (AdminAuctionInformationModel) o;
    return Objects.equals(this.symbol, adminAuctionInformationModel.symbol) &&
        Objects.equals(this.timestampNanos, adminAuctionInformationModel.timestampNanos) &&
        Objects.equals(this.timestamp, adminAuctionInformationModel.timestamp) &&
        Objects.equals(this.auctionType, adminAuctionInformationModel.auctionType) &&
        Objects.equals(this.auctionTypeCode, adminAuctionInformationModel.auctionTypeCode) &&
        Objects.equals(this.auctionTypeText, adminAuctionInformationModel.auctionTypeText) &&
        Objects.equals(this.isAuctionTypeOpening, adminAuctionInformationModel.isAuctionTypeOpening) &&
        Objects.equals(this.isAuctionTypeClosing, adminAuctionInformationModel.isAuctionTypeClosing) &&
        Objects.equals(this.isAuctionTypeIpo, adminAuctionInformationModel.isAuctionTypeIpo) &&
        Objects.equals(this.isAuctionTypeHalt, adminAuctionInformationModel.isAuctionTypeHalt) &&
        Objects.equals(this.isAuctionTypeVolatility, adminAuctionInformationModel.isAuctionTypeVolatility) &&
        Objects.equals(this.pairedShares, adminAuctionInformationModel.pairedShares) &&
        Objects.equals(this.referencePrice, adminAuctionInformationModel.referencePrice) &&
        Objects.equals(this.indicativeClearingPrice, adminAuctionInformationModel.indicativeClearingPrice) &&
        Objects.equals(this.imbalanceShares, adminAuctionInformationModel.imbalanceShares) &&
        Objects.equals(this.imbalanceSide, adminAuctionInformationModel.imbalanceSide) &&
        Objects.equals(this.imbalanceSideCode, adminAuctionInformationModel.imbalanceSideCode) &&
        Objects.equals(this.imbalanceSideText, adminAuctionInformationModel.imbalanceSideText) &&
        Objects.equals(this.isImbalanceSideBuy, adminAuctionInformationModel.isImbalanceSideBuy) &&
        Objects.equals(this.isImbalanceSideSell, adminAuctionInformationModel.isImbalanceSideSell) &&
        Objects.equals(this.isImbalanceSideNone, adminAuctionInformationModel.isImbalanceSideNone) &&
        Objects.equals(this.extensionNumber, adminAuctionInformationModel.extensionNumber) &&
        Objects.equals(this.scheduledAuctionTimeSeconds, adminAuctionInformationModel.scheduledAuctionTimeSeconds) &&
        Objects.equals(this.scheduledAuctionTime, adminAuctionInformationModel.scheduledAuctionTime) &&
        Objects.equals(this.auctionBookClearingPrice, adminAuctionInformationModel.auctionBookClearingPrice) &&
        Objects.equals(this.collarReferencePrice, adminAuctionInformationModel.collarReferencePrice) &&
        Objects.equals(this.lowerAuctionCollar, adminAuctionInformationModel.lowerAuctionCollar) &&
        Objects.equals(this.upperAuctionCollar, adminAuctionInformationModel.upperAuctionCollar);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, timestampNanos, timestamp, auctionType, auctionTypeCode, auctionTypeText, isAuctionTypeOpening, isAuctionTypeClosing, isAuctionTypeIpo, isAuctionTypeHalt, isAuctionTypeVolatility, pairedShares, referencePrice, indicativeClearingPrice, imbalanceShares, imbalanceSide, imbalanceSideCode, imbalanceSideText, isImbalanceSideBuy, isImbalanceSideSell, isImbalanceSideNone, extensionNumber, scheduledAuctionTimeSeconds, scheduledAuctionTime, auctionBookClearingPrice, collarReferencePrice, lowerAuctionCollar, upperAuctionCollar);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminAuctionInformationModel {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    timestampNanos: ").append(toIndentedString(timestampNanos)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    auctionType: ").append(toIndentedString(auctionType)).append("\n");
    sb.append("    auctionTypeCode: ").append(toIndentedString(auctionTypeCode)).append("\n");
    sb.append("    auctionTypeText: ").append(toIndentedString(auctionTypeText)).append("\n");
    sb.append("    isAuctionTypeOpening: ").append(toIndentedString(isAuctionTypeOpening)).append("\n");
    sb.append("    isAuctionTypeClosing: ").append(toIndentedString(isAuctionTypeClosing)).append("\n");
    sb.append("    isAuctionTypeIpo: ").append(toIndentedString(isAuctionTypeIpo)).append("\n");
    sb.append("    isAuctionTypeHalt: ").append(toIndentedString(isAuctionTypeHalt)).append("\n");
    sb.append("    isAuctionTypeVolatility: ").append(toIndentedString(isAuctionTypeVolatility)).append("\n");
    sb.append("    pairedShares: ").append(toIndentedString(pairedShares)).append("\n");
    sb.append("    referencePrice: ").append(toIndentedString(referencePrice)).append("\n");
    sb.append("    indicativeClearingPrice: ").append(toIndentedString(indicativeClearingPrice)).append("\n");
    sb.append("    imbalanceShares: ").append(toIndentedString(imbalanceShares)).append("\n");
    sb.append("    imbalanceSide: ").append(toIndentedString(imbalanceSide)).append("\n");
    sb.append("    imbalanceSideCode: ").append(toIndentedString(imbalanceSideCode)).append("\n");
    sb.append("    imbalanceSideText: ").append(toIndentedString(imbalanceSideText)).append("\n");
    sb.append("    isImbalanceSideBuy: ").append(toIndentedString(isImbalanceSideBuy)).append("\n");
    sb.append("    isImbalanceSideSell: ").append(toIndentedString(isImbalanceSideSell)).append("\n");
    sb.append("    isImbalanceSideNone: ").append(toIndentedString(isImbalanceSideNone)).append("\n");
    sb.append("    extensionNumber: ").append(toIndentedString(extensionNumber)).append("\n");
    sb.append("    scheduledAuctionTimeSeconds: ").append(toIndentedString(scheduledAuctionTimeSeconds)).append("\n");
    sb.append("    scheduledAuctionTime: ").append(toIndentedString(scheduledAuctionTime)).append("\n");
    sb.append("    auctionBookClearingPrice: ").append(toIndentedString(auctionBookClearingPrice)).append("\n");
    sb.append("    collarReferencePrice: ").append(toIndentedString(collarReferencePrice)).append("\n");
    sb.append("    lowerAuctionCollar: ").append(toIndentedString(lowerAuctionCollar)).append("\n");
    sb.append("    upperAuctionCollar: ").append(toIndentedString(upperAuctionCollar)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("symbol", "timestamp_nanos", "timestamp", "auction_type", "auction_type_code", "auction_type_text", "is_auction_type_opening", "is_auction_type_closing", "is_auction_type_ipo", "is_auction_type_halt", "is_auction_type_volatility", "paired_shares", "reference_price", "indicative_clearing_price", "imbalance_shares", "imbalance_side", "imbalance_side_code", "imbalance_side_text", "is_imbalance_side_buy", "is_imbalance_side_sell", "is_imbalance_side_none", "extension_number", "scheduled_auction_time_seconds", "scheduled_auction_time", "auction_book_clearing_price", "collar_reference_price", "lower_auction_collar", "upper_auction_collar"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdminAuctionInformationModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdminAuctionInformationModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdminAuctionInformationModel is not found in the empty JSON string", AdminAuctionInformationModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdminAuctionInformationModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdminAuctionInformationModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("symbol") != null && !jsonObj.get("symbol").isJsonNull()) && !jsonObj.get("symbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `symbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol").toString()));
      }
      if ((jsonObj.get("auction_type_code") != null && !jsonObj.get("auction_type_code").isJsonNull()) && !jsonObj.get("auction_type_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auction_type_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auction_type_code").toString()));
      }
      if ((jsonObj.get("auction_type_text") != null && !jsonObj.get("auction_type_text").isJsonNull()) && !jsonObj.get("auction_type_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auction_type_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auction_type_text").toString()));
      }
      if ((jsonObj.get("imbalance_side_code") != null && !jsonObj.get("imbalance_side_code").isJsonNull()) && !jsonObj.get("imbalance_side_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imbalance_side_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imbalance_side_code").toString()));
      }
      if ((jsonObj.get("imbalance_side_text") != null && !jsonObj.get("imbalance_side_text").isJsonNull()) && !jsonObj.get("imbalance_side_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imbalance_side_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imbalance_side_text").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdminAuctionInformationModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdminAuctionInformationModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdminAuctionInformationModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdminAuctionInformationModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AdminAuctionInformationModel>() {
           @Override
           public void write(JsonWriter out, AdminAuctionInformationModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdminAuctionInformationModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdminAuctionInformationModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdminAuctionInformationModel
   * @throws IOException if the JSON string is invalid with respect to AdminAuctionInformationModel
   */
  public static AdminAuctionInformationModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdminAuctionInformationModel.class);
  }

  /**
   * Convert an instance of AdminAuctionInformationModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

