/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Locale;

import org.openapitools.client.JSON;

/**
 * Represents a timeseries item with price and volume information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-15T06:10:31.348068192Z[Etc/UTC]", comments = "Generator version: 7.16.0")
public class OHLCVExchangeTimeseriesItem {
  public static final String SERIALIZED_NAME_TIME_PERIOD_START = "time_period_start";
  @SerializedName(SERIALIZED_NAME_TIME_PERIOD_START)
  @javax.annotation.Nullable
  private OffsetDateTime timePeriodStart;

  public static final String SERIALIZED_NAME_TIME_PERIOD_END = "time_period_end";
  @SerializedName(SERIALIZED_NAME_TIME_PERIOD_END)
  @javax.annotation.Nullable
  private OffsetDateTime timePeriodEnd;

  public static final String SERIALIZED_NAME_TIME_OPEN = "time_open";
  @SerializedName(SERIALIZED_NAME_TIME_OPEN)
  @javax.annotation.Nullable
  private OffsetDateTime timeOpen;

  public static final String SERIALIZED_NAME_TIME_CLOSE = "time_close";
  @SerializedName(SERIALIZED_NAME_TIME_CLOSE)
  @javax.annotation.Nullable
  private OffsetDateTime timeClose;

  public static final String SERIALIZED_NAME_PRICE_OPEN = "price_open";
  @SerializedName(SERIALIZED_NAME_PRICE_OPEN)
  @javax.annotation.Nullable
  private Double priceOpen;

  public static final String SERIALIZED_NAME_PRICE_HIGH = "price_high";
  @SerializedName(SERIALIZED_NAME_PRICE_HIGH)
  @javax.annotation.Nullable
  private Double priceHigh;

  public static final String SERIALIZED_NAME_PRICE_LOW = "price_low";
  @SerializedName(SERIALIZED_NAME_PRICE_LOW)
  @javax.annotation.Nullable
  private Double priceLow;

  public static final String SERIALIZED_NAME_PRICE_CLOSE = "price_close";
  @SerializedName(SERIALIZED_NAME_PRICE_CLOSE)
  @javax.annotation.Nullable
  private Double priceClose;

  public static final String SERIALIZED_NAME_VOLUME_TRADED = "volume_traded";
  @SerializedName(SERIALIZED_NAME_VOLUME_TRADED)
  @javax.annotation.Nullable
  private Double volumeTraded;

  public static final String SERIALIZED_NAME_TRADES_COUNT = "trades_count";
  @SerializedName(SERIALIZED_NAME_TRADES_COUNT)
  @javax.annotation.Nullable
  private Long tradesCount;

  public static final String SERIALIZED_NAME_SYMBOL_ID_EXCHANGE = "symbol_id_exchange";
  @SerializedName(SERIALIZED_NAME_SYMBOL_ID_EXCHANGE)
  @javax.annotation.Nullable
  private String symbolIdExchange;

  public OHLCVExchangeTimeseriesItem() {
  }

  public OHLCVExchangeTimeseriesItem timePeriodStart(@javax.annotation.Nullable OffsetDateTime timePeriodStart) {
    this.timePeriodStart = timePeriodStart;
    return this;
  }

  /**
   * Gets or sets the start time of the time period.
   * @return timePeriodStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimePeriodStart() {
    return timePeriodStart;
  }

  public void setTimePeriodStart(@javax.annotation.Nullable OffsetDateTime timePeriodStart) {
    this.timePeriodStart = timePeriodStart;
  }


  public OHLCVExchangeTimeseriesItem timePeriodEnd(@javax.annotation.Nullable OffsetDateTime timePeriodEnd) {
    this.timePeriodEnd = timePeriodEnd;
    return this;
  }

  /**
   * Gets or sets the end time of the time period.
   * @return timePeriodEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimePeriodEnd() {
    return timePeriodEnd;
  }

  public void setTimePeriodEnd(@javax.annotation.Nullable OffsetDateTime timePeriodEnd) {
    this.timePeriodEnd = timePeriodEnd;
  }


  public OHLCVExchangeTimeseriesItem timeOpen(@javax.annotation.Nullable OffsetDateTime timeOpen) {
    this.timeOpen = timeOpen;
    return this;
  }

  /**
   * Gets or sets the time when the price opened.
   * @return timeOpen
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeOpen() {
    return timeOpen;
  }

  public void setTimeOpen(@javax.annotation.Nullable OffsetDateTime timeOpen) {
    this.timeOpen = timeOpen;
  }


  public OHLCVExchangeTimeseriesItem timeClose(@javax.annotation.Nullable OffsetDateTime timeClose) {
    this.timeClose = timeClose;
    return this;
  }

  /**
   * Gets or sets the time when the price closed.
   * @return timeClose
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeClose() {
    return timeClose;
  }

  public void setTimeClose(@javax.annotation.Nullable OffsetDateTime timeClose) {
    this.timeClose = timeClose;
  }


  public OHLCVExchangeTimeseriesItem priceOpen(@javax.annotation.Nullable Double priceOpen) {
    this.priceOpen = priceOpen;
    return this;
  }

  /**
   * Gets or sets the opening price.
   * @return priceOpen
   */
  @javax.annotation.Nullable
  public Double getPriceOpen() {
    return priceOpen;
  }

  public void setPriceOpen(@javax.annotation.Nullable Double priceOpen) {
    this.priceOpen = priceOpen;
  }


  public OHLCVExchangeTimeseriesItem priceHigh(@javax.annotation.Nullable Double priceHigh) {
    this.priceHigh = priceHigh;
    return this;
  }

  /**
   * Gets or sets the highest price during the time period.
   * @return priceHigh
   */
  @javax.annotation.Nullable
  public Double getPriceHigh() {
    return priceHigh;
  }

  public void setPriceHigh(@javax.annotation.Nullable Double priceHigh) {
    this.priceHigh = priceHigh;
  }


  public OHLCVExchangeTimeseriesItem priceLow(@javax.annotation.Nullable Double priceLow) {
    this.priceLow = priceLow;
    return this;
  }

  /**
   * Gets or sets the lowest price during the time period.
   * @return priceLow
   */
  @javax.annotation.Nullable
  public Double getPriceLow() {
    return priceLow;
  }

  public void setPriceLow(@javax.annotation.Nullable Double priceLow) {
    this.priceLow = priceLow;
  }


  public OHLCVExchangeTimeseriesItem priceClose(@javax.annotation.Nullable Double priceClose) {
    this.priceClose = priceClose;
    return this;
  }

  /**
   * Gets or sets the closing price.
   * @return priceClose
   */
  @javax.annotation.Nullable
  public Double getPriceClose() {
    return priceClose;
  }

  public void setPriceClose(@javax.annotation.Nullable Double priceClose) {
    this.priceClose = priceClose;
  }


  public OHLCVExchangeTimeseriesItem volumeTraded(@javax.annotation.Nullable Double volumeTraded) {
    this.volumeTraded = volumeTraded;
    return this;
  }

  /**
   * Gets or sets the total volume traded during the time period.
   * @return volumeTraded
   */
  @javax.annotation.Nullable
  public Double getVolumeTraded() {
    return volumeTraded;
  }

  public void setVolumeTraded(@javax.annotation.Nullable Double volumeTraded) {
    this.volumeTraded = volumeTraded;
  }


  public OHLCVExchangeTimeseriesItem tradesCount(@javax.annotation.Nullable Long tradesCount) {
    this.tradesCount = tradesCount;
    return this;
  }

  /**
   * Gets or sets the number of trades executed during the time period.
   * @return tradesCount
   */
  @javax.annotation.Nullable
  public Long getTradesCount() {
    return tradesCount;
  }

  public void setTradesCount(@javax.annotation.Nullable Long tradesCount) {
    this.tradesCount = tradesCount;
  }


  public OHLCVExchangeTimeseriesItem symbolIdExchange(@javax.annotation.Nullable String symbolIdExchange) {
    this.symbolIdExchange = symbolIdExchange;
    return this;
  }

  /**
   * Get symbolIdExchange
   * @return symbolIdExchange
   */
  @javax.annotation.Nullable
  public String getSymbolIdExchange() {
    return symbolIdExchange;
  }

  public void setSymbolIdExchange(@javax.annotation.Nullable String symbolIdExchange) {
    this.symbolIdExchange = symbolIdExchange;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OHLCVExchangeTimeseriesItem ohLCVExchangeTimeseriesItem = (OHLCVExchangeTimeseriesItem) o;
    return Objects.equals(this.timePeriodStart, ohLCVExchangeTimeseriesItem.timePeriodStart) &&
        Objects.equals(this.timePeriodEnd, ohLCVExchangeTimeseriesItem.timePeriodEnd) &&
        Objects.equals(this.timeOpen, ohLCVExchangeTimeseriesItem.timeOpen) &&
        Objects.equals(this.timeClose, ohLCVExchangeTimeseriesItem.timeClose) &&
        Objects.equals(this.priceOpen, ohLCVExchangeTimeseriesItem.priceOpen) &&
        Objects.equals(this.priceHigh, ohLCVExchangeTimeseriesItem.priceHigh) &&
        Objects.equals(this.priceLow, ohLCVExchangeTimeseriesItem.priceLow) &&
        Objects.equals(this.priceClose, ohLCVExchangeTimeseriesItem.priceClose) &&
        Objects.equals(this.volumeTraded, ohLCVExchangeTimeseriesItem.volumeTraded) &&
        Objects.equals(this.tradesCount, ohLCVExchangeTimeseriesItem.tradesCount) &&
        Objects.equals(this.symbolIdExchange, ohLCVExchangeTimeseriesItem.symbolIdExchange);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(timePeriodStart, timePeriodEnd, timeOpen, timeClose, priceOpen, priceHigh, priceLow, priceClose, volumeTraded, tradesCount, symbolIdExchange);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OHLCVExchangeTimeseriesItem {\n");
    sb.append("    timePeriodStart: ").append(toIndentedString(timePeriodStart)).append("\n");
    sb.append("    timePeriodEnd: ").append(toIndentedString(timePeriodEnd)).append("\n");
    sb.append("    timeOpen: ").append(toIndentedString(timeOpen)).append("\n");
    sb.append("    timeClose: ").append(toIndentedString(timeClose)).append("\n");
    sb.append("    priceOpen: ").append(toIndentedString(priceOpen)).append("\n");
    sb.append("    priceHigh: ").append(toIndentedString(priceHigh)).append("\n");
    sb.append("    priceLow: ").append(toIndentedString(priceLow)).append("\n");
    sb.append("    priceClose: ").append(toIndentedString(priceClose)).append("\n");
    sb.append("    volumeTraded: ").append(toIndentedString(volumeTraded)).append("\n");
    sb.append("    tradesCount: ").append(toIndentedString(tradesCount)).append("\n");
    sb.append("    symbolIdExchange: ").append(toIndentedString(symbolIdExchange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("time_period_start", "time_period_end", "time_open", "time_close", "price_open", "price_high", "price_low", "price_close", "volume_traded", "trades_count", "symbol_id_exchange"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OHLCVExchangeTimeseriesItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OHLCVExchangeTimeseriesItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The required field(s) %s in OHLCVExchangeTimeseriesItem is not found in the empty JSON string", OHLCVExchangeTimeseriesItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OHLCVExchangeTimeseriesItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The field `%s` in the JSON string is not defined in the `OHLCVExchangeTimeseriesItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("symbol_id_exchange") != null && !jsonObj.get("symbol_id_exchange").isJsonNull()) && !jsonObj.get("symbol_id_exchange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `symbol_id_exchange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol_id_exchange").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OHLCVExchangeTimeseriesItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OHLCVExchangeTimeseriesItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OHLCVExchangeTimeseriesItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OHLCVExchangeTimeseriesItem.class));

       return (TypeAdapter<T>) new TypeAdapter<OHLCVExchangeTimeseriesItem>() {
           @Override
           public void write(JsonWriter out, OHLCVExchangeTimeseriesItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OHLCVExchangeTimeseriesItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OHLCVExchangeTimeseriesItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OHLCVExchangeTimeseriesItem
   * @throws IOException if the JSON string is invalid with respect to OHLCVExchangeTimeseriesItem
   */
  public static OHLCVExchangeTimeseriesItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OHLCVExchangeTimeseriesItem.class);
  }

  /**
   * Convert an instance of OHLCVExchangeTimeseriesItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

