/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Locale;

import org.openapitools.client.JSON;

/**
 * Represents the response DTO for quote update information
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-15T06:10:31.348068192Z[Etc/UTC]", comments = "Generator version: 7.16.0")
public class Level1QuoteUpdateModel {
  public static final String SERIALIZED_NAME_SYMBOL = "symbol";
  @SerializedName(SERIALIZED_NAME_SYMBOL)
  @javax.annotation.Nullable
  private String symbol;

  public static final String SERIALIZED_NAME_TIMESTAMP_NANOS = "timestamp_nanos";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP_NANOS)
  @javax.annotation.Nullable
  private Long timestampNanos;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  @javax.annotation.Nullable
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_IS_SYMBOL_AVAILABLE = "is_symbol_available";
  @SerializedName(SERIALIZED_NAME_IS_SYMBOL_AVAILABLE)
  @javax.annotation.Nullable
  private Boolean isSymbolAvailable;

  public static final String SERIALIZED_NAME_IS_PRE_POST_MARKET_SESSION = "is_pre_post_market_session";
  @SerializedName(SERIALIZED_NAME_IS_PRE_POST_MARKET_SESSION)
  @javax.annotation.Nullable
  private Boolean isPrePostMarketSession;

  public static final String SERIALIZED_NAME_ASK_SIZE = "ask_size";
  @SerializedName(SERIALIZED_NAME_ASK_SIZE)
  @javax.annotation.Nullable
  private Integer askSize;

  public static final String SERIALIZED_NAME_ASK_PRICE = "ask_price";
  @SerializedName(SERIALIZED_NAME_ASK_PRICE)
  @javax.annotation.Nullable
  private Double askPrice;

  public static final String SERIALIZED_NAME_BID_PRICE = "bid_price";
  @SerializedName(SERIALIZED_NAME_BID_PRICE)
  @javax.annotation.Nullable
  private Double bidPrice;

  public static final String SERIALIZED_NAME_BID_SIZE = "bid_size";
  @SerializedName(SERIALIZED_NAME_BID_SIZE)
  @javax.annotation.Nullable
  private Integer bidSize;

  public Level1QuoteUpdateModel() {
  }

  public Level1QuoteUpdateModel symbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
    return this;
  }

  /**
   * The stock symbol
   * @return symbol
   */
  @javax.annotation.Nullable
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }


  public Level1QuoteUpdateModel timestampNanos(@javax.annotation.Nullable Long timestampNanos) {
    this.timestampNanos = timestampNanos;
    return this;
  }

  /**
   * Original timestamp in nanoseconds since epoch
   * @return timestampNanos
   */
  @javax.annotation.Nullable
  public Long getTimestampNanos() {
    return timestampNanos;
  }

  public void setTimestampNanos(@javax.annotation.Nullable Long timestampNanos) {
    this.timestampNanos = timestampNanos;
  }


  public Level1QuoteUpdateModel timestamp(@javax.annotation.Nullable OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Time when the quote update was recorded as DateTime
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(@javax.annotation.Nullable OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  public Level1QuoteUpdateModel isSymbolAvailable(@javax.annotation.Nullable Boolean isSymbolAvailable) {
    this.isSymbolAvailable = isSymbolAvailable;
    return this;
  }

  /**
   * Gets whether the symbol is available for trading True if active, False if halted, paused, or otherwise not available
   * @return isSymbolAvailable
   */
  @javax.annotation.Nullable
  public Boolean getIsSymbolAvailable() {
    return isSymbolAvailable;
  }

  public void setIsSymbolAvailable(@javax.annotation.Nullable Boolean isSymbolAvailable) {
    this.isSymbolAvailable = isSymbolAvailable;
  }


  public Level1QuoteUpdateModel isPrePostMarketSession(@javax.annotation.Nullable Boolean isPrePostMarketSession) {
    this.isPrePostMarketSession = isPrePostMarketSession;
    return this;
  }

  /**
   * Gets whether the market session is regular or pre/post-market True if pre/post-market session, False if regular market session
   * @return isPrePostMarketSession
   */
  @javax.annotation.Nullable
  public Boolean getIsPrePostMarketSession() {
    return isPrePostMarketSession;
  }

  public void setIsPrePostMarketSession(@javax.annotation.Nullable Boolean isPrePostMarketSession) {
    this.isPrePostMarketSession = isPrePostMarketSession;
  }


  public Level1QuoteUpdateModel askSize(@javax.annotation.Nullable Integer askSize) {
    this.askSize = askSize;
    return this;
  }

  /**
   * Ask size in number of shares
   * @return askSize
   */
  @javax.annotation.Nullable
  public Integer getAskSize() {
    return askSize;
  }

  public void setAskSize(@javax.annotation.Nullable Integer askSize) {
    this.askSize = askSize;
  }


  public Level1QuoteUpdateModel askPrice(@javax.annotation.Nullable Double askPrice) {
    this.askPrice = askPrice;
    return this;
  }

  /**
   * Ask price as decimal
   * @return askPrice
   */
  @javax.annotation.Nullable
  public Double getAskPrice() {
    return askPrice;
  }

  public void setAskPrice(@javax.annotation.Nullable Double askPrice) {
    this.askPrice = askPrice;
  }


  public Level1QuoteUpdateModel bidPrice(@javax.annotation.Nullable Double bidPrice) {
    this.bidPrice = bidPrice;
    return this;
  }

  /**
   * Bid price as decimal
   * @return bidPrice
   */
  @javax.annotation.Nullable
  public Double getBidPrice() {
    return bidPrice;
  }

  public void setBidPrice(@javax.annotation.Nullable Double bidPrice) {
    this.bidPrice = bidPrice;
  }


  public Level1QuoteUpdateModel bidSize(@javax.annotation.Nullable Integer bidSize) {
    this.bidSize = bidSize;
    return this;
  }

  /**
   * Bid size in number of shares
   * @return bidSize
   */
  @javax.annotation.Nullable
  public Integer getBidSize() {
    return bidSize;
  }

  public void setBidSize(@javax.annotation.Nullable Integer bidSize) {
    this.bidSize = bidSize;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Level1QuoteUpdateModel level1QuoteUpdateModel = (Level1QuoteUpdateModel) o;
    return Objects.equals(this.symbol, level1QuoteUpdateModel.symbol) &&
        Objects.equals(this.timestampNanos, level1QuoteUpdateModel.timestampNanos) &&
        Objects.equals(this.timestamp, level1QuoteUpdateModel.timestamp) &&
        Objects.equals(this.isSymbolAvailable, level1QuoteUpdateModel.isSymbolAvailable) &&
        Objects.equals(this.isPrePostMarketSession, level1QuoteUpdateModel.isPrePostMarketSession) &&
        Objects.equals(this.askSize, level1QuoteUpdateModel.askSize) &&
        Objects.equals(this.askPrice, level1QuoteUpdateModel.askPrice) &&
        Objects.equals(this.bidPrice, level1QuoteUpdateModel.bidPrice) &&
        Objects.equals(this.bidSize, level1QuoteUpdateModel.bidSize);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, timestampNanos, timestamp, isSymbolAvailable, isPrePostMarketSession, askSize, askPrice, bidPrice, bidSize);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Level1QuoteUpdateModel {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    timestampNanos: ").append(toIndentedString(timestampNanos)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    isSymbolAvailable: ").append(toIndentedString(isSymbolAvailable)).append("\n");
    sb.append("    isPrePostMarketSession: ").append(toIndentedString(isPrePostMarketSession)).append("\n");
    sb.append("    askSize: ").append(toIndentedString(askSize)).append("\n");
    sb.append("    askPrice: ").append(toIndentedString(askPrice)).append("\n");
    sb.append("    bidPrice: ").append(toIndentedString(bidPrice)).append("\n");
    sb.append("    bidSize: ").append(toIndentedString(bidSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("symbol", "timestamp_nanos", "timestamp", "is_symbol_available", "is_pre_post_market_session", "ask_size", "ask_price", "bid_price", "bid_size"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Level1QuoteUpdateModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Level1QuoteUpdateModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The required field(s) %s in Level1QuoteUpdateModel is not found in the empty JSON string", Level1QuoteUpdateModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Level1QuoteUpdateModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The field `%s` in the JSON string is not defined in the `Level1QuoteUpdateModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("symbol") != null && !jsonObj.get("symbol").isJsonNull()) && !jsonObj.get("symbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `symbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Level1QuoteUpdateModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Level1QuoteUpdateModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Level1QuoteUpdateModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Level1QuoteUpdateModel.class));

       return (TypeAdapter<T>) new TypeAdapter<Level1QuoteUpdateModel>() {
           @Override
           public void write(JsonWriter out, Level1QuoteUpdateModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Level1QuoteUpdateModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Level1QuoteUpdateModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Level1QuoteUpdateModel
   * @throws IOException if the JSON string is invalid with respect to Level1QuoteUpdateModel
   */
  public static Level1QuoteUpdateModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Level1QuoteUpdateModel.class);
  }

  /**
   * Convert an instance of Level1QuoteUpdateModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

