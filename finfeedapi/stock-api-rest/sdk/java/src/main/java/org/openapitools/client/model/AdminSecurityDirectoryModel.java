/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the response DTO for security directory information
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-06T06:07:59.075795092Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class AdminSecurityDirectoryModel {
  public static final String SERIALIZED_NAME_SYMBOL = "symbol";
  @SerializedName(SERIALIZED_NAME_SYMBOL)
  @javax.annotation.Nullable
  private String symbol;

  public static final String SERIALIZED_NAME_TIMESTAMP_NANOS = "timestamp_nanos";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP_NANOS)
  @javax.annotation.Nullable
  private Long timestampNanos;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  @javax.annotation.Nullable
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_FLAGS = "flags";
  @SerializedName(SERIALIZED_NAME_FLAGS)
  @javax.annotation.Nullable
  private Integer flags;

  public static final String SERIALIZED_NAME_ROUND_LOT_SIZE = "round_lot_size";
  @SerializedName(SERIALIZED_NAME_ROUND_LOT_SIZE)
  @javax.annotation.Nullable
  private Integer roundLotSize;

  public static final String SERIALIZED_NAME_ADJUSTED_POC_PRICE = "adjusted_poc_price";
  @SerializedName(SERIALIZED_NAME_ADJUSTED_POC_PRICE)
  @javax.annotation.Nullable
  private Double adjustedPocPrice;

  public static final String SERIALIZED_NAME_LULD_TIER = "luld_tier";
  @SerializedName(SERIALIZED_NAME_LULD_TIER)
  @javax.annotation.Nullable
  private Integer luldTier;

  public static final String SERIALIZED_NAME_LULD_TIER_CODE = "luld_tier_code";
  @SerializedName(SERIALIZED_NAME_LULD_TIER_CODE)
  @javax.annotation.Nullable
  private String luldTierCode;

  public static final String SERIALIZED_NAME_LULD_TIER_TEXT = "luld_tier_text";
  @SerializedName(SERIALIZED_NAME_LULD_TIER_TEXT)
  @javax.annotation.Nullable
  private String luldTierText;

  public static final String SERIALIZED_NAME_IS_LULD_TIER_NOT_APPLICABLE = "is_luld_tier_not_applicable";
  @SerializedName(SERIALIZED_NAME_IS_LULD_TIER_NOT_APPLICABLE)
  @javax.annotation.Nullable
  private Boolean isLuldTierNotApplicable;

  public static final String SERIALIZED_NAME_IS_LULD_TIER1 = "is_luld_tier1";
  @SerializedName(SERIALIZED_NAME_IS_LULD_TIER1)
  @javax.annotation.Nullable
  private Boolean isLuldTier1;

  public static final String SERIALIZED_NAME_IS_LULD_TIER2 = "is_luld_tier2";
  @SerializedName(SERIALIZED_NAME_IS_LULD_TIER2)
  @javax.annotation.Nullable
  private Boolean isLuldTier2;

  public AdminSecurityDirectoryModel() {
  }

  public AdminSecurityDirectoryModel symbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
    return this;
  }

  /**
   * The stock symbol
   * @return symbol
   */
  @javax.annotation.Nullable
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }


  public AdminSecurityDirectoryModel timestampNanos(@javax.annotation.Nullable Long timestampNanos) {
    this.timestampNanos = timestampNanos;
    return this;
  }

  /**
   * Original timestamp in nanoseconds since epoch
   * @return timestampNanos
   */
  @javax.annotation.Nullable
  public Long getTimestampNanos() {
    return timestampNanos;
  }

  public void setTimestampNanos(@javax.annotation.Nullable Long timestampNanos) {
    this.timestampNanos = timestampNanos;
  }


  public AdminSecurityDirectoryModel timestamp(@javax.annotation.Nullable OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Time when the security directory information was recorded as DateTime
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(@javax.annotation.Nullable OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  public AdminSecurityDirectoryModel flags(@javax.annotation.Nullable Integer flags) {
    this.flags = flags;
    return this;
  }

  /**
   * Flags for the security
   * @return flags
   */
  @javax.annotation.Nullable
  public Integer getFlags() {
    return flags;
  }

  public void setFlags(@javax.annotation.Nullable Integer flags) {
    this.flags = flags;
  }


  public AdminSecurityDirectoryModel roundLotSize(@javax.annotation.Nullable Integer roundLotSize) {
    this.roundLotSize = roundLotSize;
    return this;
  }

  /**
   * Number of shares that represent a round lot
   * @return roundLotSize
   */
  @javax.annotation.Nullable
  public Integer getRoundLotSize() {
    return roundLotSize;
  }

  public void setRoundLotSize(@javax.annotation.Nullable Integer roundLotSize) {
    this.roundLotSize = roundLotSize;
  }


  public AdminSecurityDirectoryModel adjustedPocPrice(@javax.annotation.Nullable Double adjustedPocPrice) {
    this.adjustedPocPrice = adjustedPocPrice;
    return this;
  }

  /**
   * Adjusted previous official closing price as decimal
   * @return adjustedPocPrice
   */
  @javax.annotation.Nullable
  public Double getAdjustedPocPrice() {
    return adjustedPocPrice;
  }

  public void setAdjustedPocPrice(@javax.annotation.Nullable Double adjustedPocPrice) {
    this.adjustedPocPrice = adjustedPocPrice;
  }


  public AdminSecurityDirectoryModel luldTier(@javax.annotation.Nullable Integer luldTier) {
    this.luldTier = luldTier;
    return this;
  }

  /**
   * LULD tier as byte value
   * @return luldTier
   */
  @javax.annotation.Nullable
  public Integer getLuldTier() {
    return luldTier;
  }

  public void setLuldTier(@javax.annotation.Nullable Integer luldTier) {
    this.luldTier = luldTier;
  }


  public AdminSecurityDirectoryModel luldTierCode(@javax.annotation.Nullable String luldTierCode) {
    this.luldTierCode = luldTierCode;
    return this;
  }

  /**
   * LULD tier as numeric string
   * @return luldTierCode
   */
  @javax.annotation.Nullable
  public String getLuldTierCode() {
    return luldTierCode;
  }

  public void setLuldTierCode(@javax.annotation.Nullable String luldTierCode) {
    this.luldTierCode = luldTierCode;
  }


  public AdminSecurityDirectoryModel luldTierText(@javax.annotation.Nullable String luldTierText) {
    this.luldTierText = luldTierText;
    return this;
  }

  /**
   * Human-readable description of the LULD tier
   * @return luldTierText
   */
  @javax.annotation.Nullable
  public String getLuldTierText() {
    return luldTierText;
  }

  public void setLuldTierText(@javax.annotation.Nullable String luldTierText) {
    this.luldTierText = luldTierText;
  }


  public AdminSecurityDirectoryModel isLuldTierNotApplicable(@javax.annotation.Nullable Boolean isLuldTierNotApplicable) {
    this.isLuldTierNotApplicable = isLuldTierNotApplicable;
    return this;
  }

  /**
   * Indicates if LULD Tier is &#39;Not applicable&#39; (0x0).
   * @return isLuldTierNotApplicable
   */
  @javax.annotation.Nullable
  public Boolean getIsLuldTierNotApplicable() {
    return isLuldTierNotApplicable;
  }

  public void setIsLuldTierNotApplicable(@javax.annotation.Nullable Boolean isLuldTierNotApplicable) {
    this.isLuldTierNotApplicable = isLuldTierNotApplicable;
  }


  public AdminSecurityDirectoryModel isLuldTier1(@javax.annotation.Nullable Boolean isLuldTier1) {
    this.isLuldTier1 = isLuldTier1;
    return this;
  }

  /**
   * Indicates if LULD Tier is &#39;Tier 1 NMS Stock&#39; (0x1).
   * @return isLuldTier1
   */
  @javax.annotation.Nullable
  public Boolean getIsLuldTier1() {
    return isLuldTier1;
  }

  public void setIsLuldTier1(@javax.annotation.Nullable Boolean isLuldTier1) {
    this.isLuldTier1 = isLuldTier1;
  }


  public AdminSecurityDirectoryModel isLuldTier2(@javax.annotation.Nullable Boolean isLuldTier2) {
    this.isLuldTier2 = isLuldTier2;
    return this;
  }

  /**
   * Indicates if LULD Tier is &#39;Tier 2 NMS Stock&#39; (0x2).
   * @return isLuldTier2
   */
  @javax.annotation.Nullable
  public Boolean getIsLuldTier2() {
    return isLuldTier2;
  }

  public void setIsLuldTier2(@javax.annotation.Nullable Boolean isLuldTier2) {
    this.isLuldTier2 = isLuldTier2;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminSecurityDirectoryModel adminSecurityDirectoryModel = (AdminSecurityDirectoryModel) o;
    return Objects.equals(this.symbol, adminSecurityDirectoryModel.symbol) &&
        Objects.equals(this.timestampNanos, adminSecurityDirectoryModel.timestampNanos) &&
        Objects.equals(this.timestamp, adminSecurityDirectoryModel.timestamp) &&
        Objects.equals(this.flags, adminSecurityDirectoryModel.flags) &&
        Objects.equals(this.roundLotSize, adminSecurityDirectoryModel.roundLotSize) &&
        Objects.equals(this.adjustedPocPrice, adminSecurityDirectoryModel.adjustedPocPrice) &&
        Objects.equals(this.luldTier, adminSecurityDirectoryModel.luldTier) &&
        Objects.equals(this.luldTierCode, adminSecurityDirectoryModel.luldTierCode) &&
        Objects.equals(this.luldTierText, adminSecurityDirectoryModel.luldTierText) &&
        Objects.equals(this.isLuldTierNotApplicable, adminSecurityDirectoryModel.isLuldTierNotApplicable) &&
        Objects.equals(this.isLuldTier1, adminSecurityDirectoryModel.isLuldTier1) &&
        Objects.equals(this.isLuldTier2, adminSecurityDirectoryModel.isLuldTier2);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, timestampNanos, timestamp, flags, roundLotSize, adjustedPocPrice, luldTier, luldTierCode, luldTierText, isLuldTierNotApplicable, isLuldTier1, isLuldTier2);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminSecurityDirectoryModel {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    timestampNanos: ").append(toIndentedString(timestampNanos)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    roundLotSize: ").append(toIndentedString(roundLotSize)).append("\n");
    sb.append("    adjustedPocPrice: ").append(toIndentedString(adjustedPocPrice)).append("\n");
    sb.append("    luldTier: ").append(toIndentedString(luldTier)).append("\n");
    sb.append("    luldTierCode: ").append(toIndentedString(luldTierCode)).append("\n");
    sb.append("    luldTierText: ").append(toIndentedString(luldTierText)).append("\n");
    sb.append("    isLuldTierNotApplicable: ").append(toIndentedString(isLuldTierNotApplicable)).append("\n");
    sb.append("    isLuldTier1: ").append(toIndentedString(isLuldTier1)).append("\n");
    sb.append("    isLuldTier2: ").append(toIndentedString(isLuldTier2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("symbol", "timestamp_nanos", "timestamp", "flags", "round_lot_size", "adjusted_poc_price", "luld_tier", "luld_tier_code", "luld_tier_text", "is_luld_tier_not_applicable", "is_luld_tier1", "is_luld_tier2"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdminSecurityDirectoryModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdminSecurityDirectoryModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdminSecurityDirectoryModel is not found in the empty JSON string", AdminSecurityDirectoryModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdminSecurityDirectoryModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdminSecurityDirectoryModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("symbol") != null && !jsonObj.get("symbol").isJsonNull()) && !jsonObj.get("symbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `symbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol").toString()));
      }
      if ((jsonObj.get("luld_tier_code") != null && !jsonObj.get("luld_tier_code").isJsonNull()) && !jsonObj.get("luld_tier_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `luld_tier_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("luld_tier_code").toString()));
      }
      if ((jsonObj.get("luld_tier_text") != null && !jsonObj.get("luld_tier_text").isJsonNull()) && !jsonObj.get("luld_tier_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `luld_tier_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("luld_tier_text").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdminSecurityDirectoryModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdminSecurityDirectoryModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdminSecurityDirectoryModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdminSecurityDirectoryModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AdminSecurityDirectoryModel>() {
           @Override
           public void write(JsonWriter out, AdminSecurityDirectoryModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdminSecurityDirectoryModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdminSecurityDirectoryModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdminSecurityDirectoryModel
   * @throws IOException if the JSON string is invalid with respect to AdminSecurityDirectoryModel
   */
  public static AdminSecurityDirectoryModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdminSecurityDirectoryModel.class);
  }

  /**
   * Convert an instance of AdminSecurityDirectoryModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

