/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FinFeedAPISymbolModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-06T06:07:59.075795092Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class FinFeedAPISymbolModel {
  public static final String SERIALIZED_NAME_SYMBOL_ID = "symbol_id";
  @SerializedName(SERIALIZED_NAME_SYMBOL_ID)
  @javax.annotation.Nullable
  private String symbolId;

  public static final String SERIALIZED_NAME_EXCHANGE_ID = "exchange_id";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_ID)
  @javax.annotation.Nullable
  private String exchangeId;

  public static final String SERIALIZED_NAME_SECURITY_CATEGORY = "security_category";
  @SerializedName(SERIALIZED_NAME_SECURITY_CATEGORY)
  @javax.annotation.Nullable
  private String securityCategory;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  @javax.annotation.Nullable
  private String date;

  public static final String SERIALIZED_NAME_ASSET_CLASS = "asset_class";
  @SerializedName(SERIALIZED_NAME_ASSET_CLASS)
  @javax.annotation.Nullable
  private String assetClass;

  public static final String SERIALIZED_NAME_CFI_CODE = "cfi_code";
  @SerializedName(SERIALIZED_NAME_CFI_CODE)
  @javax.annotation.Nullable
  private String cfiCode;

  public static final String SERIALIZED_NAME_CFI_CATEGORY = "cfi_category";
  @SerializedName(SERIALIZED_NAME_CFI_CATEGORY)
  @javax.annotation.Nullable
  private String cfiCategory;

  public static final String SERIALIZED_NAME_CFI_GROUP = "cfi_group";
  @SerializedName(SERIALIZED_NAME_CFI_GROUP)
  @javax.annotation.Nullable
  private String cfiGroup;

  public static final String SERIALIZED_NAME_CFI_ATTRIBUTE1 = "cfi_attribute1";
  @SerializedName(SERIALIZED_NAME_CFI_ATTRIBUTE1)
  @javax.annotation.Nullable
  private String cfiAttribute1;

  public static final String SERIALIZED_NAME_CFI_ATTRIBUTE2 = "cfi_attribute2";
  @SerializedName(SERIALIZED_NAME_CFI_ATTRIBUTE2)
  @javax.annotation.Nullable
  private String cfiAttribute2;

  public static final String SERIALIZED_NAME_CFI_ATTRIBUTE3 = "cfi_attribute3";
  @SerializedName(SERIALIZED_NAME_CFI_ATTRIBUTE3)
  @javax.annotation.Nullable
  private String cfiAttribute3;

  public static final String SERIALIZED_NAME_CFI_ATTRIBUTE4 = "cfi_attribute4";
  @SerializedName(SERIALIZED_NAME_CFI_ATTRIBUTE4)
  @javax.annotation.Nullable
  private String cfiAttribute4;

  public static final String SERIALIZED_NAME_CFI_CATEGORY_DESC = "cfi_category_desc";
  @SerializedName(SERIALIZED_NAME_CFI_CATEGORY_DESC)
  @javax.annotation.Nullable
  private String cfiCategoryDesc;

  public static final String SERIALIZED_NAME_CFI_GROUP_DESC = "cfi_group_desc";
  @SerializedName(SERIALIZED_NAME_CFI_GROUP_DESC)
  @javax.annotation.Nullable
  private String cfiGroupDesc;

  public static final String SERIALIZED_NAME_CFI_ATTRIBUTE1_DESC = "cfi_attribute1_desc";
  @SerializedName(SERIALIZED_NAME_CFI_ATTRIBUTE1_DESC)
  @javax.annotation.Nullable
  private String cfiAttribute1Desc;

  public static final String SERIALIZED_NAME_CFI_ATTRIBUTE2_DESC = "cfi_attribute2_desc";
  @SerializedName(SERIALIZED_NAME_CFI_ATTRIBUTE2_DESC)
  @javax.annotation.Nullable
  private String cfiAttribute2Desc;

  public static final String SERIALIZED_NAME_CFI_ATTRIBUTE3_DESC = "cfi_attribute3_desc";
  @SerializedName(SERIALIZED_NAME_CFI_ATTRIBUTE3_DESC)
  @javax.annotation.Nullable
  private String cfiAttribute3Desc;

  public static final String SERIALIZED_NAME_CFI_ATTRIBUTE4_DESC = "cfi_attribute4_desc";
  @SerializedName(SERIALIZED_NAME_CFI_ATTRIBUTE4_DESC)
  @javax.annotation.Nullable
  private String cfiAttribute4Desc;

  public FinFeedAPISymbolModel() {
  }

  public FinFeedAPISymbolModel(
     String securityCategory, 
     String cfiCategory, 
     String cfiGroup, 
     String cfiAttribute1, 
     String cfiAttribute2, 
     String cfiAttribute3, 
     String cfiAttribute4, 
     String cfiCategoryDesc, 
     String cfiGroupDesc, 
     String cfiAttribute1Desc, 
     String cfiAttribute2Desc, 
     String cfiAttribute3Desc, 
     String cfiAttribute4Desc
  ) {
    this();
    this.securityCategory = securityCategory;
    this.cfiCategory = cfiCategory;
    this.cfiGroup = cfiGroup;
    this.cfiAttribute1 = cfiAttribute1;
    this.cfiAttribute2 = cfiAttribute2;
    this.cfiAttribute3 = cfiAttribute3;
    this.cfiAttribute4 = cfiAttribute4;
    this.cfiCategoryDesc = cfiCategoryDesc;
    this.cfiGroupDesc = cfiGroupDesc;
    this.cfiAttribute1Desc = cfiAttribute1Desc;
    this.cfiAttribute2Desc = cfiAttribute2Desc;
    this.cfiAttribute3Desc = cfiAttribute3Desc;
    this.cfiAttribute4Desc = cfiAttribute4Desc;
  }

  public FinFeedAPISymbolModel symbolId(@javax.annotation.Nullable String symbolId) {
    this.symbolId = symbolId;
    return this;
  }

  /**
   * Get symbolId
   * @return symbolId
   */
  @javax.annotation.Nullable
  public String getSymbolId() {
    return symbolId;
  }

  public void setSymbolId(@javax.annotation.Nullable String symbolId) {
    this.symbolId = symbolId;
  }


  public FinFeedAPISymbolModel exchangeId(@javax.annotation.Nullable String exchangeId) {
    this.exchangeId = exchangeId;
    return this;
  }

  /**
   * Get exchangeId
   * @return exchangeId
   */
  @javax.annotation.Nullable
  public String getExchangeId() {
    return exchangeId;
  }

  public void setExchangeId(@javax.annotation.Nullable String exchangeId) {
    this.exchangeId = exchangeId;
  }


  /**
   * Get securityCategory
   * @return securityCategory
   */
  @javax.annotation.Nullable
  public String getSecurityCategory() {
    return securityCategory;
  }



  public FinFeedAPISymbolModel name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public FinFeedAPISymbolModel date(@javax.annotation.Nullable String date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  public String getDate() {
    return date;
  }

  public void setDate(@javax.annotation.Nullable String date) {
    this.date = date;
  }


  public FinFeedAPISymbolModel assetClass(@javax.annotation.Nullable String assetClass) {
    this.assetClass = assetClass;
    return this;
  }

  /**
   * Get assetClass
   * @return assetClass
   */
  @javax.annotation.Nullable
  public String getAssetClass() {
    return assetClass;
  }

  public void setAssetClass(@javax.annotation.Nullable String assetClass) {
    this.assetClass = assetClass;
  }


  public FinFeedAPISymbolModel cfiCode(@javax.annotation.Nullable String cfiCode) {
    this.cfiCode = cfiCode;
    return this;
  }

  /**
   * Get cfiCode
   * @return cfiCode
   */
  @javax.annotation.Nullable
  public String getCfiCode() {
    return cfiCode;
  }

  public void setCfiCode(@javax.annotation.Nullable String cfiCode) {
    this.cfiCode = cfiCode;
  }


  /**
   * Get cfiCategory
   * @return cfiCategory
   */
  @javax.annotation.Nullable
  public String getCfiCategory() {
    return cfiCategory;
  }



  /**
   * Get cfiGroup
   * @return cfiGroup
   */
  @javax.annotation.Nullable
  public String getCfiGroup() {
    return cfiGroup;
  }



  /**
   * Get cfiAttribute1
   * @return cfiAttribute1
   */
  @javax.annotation.Nullable
  public String getCfiAttribute1() {
    return cfiAttribute1;
  }



  /**
   * Get cfiAttribute2
   * @return cfiAttribute2
   */
  @javax.annotation.Nullable
  public String getCfiAttribute2() {
    return cfiAttribute2;
  }



  /**
   * Get cfiAttribute3
   * @return cfiAttribute3
   */
  @javax.annotation.Nullable
  public String getCfiAttribute3() {
    return cfiAttribute3;
  }



  /**
   * Get cfiAttribute4
   * @return cfiAttribute4
   */
  @javax.annotation.Nullable
  public String getCfiAttribute4() {
    return cfiAttribute4;
  }



  /**
   * Get cfiCategoryDesc
   * @return cfiCategoryDesc
   */
  @javax.annotation.Nullable
  public String getCfiCategoryDesc() {
    return cfiCategoryDesc;
  }



  /**
   * Get cfiGroupDesc
   * @return cfiGroupDesc
   */
  @javax.annotation.Nullable
  public String getCfiGroupDesc() {
    return cfiGroupDesc;
  }



  /**
   * Get cfiAttribute1Desc
   * @return cfiAttribute1Desc
   */
  @javax.annotation.Nullable
  public String getCfiAttribute1Desc() {
    return cfiAttribute1Desc;
  }



  /**
   * Get cfiAttribute2Desc
   * @return cfiAttribute2Desc
   */
  @javax.annotation.Nullable
  public String getCfiAttribute2Desc() {
    return cfiAttribute2Desc;
  }



  /**
   * Get cfiAttribute3Desc
   * @return cfiAttribute3Desc
   */
  @javax.annotation.Nullable
  public String getCfiAttribute3Desc() {
    return cfiAttribute3Desc;
  }



  /**
   * Get cfiAttribute4Desc
   * @return cfiAttribute4Desc
   */
  @javax.annotation.Nullable
  public String getCfiAttribute4Desc() {
    return cfiAttribute4Desc;
  }


  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FinFeedAPISymbolModel instance itself
   */
  public FinFeedAPISymbolModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinFeedAPISymbolModel finFeedAPISymbolModel = (FinFeedAPISymbolModel) o;
    return Objects.equals(this.symbolId, finFeedAPISymbolModel.symbolId) &&
        Objects.equals(this.exchangeId, finFeedAPISymbolModel.exchangeId) &&
        Objects.equals(this.securityCategory, finFeedAPISymbolModel.securityCategory) &&
        Objects.equals(this.name, finFeedAPISymbolModel.name) &&
        Objects.equals(this.date, finFeedAPISymbolModel.date) &&
        Objects.equals(this.assetClass, finFeedAPISymbolModel.assetClass) &&
        Objects.equals(this.cfiCode, finFeedAPISymbolModel.cfiCode) &&
        Objects.equals(this.cfiCategory, finFeedAPISymbolModel.cfiCategory) &&
        Objects.equals(this.cfiGroup, finFeedAPISymbolModel.cfiGroup) &&
        Objects.equals(this.cfiAttribute1, finFeedAPISymbolModel.cfiAttribute1) &&
        Objects.equals(this.cfiAttribute2, finFeedAPISymbolModel.cfiAttribute2) &&
        Objects.equals(this.cfiAttribute3, finFeedAPISymbolModel.cfiAttribute3) &&
        Objects.equals(this.cfiAttribute4, finFeedAPISymbolModel.cfiAttribute4) &&
        Objects.equals(this.cfiCategoryDesc, finFeedAPISymbolModel.cfiCategoryDesc) &&
        Objects.equals(this.cfiGroupDesc, finFeedAPISymbolModel.cfiGroupDesc) &&
        Objects.equals(this.cfiAttribute1Desc, finFeedAPISymbolModel.cfiAttribute1Desc) &&
        Objects.equals(this.cfiAttribute2Desc, finFeedAPISymbolModel.cfiAttribute2Desc) &&
        Objects.equals(this.cfiAttribute3Desc, finFeedAPISymbolModel.cfiAttribute3Desc) &&
        Objects.equals(this.cfiAttribute4Desc, finFeedAPISymbolModel.cfiAttribute4Desc)&&
        Objects.equals(this.additionalProperties, finFeedAPISymbolModel.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbolId, exchangeId, securityCategory, name, date, assetClass, cfiCode, cfiCategory, cfiGroup, cfiAttribute1, cfiAttribute2, cfiAttribute3, cfiAttribute4, cfiCategoryDesc, cfiGroupDesc, cfiAttribute1Desc, cfiAttribute2Desc, cfiAttribute3Desc, cfiAttribute4Desc, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinFeedAPISymbolModel {\n");
    sb.append("    symbolId: ").append(toIndentedString(symbolId)).append("\n");
    sb.append("    exchangeId: ").append(toIndentedString(exchangeId)).append("\n");
    sb.append("    securityCategory: ").append(toIndentedString(securityCategory)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    assetClass: ").append(toIndentedString(assetClass)).append("\n");
    sb.append("    cfiCode: ").append(toIndentedString(cfiCode)).append("\n");
    sb.append("    cfiCategory: ").append(toIndentedString(cfiCategory)).append("\n");
    sb.append("    cfiGroup: ").append(toIndentedString(cfiGroup)).append("\n");
    sb.append("    cfiAttribute1: ").append(toIndentedString(cfiAttribute1)).append("\n");
    sb.append("    cfiAttribute2: ").append(toIndentedString(cfiAttribute2)).append("\n");
    sb.append("    cfiAttribute3: ").append(toIndentedString(cfiAttribute3)).append("\n");
    sb.append("    cfiAttribute4: ").append(toIndentedString(cfiAttribute4)).append("\n");
    sb.append("    cfiCategoryDesc: ").append(toIndentedString(cfiCategoryDesc)).append("\n");
    sb.append("    cfiGroupDesc: ").append(toIndentedString(cfiGroupDesc)).append("\n");
    sb.append("    cfiAttribute1Desc: ").append(toIndentedString(cfiAttribute1Desc)).append("\n");
    sb.append("    cfiAttribute2Desc: ").append(toIndentedString(cfiAttribute2Desc)).append("\n");
    sb.append("    cfiAttribute3Desc: ").append(toIndentedString(cfiAttribute3Desc)).append("\n");
    sb.append("    cfiAttribute4Desc: ").append(toIndentedString(cfiAttribute4Desc)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("symbol_id", "exchange_id", "security_category", "name", "date", "asset_class", "cfi_code", "cfi_category", "cfi_group", "cfi_attribute1", "cfi_attribute2", "cfi_attribute3", "cfi_attribute4", "cfi_category_desc", "cfi_group_desc", "cfi_attribute1_desc", "cfi_attribute2_desc", "cfi_attribute3_desc", "cfi_attribute4_desc"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FinFeedAPISymbolModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FinFeedAPISymbolModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FinFeedAPISymbolModel is not found in the empty JSON string", FinFeedAPISymbolModel.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("symbol_id") != null && !jsonObj.get("symbol_id").isJsonNull()) && !jsonObj.get("symbol_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `symbol_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol_id").toString()));
      }
      if ((jsonObj.get("exchange_id") != null && !jsonObj.get("exchange_id").isJsonNull()) && !jsonObj.get("exchange_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exchange_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchange_id").toString()));
      }
      if ((jsonObj.get("security_category") != null && !jsonObj.get("security_category").isJsonNull()) && !jsonObj.get("security_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `security_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("security_category").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) && !jsonObj.get("date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date").toString()));
      }
      if ((jsonObj.get("asset_class") != null && !jsonObj.get("asset_class").isJsonNull()) && !jsonObj.get("asset_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_class").toString()));
      }
      if ((jsonObj.get("cfi_code") != null && !jsonObj.get("cfi_code").isJsonNull()) && !jsonObj.get("cfi_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_code").toString()));
      }
      if ((jsonObj.get("cfi_category") != null && !jsonObj.get("cfi_category").isJsonNull()) && !jsonObj.get("cfi_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_category").toString()));
      }
      if ((jsonObj.get("cfi_group") != null && !jsonObj.get("cfi_group").isJsonNull()) && !jsonObj.get("cfi_group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_group").toString()));
      }
      if ((jsonObj.get("cfi_attribute1") != null && !jsonObj.get("cfi_attribute1").isJsonNull()) && !jsonObj.get("cfi_attribute1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_attribute1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_attribute1").toString()));
      }
      if ((jsonObj.get("cfi_attribute2") != null && !jsonObj.get("cfi_attribute2").isJsonNull()) && !jsonObj.get("cfi_attribute2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_attribute2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_attribute2").toString()));
      }
      if ((jsonObj.get("cfi_attribute3") != null && !jsonObj.get("cfi_attribute3").isJsonNull()) && !jsonObj.get("cfi_attribute3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_attribute3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_attribute3").toString()));
      }
      if ((jsonObj.get("cfi_attribute4") != null && !jsonObj.get("cfi_attribute4").isJsonNull()) && !jsonObj.get("cfi_attribute4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_attribute4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_attribute4").toString()));
      }
      if ((jsonObj.get("cfi_category_desc") != null && !jsonObj.get("cfi_category_desc").isJsonNull()) && !jsonObj.get("cfi_category_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_category_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_category_desc").toString()));
      }
      if ((jsonObj.get("cfi_group_desc") != null && !jsonObj.get("cfi_group_desc").isJsonNull()) && !jsonObj.get("cfi_group_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_group_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_group_desc").toString()));
      }
      if ((jsonObj.get("cfi_attribute1_desc") != null && !jsonObj.get("cfi_attribute1_desc").isJsonNull()) && !jsonObj.get("cfi_attribute1_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_attribute1_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_attribute1_desc").toString()));
      }
      if ((jsonObj.get("cfi_attribute2_desc") != null && !jsonObj.get("cfi_attribute2_desc").isJsonNull()) && !jsonObj.get("cfi_attribute2_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_attribute2_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_attribute2_desc").toString()));
      }
      if ((jsonObj.get("cfi_attribute3_desc") != null && !jsonObj.get("cfi_attribute3_desc").isJsonNull()) && !jsonObj.get("cfi_attribute3_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_attribute3_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_attribute3_desc").toString()));
      }
      if ((jsonObj.get("cfi_attribute4_desc") != null && !jsonObj.get("cfi_attribute4_desc").isJsonNull()) && !jsonObj.get("cfi_attribute4_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfi_attribute4_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfi_attribute4_desc").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FinFeedAPISymbolModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FinFeedAPISymbolModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FinFeedAPISymbolModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FinFeedAPISymbolModel.class));

       return (TypeAdapter<T>) new TypeAdapter<FinFeedAPISymbolModel>() {
           @Override
           public void write(JsonWriter out, FinFeedAPISymbolModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FinFeedAPISymbolModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             FinFeedAPISymbolModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FinFeedAPISymbolModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FinFeedAPISymbolModel
   * @throws IOException if the JSON string is invalid with respect to FinFeedAPISymbolModel
   */
  public static FinFeedAPISymbolModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FinFeedAPISymbolModel.class);
  }

  /**
   * Convert an instance of FinFeedAPISymbolModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

